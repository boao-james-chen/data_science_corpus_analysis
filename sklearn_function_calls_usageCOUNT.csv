File Path,Line Number,Function Call
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/impute.py,136,>>> imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/impute.py,386,"warm_start=False, **fit_params).fit(train, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/impute.py,440,preds = model.predict(test)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/base.py,148,"self.estimator_.fit(X[cols], **fit_kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/base.py,183,transform = est.transform(X[cols])
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/base.py,340,">>> search.fit(X, y)  # doctest: +SKIP"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/spatial.py,157,>>> est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/spatial.py,186,"self.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/dates.py,108,>>> DateFactorizer(cols=['b']).fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/dates.py,149,"self.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/dates.py,355,>>> tdf.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/dates.py,366,">>> TimeDeltaFeatures(cols=['c', 'b'], units='hours').fit_transform(df)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/dates.py,404,"self.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/interact.py,89,>>> X_transform = trans.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_dates.py,37,trans = fact.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_dates.py,41,assert trans.equals(fact.transform(df))
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_dates.py,53,drop_original=False).fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_dates.py,66,trans = tbe.fit_transform(df2)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_dates.py,72,assert trans.equals(tbe.transform(df2))
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_dates.py,76,trans = tbe.fit_transform(df2)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_dates.py,81,trans = tbe.fit_transform(df2)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_dates.py,87,trans = tbe.fit_transform(df2)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_spatial.py,43,trans = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_spatial.py,56,trans = est.fit(X).transform(X)  # make sure the fit and transform work
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_spatial.py,71,trans = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_interact.py,28,X_trans = trans.fit_transform(X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_interact.py,57,X_trans = trans.fit_transform(X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_extraction/tests/test_interact.py,75,X_trans = trans.fit_transform(X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/tests/test_pipe.py,50,"pipe.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/tests/test_pipe.py,62,"pipe.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/tests/test_pipe.py,102,"search.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/tests/test_impute.py,108,trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/tests/test_impute.py,143,trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/tests/test_impute.py,159,trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/tests/test_impute.py,180,trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/tests/test_impute.py,192,trans = imputer.fit_transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/balance/smote.py,48,transformed_label = label_encoder.transform([label])[0]
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/balance/smote.py,72,model.fit(X_sub)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/balance/smote.py,286,le.fit(present_classes)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/balance/smote.py,287,y_transform = le.transform(y)  # make numeric
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/balance/over.py,72,le.fit(present_classes)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/balance/over.py,73,y_transform = le.transform(y)  # make numeric
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/balance/over.py,84,label_transform = le.transform([label])[0]
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/model_validation/tests/test_validators.py,15,DistHypothesisValidator().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/model_validation/tests/test_validators.py,16,DistHypothesisValidator().fit_transform(
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/model_validation/tests/test_validators.py,21,"DistHypothesisValidator(action=""raise"").fit(X).transform,"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/model_validation/tests/test_validators.py,26,CustomValidator().fit_transform(X)  # works when func=None
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/model_validation/tests/test_validators.py,30,CustomValidator(func=sub_2).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/model_validation/tests/test_validators.py,35,"func=sub_2).fit(X).transform,"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/model_validation/tests/test_validators.py,53,val.fit(train).transform(test)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/model_validation/tests/test_validators.py,64,val.transform(t2)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/testing.py,78,"est.fit(X, y, **fit_kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/testing.py,79,"trans1 = est.transform(X) if hasattr(est, ""transform"") \"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/testing.py,80,else est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/testing.py,85,"trans2 = est_loaded.transform(X) if hasattr(est_loaded, ""transform"") \"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/testing.py,86,else est_loaded.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/testing.py,169,"est.fit(X, y, **fit_kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/testing.py,170,array_transform = est.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/testing.py,177,df_transform = est.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/profiling.py,43,>>> scl = SelectiveStandardScaler().fit(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/utils/profiling.py,54,... ]).fit(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/combos.py,54,>>> X_transform = filterer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/select.py,62,>>> X_transform = dropper.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/select.py,156,>>> X_transform = dropper.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/select.py,224,>>> mcf.fit_transform(X).head()
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/select.py,393,>>> flt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/select.py,407,>>> nzv.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_select.py,33,trans = flt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_select.py,49,trans = nzv.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_select.py,79,trans = mcf.fit_transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_select.py,89,trans = mcf.fit_transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_select.py,117,trans = dpr.fit_transform(iris)  # type: pd.DataFrame
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_select.py,127,trans = dpr.fit_transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_select.py,144,trans = sps_filter.fit_transform(sparse)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_select.py,153,trans = sps_filter.fit_transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_combos.py,176,lcf = LinearCombinationFilter().fit(Z)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_combos.py,179,z = lcf.transform(Z)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_combos.py,184,"lcf = LinearCombinationFilter(cols=['A', 'B']).fit(Z)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/feature_selection/tests/test_combos.py,186,assert Z.equals(lcf.transform(Z))
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/binning.py,235,>>> trans = binner.fit_transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/encode.py,43,le.transform(vec[~missing_mask])
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/encode.py,55,"vec_trans = le.transform(vec)  # Union[str, int] -> int"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/encode.py,71,trans = le.fit_transform(vec)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/encode.py,192,handle_unknown=handle).fit(X[cols])
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/encode.py,256,"ohe_trans = pd.DataFrame.from_records(data=ohe.transform(X[cols]),"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/dates.py,97,>>> converter.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/dates.py,152,"self.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_binning.py,17,binner.fit(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_binning.py,18,trans = binner.transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_binning.py,32,trans2 = binner.transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_binning.py,47,binner.fit(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_binning.py,48,trans = binner.transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_binning.py,63,trans2 = binner.transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_binning.py,75,binner.fit(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_binning.py,76,trans = binner.transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_skewness.py,63,trans = bc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_skewness.py,74,trans = yj.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_skewness.py,89,YeoJohnsonTransformer().fit(x)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_dates.py,31,trans = converter.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_dates.py,52,"DateTransformer(cols=[""a""], allowed_types=(""int64"")).fit(df)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_scale.py,48,"cols=cols, trans_col_name=[cols[0]]).fit(original)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_scale.py,49,transformed = transformer.transform(original)[original.columns]
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_scale.py,65,rb_scale = RobustScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_scale.py,66,trans = SelectiveRobustScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_scale.py,68,"assert_array_almost_equal(rb_scale.fit_transform(X),"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_scale.py,69,trans.transform(X).values)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_schema.py,12,norm = SchemaNormalizer(schema).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_schema.py,13,trans = norm.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_encode.py,23,encoder.fit(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_encode.py,34,trans = encoder.transform(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_encode.py,43,le.fit(vec1)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_encode.py,71,encoder.fit(iris)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/preprocessing/tests/test_encode.py,79,trans = encoder.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/decomposition/tests/test_decompose.py,31,"trans_col_name=""PC"").fit(original)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/decomposition/tests/test_decompose.py,32,transformed = transformer.transform(original)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/decomposition/tests/test_decompose.py,66,"trans_col_name=""Concept"").fit(original)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/decomposition/tests/test_decompose.py,67,transformed = transformer.transform(original)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/decomposition/tests/test_decompose.py,89,trans = nmf.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/decomposition/tests/test_decompose.py,102,trans = kpca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/skoot/decomposition/tests/test_decompose.py,115,trans = ipca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/ex_anonymous_transformer.py,57,"pipe.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/ex_anonymous_transformer.py,59,print(pipe.transform(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/feature_extraction/ex_date_extraction.py,36,print(DateFactorizer(cols=['time']).fit_transform(df))
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/feature_extraction/ex_date_extraction.py,42,"""hour"", ""minute"", ""second"")).fit_transform(df))"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/feature_extraction/ex_date_extraction.py,49,"""hour"", ""minute"", ""second"")).fit_transform(df))"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/model_validation/ex_hypothesis_validation.py,43,"pipe.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/model_validation/ex_hypothesis_validation.py,44,pipe.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/model_validation/ex_hypothesis_validation.py,56,pipe.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/utils/ex_profiling.py,48,"pipe.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/preprocessing/ex_one_hot.py,39,"encoder.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/preprocessing/ex_one_hot.py,44,print(encoder.transform(X_test).head())
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/preprocessing/ex_one_hot.py,50,trans = encoder.transform(pd.DataFrame([test_row]))
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/preprocessing/ex_date_transformation.py,36,"print(DateTransformer(cols=['b', 'c']).fit_transform(df))"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/preprocessing/ex_date_transformation.py,41,"date_format=""%m/%d/%Y"").fit_transform(df))"
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/preprocessing/ex_date_transformation.py,48,allowed_types=allowed).fit_transform(df))
/Users/cba/Desktop/github_datascience_code/download_code/tgsmith61591_skoot/examples/preprocessing/ex_binning.py,28,print(binner.fit_transform(iris).head())
/Users/cba/Desktop/github_datascience_code/download_code/talhahascelik_python_stepwiseSelection/stepwiseSelection.py,129,"regressor = sm.OLS(y, X).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/talhahascelik_python_stepwiseSelection/stepwiseSelection.py,131,"regressor = sm.Logit(y, X).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/talhahascelik_python_stepwiseSelection/stepwiseSelection.py,135,"regressor = sm.OLS(y, X).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/talhahascelik_python_stepwiseSelection/stepwiseSelection.py,242,"regressor = sm.OLS(y, X).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/talhahascelik_python_stepwiseSelection/stepwiseSelection.py,244,"regressor = sm.Logit(y, X).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/talhahascelik_python_stepwiseSelection/stepwiseSelection.py,248,"regressor = sm.OLS(y, X).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/formlio_forml/tests/conftest.py,84,return self.predict(features[0])
/Users/cba/Desktop/github_datascience_code/download_code/formlio_forml/tests/pipeline/wrap/test_actor.py,118,"return wrap.Actor.type(train='fit', apply=lambda r, f: r.predict(f) or 'N/A')(origin).builder(case=True)"
/Users/cba/Desktop/github_datascience_code/download_code/formlio_forml/forml/evaluation/_stage.py,48,"value = self._metric.score(_api.Outcome(head.label.publisher, pipeline.apply.publisher))"
/Users/cba/Desktop/github_datascience_code/download_code/formlio_forml/forml/evaluation/_stage.py,66,value = self._metric.score(*outcomes)
/Users/cba/Desktop/github_datascience_code/download_code/formlio_forml/tutorials/titanic/titanic/pipeline/preprocessing.py,103,encoder.fit(features[columns])
/Users/cba/Desktop/github_datascience_code/download_code/formlio_forml/tutorials/titanic/titanic/pipeline/preprocessing.py,113,onehot = pandas.DataFrame(state.transform(features[columns]))
/Users/cba/Desktop/github_datascience_code/download_code/AMinerOpen_prediction_api/src/classifier.py,85,"ret[level_name] = self._clf[i].predict(text, ntop)"
/Users/cba/Desktop/github_datascience_code/download_code/AMinerOpen_prediction_api/src/gender.py,6,">>> print(g.predict(name='Jie Tang', org='Tsinghua University', image_url='http://www.cs.tsinghua.edu.cn/publish/cs/4616/20110330101939787483549/20190321114128398502759.jpg'))"
/Users/cba/Desktop/github_datascience_code/download_code/AMinerOpen_prediction_api/src/jobhopping.py,6,>>> print(j.predict('tsinghua university'))
/Users/cba/Desktop/github_datascience_code/download_code/AMinerOpen_prediction_api/src/tors.py,6,">>> print(identity.predict(pc=10, cn=10000, hi=40, gi=0, year_range=14))"
/Users/cba/Desktop/github_datascience_code/download_code/AMinerOpen_prediction_api/src/tors.py,47,output = self._md.predict(input_fn=lambda: self._pre_progress(input))
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter6/cv.py,22,"lr.fit(X_train, y_train, max_iter=100)"
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter6/cv.py,24,y_hat = lr.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter6/test_gbm.py,26,gbm.fit(max_tree=200)
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter6/xgb.py,32,pred = model.predict(dtest)
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter6/linear_regression_ad.py,22,y_hat = self.predict(self.x)
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter6/gbm.py,49,y_hat += np.array(tree.predict(x_new))
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter6/gbm.py,85,y_hat = self.predict(self.x_test)
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter5/lasso.py,17,x_transformed = self.scaler.fit_transform(x)
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter5/lasso.py,27,new_x_transformed = self.scaler.transform(new_x)
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter4/ridge_boston.py,7,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter4/ridge_boston.py,9,print(ridge.predict(X)[:5])
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter4/linear_regression_boston.py,7,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter4/linear_regression_boston.py,9,print(lr.predict(X)[:5])
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter4/linear_regression_boston.py,13,"reg = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter4/linear_regression_boston.py,15,print(reg.predict(X)[:5])
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter4/linear_regression_ridge.py,18,x_transformed = self.scaler.fit_transform(x)
/Users/cba/Desktop/github_datascience_code/download_code/rnorm_book_sample/code/chapter4/linear_regression_ridge.py,27,new_x_transformed = self.scaler.transform(x)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/heywhale/LM-Pretrain-Finetune/pretrain/megatron/data/autoaugment.py,234,"""shearX"": lambda img, magnitude: img.transform("
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/heywhale/LM-Pretrain-Finetune/pretrain/megatron/data/autoaugment.py,241,"""shearY"": lambda img, magnitude: img.transform("
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/heywhale/LM-Pretrain-Finetune/pretrain/megatron/data/autoaugment.py,248,"""translateX"": lambda img, magnitude: img.transform("
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/heywhale/LM-Pretrain-Finetune/pretrain/megatron/data/autoaugment.py,261,"""translateY"": lambda img, magnitude: img.transform("
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/kaggle/shopee/train_swin.py,36,df['label_group'] = labelencoder.fit_transform(df['label_group'])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/kaggle/shopee/train.py,38,df['label_group'] = labelencoder.fit_transform(df['label_group'])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/kaggle/shopee/utils-shopee/dataset.py,28,augmented = self.transform(image=image)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/wechat2021/deepfm.py,50,data[feat] = lbe.fit_transform(data[feat])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/wechat2021/deepfm.py,52,data[dense_features] = mms.fit_transform(data[dense_features])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/wechat2021/deepfm.py,94,"history = model.fit(train_model_input, train[target].values, batch_size=1024,"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/wechat2021/deepfm.py,97,"pred_ans = model.predict(test_model_input, 128)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/wechat2021/deep_model.py,175,"pred_ans = self.predict(x, batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/wechat2021/PCA.py,12,feed_embedd=model_pca.fit_transform(np.array(feed_embedd))
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/wechat2021/lgb.py,87,return self.predict(df_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/wechat2021/lgb.py,93,logits = self.model.predict(test_x)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/wechat2021/lgb.py,99,logits= self.model.predict(test_x)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/Chick-Counting/detect/export.py,146,"y = tf_model.predict(im, tf_nms, agnostic_nms, topk_per_class, topk_all, iou_thres, conf_thres)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/Chick-Counting/detect/export.py,148,"outputs = tf_model.predict(inputs, tf_nms, agnostic_nms, topk_per_class, topk_all, iou_thres, conf_thres)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/Chick-Counting/detect/utils/augmentations.py,43,"new = self.transform(image=im, bboxes=labels[:, 1:], class_labels=labels[:, 0])  # transformed"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/Chick-Counting/detect/models/tf.py,439,y = tf_model.predict(im)  # inference
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/Chick-Counting/detect/models/tf.py,443,"keras_model = keras.Model(inputs=im, outputs=tf_model.predict(im))"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_day_timeSeries.py,117,first_pred = self.model.predict(test_x)#test_matrix
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_day_timeSeries.py,133,pred = self.model.predict(test_x)#test_matrix
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_day_timeSeries.py,144,cur_pred=self.predict(pre_pred)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_day_timeSeries.py,159,lgb_test=lgb_time_A.fit()
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_day_timeSeries.py,170,lgb_test=lgb_time_B.fit()
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_half_hour_LB_0.262.py,77,"pre = model.predict(te_x, num_iteration=model.best_iteration)#"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_half_hour_LB_0.262.py,78,"pred = model.predict(test_x, num_iteration=model.best_iteration)#"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_day_LB_0.117.py,95,"pre = model.predict(te_x, num_iteration=model.best_iteration)#"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_day_LB_0.117.py,96,"pred = model.predict(test_x, num_iteration=model.best_iteration)#"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_half_hour_timeSeries.py,131,first_pred = self.model.predict(test_x)#test_matrix
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_half_hour_timeSeries.py,149,pred = self.model.predict(test_x)#test_matrix
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_half_hour_timeSeries.py,160,cur_pred=self.predict(pre_pred)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_half_hour_timeSeries.py,177,lgb_test=lgb_time_A.fit()
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/招商银行2021FinTech/lgb_half_hour_timeSeries.py,188,lgb_test=lgb_time_B.fit()
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/swin_unet_code_local/datasets/RSCDataset.py,66,"transformed = self.transform(image=image, mask=mask)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/swin_unet_code_local/datasets/dataset_synapse.py,73,sample = self.transform(sample)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/satellite_image_segmentation/swin_unet_code/datasets/RSCDataset.py,77,"transformed = self.transform(image=image, mask=mask)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/satellite_image_segmentation/swin_unet_code/datasets/dataset_synapse.py,73,sample = self.transform(sample)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/天马杯--AI+z智能质检/code/datasets/tianma_cup/bayes.py,109,pred = model.predict(x_val)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/天马杯--AI+z智能质检/code/datasets/tianma_cup/lgb.py,87,val_pred = gbm.predict(x_val)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/天马杯--AI+z智能质检/code/datasets/tianma_cup/lgb.py,95,pred += gbm.predict(test_x)/5
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/天马杯--AI+z智能质检/code/datasets/tianma_cup/lgbm.py,88,val_pred = gbm.predict(x_val)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/天马杯--AI+z智能质检/code/datasets/tianma_cup/lgbm.py,96,pred += gbm.predict(test_x)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/天马杯--AI+z智能质检/code/scripts/run_bayesopt.py,107,pred = model.predict(x_val)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/天马杯--AI+z智能质检/code/scripts/run_lgb.py,63,test_pred = model.predict(test_features)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/data_lake/car/predict.py,33,img = self.transform(image=np.array(img))['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/else/data_lake/person/predict.py,33,img = self.transform(image=np.array(img))['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/公积金贷款逾期预测/get_frts.py,57,le.fit(list(df[frt].values))
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/公积金贷款逾期预测/get_frts.py,58,df[frt] = le.transform(list(df[frt].values))
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/公积金贷款逾期预测/get_frts.py,125,"df['{}_{}_count'.format(f1, f2)] = df.groupby([f1, f2])['id'].transform('count')"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/公积金贷款逾期预测/get_frts.py,137,"df['{}_{}_{}'.format(f1, f2, stat)] = g[f2].transform(stat)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/公积金贷款逾期预测/get_frts.py,158,"df['{}_{}_{}'.format(f1, f2, stat)] = g[f2].transform(stat)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/公积金贷款逾期预测/lgb.py,62,"pre = model.predict(te_x, num_iteration=model.best_iteration)#(8000,)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/公积金贷款逾期预测/lgb.py,63,"pred = model.predict(test_x, num_iteration=model.best_iteration)#(15000,)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/one-city编程大赛/fastText/fastText.py,127,labels_test = label_encoder.fit_transform(labels_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/one-city编程大赛/fastText/fastText.py,128,predits = list(zip(*(model.predict(texts_test)[0])))[0]
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/one-city编程大赛/fastText/fastText.py,129,predits = label_encoder.transform(predits)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/one-city编程大赛/fastText/fastText.py,160,vote1 = int(model1.predict(out_str)[0][0].split('_')[-1])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/one-city编程大赛/fastText/fastText.py,161,vote2 = int(model2.predict(out_str)[0][0].split('_')[-1])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/one-city编程大赛/fastText/fastText.py,162,vote3 = int(model3.predict(out_str)[0][0].split('_')[-1])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/one-city编程大赛/fastText/fastText.py,163,vote4 = int(model4.predict(out_str)[0][0].split('_')[-1])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/dc/one-city编程大赛/fastText/fastText.py,164,vote5 = int(model5.predict(out_str)[0][0].split('_')[-1])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/天池-智慧海洋/单模testB0.874.py,158,"rlf.fit(x_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/天池-智慧海洋/单模testB0.874.py,160,rlf_pre=rlf.predict(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/天池-智慧海洋/单模testB0.874.py,162,"#print(f1_score(y_test,rlf.predict(x_test),average='macro'))#打印每一折的验证准确率"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022-AI_challenger/gen_dataset_fgsm.py,48,image = self.transform(image)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022-AI_challenger/train.py,44,image = self.transform(image)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/dataset_concat.py,61,#image_A = self.transform(image=image_A)['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/dataset_concat.py,62,#image_B = self.transform(image=image_B)['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/dataset_concat.py,63,image=self.transform(image=image)['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/dataset_triplet.py,67,image_A = self.transform(image=image_A)['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/dataset_triplet.py,68,image_B = self.transform(image=image_B)['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/dataset_triplet.py,70,image_C = self.transform(image=image_C)['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/infer_triplet.py,43,imgA = self.transform(image=np.array(imgA))['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/infer_triplet.py,44,imgB = self.transform(image=np.array(imgB))['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/dataset_siamese.py,92,image_A = self.transform(image=image_A)['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2022CVPR-petBiometricChalenge/dataset_siamese.py,93,image_B = self.transform(image=image_B)['image']
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/ImageForgeryLocationChallenge/dataset/RSCDataset.py,77,"transformed = self.transform(image=image, mask=mask)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/2021全国数字生态创新大赛-高分辨率遥感影像分割/dataset/RSCDataset.py,58,"transformed = self.transform(image=image, mask=mask)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/CVPR2021-PIC-Challenge/dataset.py,69,augmented = self.transform(image=image_left)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/CVPR2021-PIC-Challenge/dataset.py,71,augmented = self.transform(image=image_mid)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/CVPR2021-PIC-Challenge/dataset.py,73,augmented = self.transform(image=image_right)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/CVPR2021-PIC-Challenge/infer.py,39,augmented = self.transform(image=image_left)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/CVPR2021-PIC-Challenge/infer.py,41,augmented = self.transform(image=image_mid)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/CVPR2021-PIC-Challenge/infer.py,43,augmented = self.transform(image=image_right)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/CVPR2021-PIC-Challenge/qyl/centerface.py,16,"self.img_h_new, self.img_w_new, self.scale_h, self.scale_w = self.transform(height, width)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/高德地图/Xception_Lgb_roundB.py,252,"xlf.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/高德地图/Xception_Lgb_roundB.py,253,pred_xgb = xlf.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/高德地图/Xception_Lgb_roundB.py,256,"llf.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/高德地图/Xception_Lgb_roundB.py,257,pred_llf = llf.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/高德地图/Xception_Lgb_roundB.py,260,"clf.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/高德地图/Xception_Lgb_roundB.py,261,pred_cab = clf.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/高德地图/mmdetectionForGaode/1019_infer.py,516,"llf.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/tianchi/高德地图/mmdetectionForGaode/1019_infer.py,517,pred_lgb = llf.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/utils/get_frt.py,42,tfidf=transformer.fit_transform(vectorizer.fit_transform(corpus))#第一个fit_transform是计算tf-idf，第二个fit_transform是将文本转为词频矩阵
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/utils/get_frt.py,132,# tfidf=clf_tfidf.fit_transform(base_info['opscope'])
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/utils/helpers.py,11,"self.clf.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/utils/helpers.py,14,return self.clf.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/utils/helpers.py,20,"return self.clf.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/utils/helpers.py,23,"print(self.clf.fit(x, y).feature_importances_)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/utils/helpers.py,48,# oof_train[test_index] = clf.predict(x_te)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/utils/helpers.py,49,"# oof_test_skf[fold, :] = clf.predict(x_test)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/cab.py,26,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/cab.py,28,pred = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/cab.py,47,"grid_search.fit(train_data[select_features],"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/pseudo.py,36,"model.fit(x_train, y_train,"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/pseudo.py,42,pred = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/pseudo.py,68,"grid_search.fit(train_data.drop(['id', 'label'], axis=1)[select_features],"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/lgb.py,39,"model.fit(x_train, y_train,"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/lgb.py,45,pred = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/lgb.py,71,"grid_search.fit(train_data.drop(['id', 'label'], axis=1)[select_features],"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/stacking.py,33,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/stacking.py,35,pred = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/stacking.py,37,train_pre = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/stacking.py,179,"model_two_stage.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/xgb.py,26,"model.fit(x_train, y_train,"
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/xgb.py,31,pred = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/DLLXW_data-science-competition/datafountain/CCF2020-非法集资/models/xgb.py,51,"grid_search.fit(train_data.drop(['id', 'label'], axis=1)[select_features],"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,11,"sa_model.fit(info,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,12,sa_predict = sa_model.predict(info);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,20,"ch4_model.fit(ch4_data, train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,21,ch4_pred = ch4_model.predict(ch4_data);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,29,"sax_model.fit(result,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,30,sax_predict = sax_model.predict(result);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,39,"cnt_sax_model.fit(cnt_result,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,40,cnt_sax_predict = cnt_sax_model.predict(cnt_result);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,48,"cnt_sax_model.fit(cnt_result,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,49,cnt_sax_predict = cnt_sax_model.predict(cnt_result);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,57,"oneslice_model.fit(areas_all,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,58,oneslice_predict = oneslice_model.predict(areas_all);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,167,"ave_model.fit(all_models,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred.py,169,ave_pred = ave_model.predict(all_models);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,11,"sa_model.fit(info,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,12,sa_predict = sa_model.predict(info);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,20,"ch4_model.fit(ch4_data, train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,21,ch4_pred = ch4_model.predict(ch4_data);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,29,"sax_model.fit(result,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,30,sax_predict = sax_model.predict(result);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,39,"cnt_sax_model.fit(cnt_result,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,40,cnt_sax_predict = cnt_sax_model.predict(cnt_result);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,48,"cnt_sax_model.fit(cnt_result,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,49,cnt_sax_predict = cnt_sax_model.predict(cnt_result);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,57,"oneslice_model.fit(areas_all,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,58,oneslice_predict = oneslice_model.predict(areas_all);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,133,"ave_model.fit(all_models,train_true);"
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/train_pred_2cnn.py,135,ave_pred = ave_model.predict(all_models);
/Users/cba/Desktop/github_datascience_code/download_code/woshialex_diagnose-heart/CNN_B/dsb_utils.py,118,pca.fit(patch)
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter13/chapter13_prediction_endpoint.py,34,prediction = self.model.predict([input.text])
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter13/chapter13_dump_joblib.py,28,"model.fit(newsgroups_training.data, newsgroups_training.target)"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter13/chapter13_caching.py,24,prediction = model.predict([text])
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter13/chapter13_load_joblib.py,13,"p = model.predict([""computer cpu memory ram""])"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter12/chapter12_finding_parameters.py,14,"grid.fit(data, targets)"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter12/chapter12_fit_predict.py,18,"model.fit(training_data, training_targets)"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter12/chapter12_fit_predict.py,21,predicted_targets = model.predict(testing_data)
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter12/chapter12_gaussian_naive_bayes.py,17,"model.fit(training_data, training_targets)"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter12/chapter12_pipelines.py,29,"model.fit(newsgroups_training.data, newsgroups_training.target)"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Building-Data-Science-Applications-with-FastAPI/chapter12/chapter12_pipelines.py,32,predicted_targets = model.predict(newsgroups_testing.data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/5.model tuning/parameter-tuning-gridsearch.py,22,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/5.model tuning/parameter-tuning-gridsearch.py,47,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/5.model tuning/parameter tuning-randomized search.py,22,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/5.model tuning/parameter tuning-randomized search.py,47,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/4.life cycle stages/5.live-webservice.py,22,predictions = classifier.predict(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/4.life cycle stages/5.live-webservice.py,35,predictions = classifier.predict(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/4.life cycle stages/4.live-service.py,14,predictions = classifier.predict(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/4.life cycle stages/3.model evalution.py,22,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/4.life cycle stages/2.model persistence.py,21,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/3. ml basics/kaggle-ml-II.py,23,"classifer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/3. ml basics/kaggle-ml-II.py,41,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/3. ml basics/first-ml.py,12,"classifer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/3. ml basics/first-ml.py,18,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/3. ml basics/kaggle-ml-I.py,21,"classifer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/3. ml basics/kaggle-ml-I.py,38,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/boosted-ensemble-algorithms.py,23,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/boosted-ensemble-algorithms.py,25,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/boosted-ensemble-algorithms.py,29,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/boosted-ensemble-algorithms.py,31,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/boosted-ensemble-algorithms.py,71,"grid_ada_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/voting-ensemble.py,23,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/voting-ensemble.py,25,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/voting-ensemble.py,29,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/voting-ensemble.py,31,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/voting-ensemble.py,75,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/voting-ensemble.py,88,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/bagged-ensemble-algorithms.py,23,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/bagged-ensemble-algorithms.py,25,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/bagged-ensemble-algorithms.py,29,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/bagged-ensemble-algorithms.py,31,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/bagged-ensemble-algorithms.py,70,"grid_bag_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/bagged-ensemble-algorithms.py,79,"grid_rf_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/bagged-ensemble-algorithms.py,88,"grid_extree_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/stacked-ensemble.py,24,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/stacked-ensemble.py,26,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/stacked-ensemble.py,30,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/stacked-ensemble.py,32,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/ensemble/stacked-ensemble.py,83,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-with-scaling.py,15,scaler.fit(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-with-scaling.py,18,X_train = scaler.transform(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-with-scaling.py,24,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-with-scaling.py,42,X_test = scaler.transform(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-with-scaling.py,43,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-without-scaling.py,20,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-without-scaling.py,39,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-imputation-scaling.py,12,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-imputation-scaling.py,14,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-imputation-scaling.py,18,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-imputation-scaling.py,20,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-imputation-scaling.py,27,scaler.fit(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-imputation-scaling.py,30,X_train = scaler.transform(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-imputation-scaling.py,36,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-imputation-scaling.py,54,X_test = scaler.transform(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/instance based learning/knn-imputation-scaling.py,55,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/logistic-regression.py,12,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/logistic-regression.py,14,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/logistic-regression.py,18,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/logistic-regression.py,20,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/logistic-regression.py,59,"grid_lr_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/linear-svm.py,12,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/linear-svm.py,14,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/linear-svm.py,18,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/linear-svm.py,20,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/objective based learning/linear-svm.py,59,"grid_lsvm_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/prob learning/guassian-nb.py,20,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/6.supervised ml algorithms/prob learning/guassian-nb.py,35,titanic_test['Survived'] = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,37,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,39,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,43,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,45,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,47,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,48,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,92,"rf_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,96,X_train_new = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,102,"grid_ada_estimator.fit(X_train_new, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,108,X_test_new = selector.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-1.py,109,titanic_test['Survived'] = best_est.predict(X_test_new)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,33,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,35,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,39,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,41,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,78,"rf_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,82,X_train_new = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,88,"grid_ada_estimator.fit(X_train_new, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,98,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,99,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,110,X_test_new = selector.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching issue.py,111,titanic_test['Survived'] = best_est.predict(X_test_new)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,33,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,35,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,39,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,41,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,78,"rf_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,82,X_train_new = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,88,"grid_ada_estimator.fit(X_train_new, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,98,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,99,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,110,X_test_new = selector.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/9.kaggle-classification-II/kaggle-V-level matching solved-2.py,111,titanic_test['Survived'] = best_est.predict(X_test_new)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/15.clustering/clustering-hierarchical.py,28,h_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/15.clustering/clustering-kmeans1.py,29,kmeans_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/15.clustering/clustering-kmeans2.py,39,cluster_labels = clusterer.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,15,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,17,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,18,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,29,cont_imputer.fit(titanic_train1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,31,titanic_train1[imputable_cont_features] = cont_imputer.transform(titanic_train1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,37,scaler.fit(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,40,X_train = scaler.transform(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,46,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,59,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,63,X_test = scaler.transform(titanic_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution1.py,64,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/1.scaling.py,7,scaler1.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/1.scaling.py,10,out1 = scaler1.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/1.scaling.py,13,scaler2.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/1.scaling.py,16,out2 = scaler2.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,19,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,21,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,25,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,27,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,34,scaler.fit(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,37,X_train = scaler.transform(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,43,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,56,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,57,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,62,X_test = scaler.transform(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/level-matching-solution2.py,63,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/2.imputation.py,13,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/2.imputation.py,15,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/2.imputation.py,19,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/7.preprocessing/2.imputation.py,21,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/16.outlier-detection/outlier-detection.py,41,iso_forest_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/16.outlier-detection/outlier-detection.py,44,decisions_iso = iso_forest_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/16.outlier-detection/outlier-detection.py,53,decisions_lof = lof_model.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/16.outlier-detection/outlier-detection.py,64,svm_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/11.association-analysis/asociation-rules2.py,14,oht.fit(rows)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/11.association-analysis/asociation-rules2.py,16,oht_ary = oht.transform(rows)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/11.association-analysis/association-rules1.py,12,oht.fit(dataset)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/11.association-analysis/association-rules1.py,14,oht_ary = oht.transform(dataset)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-reduction2.py,14,pca1.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-reduction2.py,16,df2 = pca1.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-reduction2.py,26,pca2.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-reduction2.py,27,df3 = pca2.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/t-sne1.py,11,pca1.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/t-sne1.py,12,df2 = pca1.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/t-sne1.py,18,df3 = tsne.fit_transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-transformation.py,14,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-transformation.py,16,df2 = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-transformation.py,33,df2 = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-reduction1.py,14,pca1.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-reduction1.py,16,df2 = pca1.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-reduction1.py,26,pca2.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/14.feature reduction/feature-reduction1.py,27,df3 = pca2.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-creation/feature-creation.py,16,age_imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-creation/feature-creation.py,17,titanic_train[['Age']] = age_imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven2.py,22,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven2.py,24,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven2.py,28,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven2.py,30,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven2.py,69,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven2.py,74,X_new = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-stat test driven.py,22,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-stat test driven.py,24,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-stat test driven.py,28,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-stat test driven.py,30,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-stat test driven.py,68,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-stat test driven.py,73,X_new = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven1.py,23,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven1.py,25,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven1.py,29,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven1.py,31,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven1.py,71,"grid_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/8.feature-engg/feature-selection/feature-selection-model driven1.py,86,X_new = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/12.personalized recommendations/personalized recommendations-objective based-svd.py,23,svd_grid_estimator.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/12.personalized recommendations/personalized recommendations-objective based-svd.py,31,final_model.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/12.personalized recommendations/personalized recommendations-objective based-svd.py,47,"pred = final_model.predict(row[1], row[2])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/12.personalized recommendations/personalized recommendations-knn-bias.py,25,knn_grid_estimator.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/12.personalized recommendations/personalized recommendations-knn-bias.py,33,final_model.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/12.personalized recommendations/personalized recommendations-knn-bias.py,44,"pred = final_model.predict(row[1], row[2])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/12.personalized recommendations/personalized recommendations-knn-no bias.py,25,knn_grid_estimator.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/12.personalized recommendations/personalized recommendations-knn-no bias.py,33,final_model.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/12.personalized recommendations/personalized recommendations-knn-no bias.py,44,"pred = final_model.predict(row[1], row[2])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/1.python/styles of programming.py,19,dt.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/1.python/styles of programming.py,20,dt.score()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-knn.py,26,df[features] = mapper.fit_transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-knn.py,30,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-knn.py,32,df[features] = cont_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-knn.py,45,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-knn.py,48,return select.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-knn.py,63,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-knn.py,67,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-linear models.py,26,df[features] = mapper.fit_transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-linear models.py,30,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-linear models.py,32,df[features] = cont_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-linear models.py,45,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-linear models.py,48,return select.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-linear models.py,63,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-linear models.py,70,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-linear models.py,105,"linr_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-ensemble models.py,27,df[features] = mapper.fit_transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-ensemble models.py,31,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-ensemble models.py,33,df[features] = cont_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-ensemble models.py,46,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-ensemble models.py,49,return select.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-ensemble models.py,64,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/10.kaggle-regression/regression-ensemble models.py,71,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/13.classification-imbalanced/roc-curve-multi class.py,53,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/13.classification-imbalanced/roc-curve-multi class.py,56,y_predict = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/13.classification-imbalanced/roc_curve-binary class.py,31,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-july/13.classification-imbalanced/roc_curve-binary class.py,42,y_pred_classes = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/15.association analysis/apriori1.py,13,oht_ary = oht.fit(dataset).transform(dataset)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/15.association analysis/apriori2.py,16,oht_ary = oht.fit(rows).transform(rows)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/5.model deployment/model-deploy.py,15,"classifer.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/5.model deployment/live-service.py,14,prediction = dt_estimator.predict(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/3.machine discovery/first-ML-viz.py,17,"classifer.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/3.machine discovery/first-ML-viz.py,32,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/3.machine discovery/first-ML.py,14,"classifer.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/3.machine discovery/first-ML.py,21,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/17.outlier detection/outlier-detection.py,42,svm_model .fit(listings)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/17.outlier detection/outlier-detection.py,54,iso_forest_model.fit(listings)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/17.outlier detection/outlier-detection.py,56,decisions_if = iso_forest_model.predict(listings)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/3.imputation.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/3.imputation.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/3.imputation.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/3.imputation.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,9,Y = super().transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,29,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,31,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,35,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,37,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,50,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,51,titanic_train1 = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,57,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,58,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/4.category to continuous transformers.py,59,titanic_test1 = mapper.transform(titanic_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/1.feature-scalers.py,6,scaler1.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/1.feature-scalers.py,9,out1 = scaler1.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/1.feature-scalers.py,13,scaler2.fit(df2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/1.feature-scalers.py,16,out2 = scaler2.transform(df2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/2.feature-scalers-viz.py,62,scaled_df1 = scaler1.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/2.feature-scalers-viz.py,66,scaled_df2 = scaler2.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/11.preprocessing/2.feature-scalers-viz.py,70,scaled_df3 = scaler3.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/18.statistical test based feature selection/feature-selection1.py,18,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/18.statistical test based feature selection/feature-selection1.py,20,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/18.statistical test based feature selection/feature-selection1.py,27,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/18.statistical test based feature selection/feature-selection1.py,28,titanic_train[encodable_columns] = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/18.statistical test based feature selection/feature-selection1.py,38,"best_k.fit(titanic_train2, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/18.statistical test based feature selection/feature-selection1.py,48,"grid_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/18.statistical test based feature selection/feature-selection1.py,52,"print(grid_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/4.model evaluation/model-eval-cv.py,14,"classifer.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/14.kaggle-recommenders/recommenders-svd.py,20,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/14.kaggle-recommenders/recommenders-svd.py,27,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/14.kaggle-recommenders/recommenders-knn.py,25,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/14.kaggle-recommenders/recommenders-knn.py,32,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/14.kaggle-recommenders/recommenders-knn.py,43,"pred = algo.predict(row[1], row[2])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/7.parameter tuning/parameter-tuning-gridsearch.py,20,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/7.parameter tuning/parameter-tuning-randomsearch.py,20,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/12.kaggle-regression/kaggle-I.py,13,Y = super().transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/12.kaggle-regression/kaggle-I.py,56,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/12.kaggle-regression/kaggle-I.py,86,mapper.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/12.kaggle-regression/kaggle-I.py,87,return mapper.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/12.kaggle-regression/kaggle-I.py,96,cat_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/12.kaggle-regression/kaggle-I.py,98,df[features] = cat_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/12.kaggle-regression/kaggle-I.py,102,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/12.kaggle-regression/kaggle-I.py,104,df[features] = cont_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/12.kaggle-regression/kaggle-I.py,151,house_train2 = fs_model.transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/13.imbalanced classification/roc1.py,30,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/13.imbalanced classification/roc1.py,33,y_predict = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/13.imbalanced classification/roc2.py,35,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/13.imbalanced classification/roc2.py,39,"lr_model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/13.imbalanced classification/roc3.py,53,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/13.imbalanced classification/roc3.py,54,y_predict = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/10.knn-scaled data.py,17,scaler.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/10.knn-scaled data.py,18,X_train1 = scaler.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/10.knn-scaled data.py,23,"grid_classifier.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/10.knn-scaled data.py,39,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/8.stacking.py,31,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/8.stacking.py,48,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/1.decision trees.py,15,"classifer.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/1.decision trees.py,27,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/9.adaboost.py,21,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/9.adaboost.py,50,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/11.logistic-regression.py,17,scaler.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/11.logistic-regression.py,18,X_train1 = scaler.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/11.logistic-regression.py,23,"grid_classifier.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/11.logistic-regression.py,39,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/7.knn.py,18,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/7.knn.py,34,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/3.bagged-ensemble.py,18,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/3.bagged-ensemble.py,35,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/6.voting-soft.py,22,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/6.voting-soft.py,39,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/5.voting-hard.py,22,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/5.voting-hard.py,39,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/2.naive bayes.py,16,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/2.naive bayes.py,32,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/4.random forest.py,18,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/9.classification algorithms/4.random forest.py,36,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/16.clustering/clustering-hierarchical.py,28,h_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/16.clustering/clustering-kmeans1.py,29,kmeans_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/16.clustering/clustering-kmeans2.py,39,cluster_labels = clusterer.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-II(dt-overfit).py,15,"classifer.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-II(dt-overfit).py,27,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-I(dt-underfit).py,14,"classifer.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-I(dt-underfit).py,21,titanic_test['Survived'] = classifer.predict(X_test)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",13,Y = super().transform(y)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",140,cont_imputer.fit(titanic_train[imputable_cont_features])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",142,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",146,cat_imputer.fit(titanic_train['Embarked'])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",148,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",164,mapper.fit(titanic_train)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",165,X_train = mapper.transform(titanic_train)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",173,"rf_grid_classifier.fit(X_train, y_train)"
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",194,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",195,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",196,X_test = mapper.transform(titanic_test)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VI(pr, fe, fi, rf).py",198,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,12,Y = super().transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,74,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,76,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,80,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,82,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,102,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,103,X_train = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,113,"grid_rf_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,125,"grid_ext_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,137,"grid_ada_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,150,"grid_gbm_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,159,"voting_model = voting_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,166,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,167,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,171,X_test = mapper.transform(titanic_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-VII(ensemble).py,173,titanic_test['Survived'] = voting_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-III(dt-overfit control).py,18,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-III(dt-overfit control).py,34,titanic_test['Survived'] = final_model.predict(X_test)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",11,Y = super().transform(y)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",77,cont_imputer.fit(titanic_train[imputable_cont_features])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",79,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",83,cat_imputer.fit(titanic_train['Embarked'])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",85,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",108,mapper.fit(titanic_train)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",109,X_train = mapper.transform(titanic_train)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",116,"rf_grid_classifier.fit(X_train, y_train)"
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",126,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",127,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",131,X_test = mapper.transform(titanic_test)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-V(preprocess, fe, rf).py",133,titanic_test['Survived'] = final_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-IV(nb).py,16,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/6.kaggle-classification/kaggle-IV(nb).py,32,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/1.python/10.paradigms.py,18,dt.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-mar/1.python/10.paradigms.py,19,dt.score()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/5.model evaluation/model-evaluation .py,37,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/5.model evaluation/model-evaluation .py,56,titanic_test['Survived'] = dt.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/4.kaggle-classification-II/ML-introduction3.py,28,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/4.kaggle-classification-II/ML-introduction3.py,47,titanic_test['Survived'] = dt.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca4.py,10,pca.fit(house_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca4.py,16,scaler.fit(house_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca4.py,17,house_data1 = scaler.transform(house_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca4.py,18,pca.fit(house_data1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca1.py,11,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca1.py,13,df1_pca = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca1.py,34,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca1.py,38,df1_pca = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca2.py,9,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca2.py,13,df1_pca = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca2.py,19,pca.fit(df2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca2.py,23,df2_pca = pca.transform(df2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,46,mean_imputer.fit(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,48,mode_imputer.fit(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,61,df[cont_features] = imputers[0].transform(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,62,df[cat_features] = imputers[1].transform(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,84,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,88,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,95,return estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,188,scaler.fit(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,189,house_train2 = scaler.transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,191,pca.fit(house_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/regression_pca.py,193,house_train3 = pca.transform(house_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca3.py,25,pca.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/15.pca/pca3.py,28,X_train1 = pca.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/18.clustering/cluster-selection.py,39,cluster_labels = clusterer.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/18.clustering/clustering-kmeans.py,15,kmeans_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/18.clustering/clustering-kmeans.py,27,cluster_labels = cluster_model.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/8.model tuning/model-tuning.py,30,"dt1.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/8.model tuning/model-tuning.py,31,"print(dt1.score(X_train,y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/8.model tuning/model-tuning.py,37,"dt2.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/8.model tuning/model-tuning.py,38,"print(dt2.score(X_train,y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/8.model tuning/model-tuning.py,44,"dt_grid.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/8.model tuning/model-tuning.py,48,"dt_grid.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/7.overfitting diagnosis/overfit-diagnosis.py,34,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/7.overfitting diagnosis/overfit-diagnosis.py,37,"dt.score(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/7.overfitting diagnosis/overfit-diagnosis.py,40,y_pred = dt.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/16.kaggle-regression-I/sale_price_prediction2.py,77,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/16.kaggle-regression-I/sale_price_prediction2.py,86,log_sales_price = dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/16.kaggle-regression-I/sale_price_prediction1.py,86,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/16.kaggle-regression-I/sale_price_prediction1.py,108,house_test['log_sales_price'] = dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/14.feature engg/feature-engg1.py,26,titanic_train[['Age']] = imputer.fit_transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/14.feature engg/feature-engg1.py,85,"rf_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/14.feature engg/feature-engg1.py,99,"gbm_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/9.kaggle-classification-III/titanic-v5.py,28,"dt_grid.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/9.kaggle-classification-III/titanic-v5.py,32,"dt_grid.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/9.kaggle-classification-III/titanic-v5.py,43,titanic_test['Survived'] = dt_grid.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/9.kaggle-classification-III/titanic-v4.py,28,"dt_grid.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/9.kaggle-classification-III/titanic-v4.py,32,"dt_grid.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/9.kaggle-classification-III/titanic-v4.py,43,titanic_test['Survived'] = dt_grid.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/12.kaggle-classification-IV/titanic-v6(rf).py,29,"rf_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/12.kaggle-classification-IV/titanic-v6(rf).py,34,"rf_grid_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/12.kaggle-classification-IV/titanic-v6(rf).py,45,titanic_test['Survived'] = rf_grid_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/6.model deployment/model-export .py,36,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/6.model deployment/prediction-service.py,22,titanic_test['Survived'] = dtree.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/3.ML-introduction/ML-introduction2.py,23,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/3.ML-introduction/ML-introduction2.py,34,titanic_test['Survived'] = dt.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/3.ML-introduction/ML-introduction1.py,21,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/3.ML-introduction/ML-introduction1.py,26,titanic_test['Survived'] = dt.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/19.outlier-detection/outlier-detection.py,42,svm_model .fit(listings)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/19.outlier-detection/outlier-detection.py,54,iso_forest_model.fit(listings)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/19.outlier-detection/outlier-detection.py,56,decisions_if = iso_forest_model.predict(listings)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/probabilistic learning/naive-bayes.py,28,"nb_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/lazy learning/knn-tuning.py,25,X_train1 = scaler.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/lazy learning/knn-tuning.py,31,"knn_grid_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/lazy learning/knn-tuning.py,37,knn_grid_estimator.predict()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/lazy learning/knn-standardzied-data.py,24,X_train1 = scaler.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/lazy learning/knn-standardzied-data.py,30,"knn_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/lazy learning/knn.py,29,"knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/tree learning/decision tree-tuning.py,31,"dt_grid.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/tree learning/decision tree-tuning.py,35,"dt_grid.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/objective based learning/logistic-regression-tuningpy.py,30,"lr_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/objective based learning/logistic-regression.py,29,"lr_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/extreme-trees.py,32,"et_estimator1.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/adaboost.py,32,"ada_tree_estimator1.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/gbm-tuning.py,32,"gbm_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/gbm-tuning.py,46,titanic_test['Survived'] = gbm_grid_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/bagged tree.py,33,"bag_tree_estimator1.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/bagged tree.py,37,"bag_tree_estimator2.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/voting ensemble.py,31,"v_estimator1.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/voting ensemble.py,35,"v_estimator2.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/random forest-tuning.py,29,"rf_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/random forest-tuning.py,34,"rf_grid_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/random forest-tuning.py,45,titanic_test['Survived'] = rf_grid_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/bagged tree-tuning.py,31,"bt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/bagged tree-tuning.py,44,titanic_test['Survived'] = rf_grid_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/stacked-ensemble1.py,51,"stacked_model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/random forest.py,32,"rf_estimator1.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/random forest.py,36,"rf_estimator2.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/adaboost-tuning.py,32,"ada_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/stacking.py,30,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/stacking.py,31,y_pred = clf.predict(X_holdout)[:]
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/stacking.py,41,"grid.fit(S_train, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/stacking.py,56,"S_test_i[:, j] = clf.predict(X)[:]"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/stacking.py,60,y_pred = clf.predict(S_test)[:]
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/voting ensemble-tuning.py,35,"voting_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-may/11.classification algorithms/ensemble learning/gbm.py,32,"gbm_tree_estimator1.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,15,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,17,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,21,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,23,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,26,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,28,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,31,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,33,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,46,"gnb_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,63,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,64,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,65,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,66,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/probabilistic learning/naive-bayes.py,69,titanic_test['Survived'] = gnb_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,25,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,27,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,30,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,32,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,35,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,37,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,41,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,43,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,52,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,59,"grid_lr_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,65,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,72,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,73,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,74,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,75,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,76,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,77,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,82,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/logistic-regression.py,83,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,15,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,17,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,21,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,23,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,26,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,28,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,31,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,33,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,36,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,38,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,42,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,44,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,53,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,60,"grid_lsvm_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,66,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,72,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,73,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,74,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,75,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,76,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,77,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,82,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/objective based learning/linear-svm.py,83,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,15,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,17,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,21,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,23,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,26,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,28,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,31,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,33,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,37,X_train = scaler.fit_transform(titanic_train[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,43,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,59,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,60,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,61,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,62,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,64,X_test = scaler.transform(titanic_test[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-tuning.py,65,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,25,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,27,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,30,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,32,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,35,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,37,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,41,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,43,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,52,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,58,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,64,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,71,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,72,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,73,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,74,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,75,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,76,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,81,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-scaling-ohe.py,82,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,25,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,27,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,30,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,32,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,39,"knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,53,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,54,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,55,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,56,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/neighbor based learning/knn-no-scaling.py,59,titanic_test['Survived'] = knn_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,25,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,27,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,30,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,32,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,35,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,37,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,46,"et_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,51,"final_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,58,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,59,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,60,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,61,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/extra tree-ensembling.py,64,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,25,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,27,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,30,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,32,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,35,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,37,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,41,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,43,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,52,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,63,"grid_voting_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,69,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,75,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,76,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,77,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,78,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,79,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,80,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,85,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/voting classifier.py,86,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,25,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,27,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,30,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,32,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,35,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,37,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,46,"rf_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,51,"final_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,58,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,59,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,60,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,61,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/rf-ensembling.py,64,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,15,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,17,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,21,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,23,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,26,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,28,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,31,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,33,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,36,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,38,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,42,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,44,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,53,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,61,"ada_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,69,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,75,"gb_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,81,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,87,"xgb_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,92,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,98,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,99,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,100,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,101,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,102,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,103,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,108,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/boosting classifiers.py,109,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,25,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,27,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,30,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,32,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,35,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,37,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,41,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,43,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,52,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,58,"grid_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,63,"grid_knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,70,"grid_rf_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,77,"grid_st_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,84,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,90,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,91,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,92,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,93,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,94,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,95,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,100,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/stacking-classifier.py,101,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,25,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,27,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,30,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,32,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,35,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,37,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,47,"ada_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,52,"final_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,59,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,60,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,61,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,62,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/ada-boosting.py,65,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,14,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,16,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,20,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,22,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,25,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,27,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,30,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,32,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,35,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,37,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,48,"bag_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,53,"final_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,61,"bag_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,68,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,69,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,70,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,71,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/ensemble learning/bagged-ensembling.py,74,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,16,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,18,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,22,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,24,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,27,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,29,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,32,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,34,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,45,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,50,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,77,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,78,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,79,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,80,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/5. supervised machine learning/inductive learning/overfit-control-tree learning.py,83,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/firstML.py,19,"classifer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/firstML.py,36,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,17,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,19,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,23,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,25,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,28,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,30,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,33,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,35,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,43,"classifer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,60,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,61,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,62,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,63,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/3.machine discovery/lifecycle.py,66,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/pca_utils.py,99,X_pca = pca_transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/pca_utils.py,149,X_pca = pca_transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/pca_utils.py,179,X_pca = pca_transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/classification_utils.py,171,"Z = estimator.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/classification_utils.py,206,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/classification_utils.py,208,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/classification_utils.py,214,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/classification_utils.py,232,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/tsne_utils.py,99,"manifold.TSNE(n_components=n_components, random_state=100).fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/clustering_utils.py,34,labels = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/clustering_utils.py,36,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/clustering_utils.py,66,labels = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/clustering_utils.py,68,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/clustering_utils.py,82,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/clustering_utils.py,100,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/clustering_utils.py,116,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/clustering_utils.py,123,y = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/clustering_utils.py,135,y = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/regression_utils.py,27,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/regression_utils.py,103,"y_pred = estimator.predict(xx.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/regression_utils.py,168,"Z = estimator.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/regression_utils.py,200,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/regression_utils.py,216,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/regression_utils.py,227,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/regression_utils.py,231,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/outlier_utils.py,122,"Z = estimator.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/outlier_utils.py,130,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/outlier_utils.py,163,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/outlier_utils.py,178,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/outlier_utils.py,179,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/outlier_utils.py,193,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/common_utils.py,38,multi_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/common_utils.py,43,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/common_utils.py,59,scaler.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/common_utils.py,64,return tmp.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/common_utils.py,81,"return pd.DataFrame(tmp_model.transform(X), columns = selected_features)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/common_utils.py,99,"grid_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/common_utils.py,130,"grid_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/common_utils.py,256,"grid_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/utils/common_utils.py,261,"print(""Train score:"" + str(grid_estimator.score(X, y)) )"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/11.regression/3.regularized feature transformation regression.py,24,X_train1 = poly_transformer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/11.regression/3.regularized feature transformation regression.py,72,X_train1 = poly_transformer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/11.regression/2.feature transformation regression.py,24,X_train1 = poly_transformer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/11.regression/2.feature transformation regression.py,38,X_train1 = gauss_transformer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/11.regression/2.feature transformation regression.py,57,X_train1 = poly_transformer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/11.regression/4.kernel-regression.py,24,X_train1 = poly_kernel.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/11.regression/4.kernel-regression.py,38,X_train1 = rbf_kernel.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/11.regression/4.kernel-regression.py,69,X_train1 = rbf_kernel.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,29,multi_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,33,df[features] = transformer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,37,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,53,scaler.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,58,return tmp.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,61,"selector.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,66,return tmp_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,74,pca_data = lpca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,86,tsne_data = tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,99,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,105,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,110,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,114,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,119,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,123,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,128,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,132,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,225,titanic_train[continuous_features] = cont_imputer.transform(titanic_train[continuous_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,230,titanic_train[cat_features] = cat_imputer.transform(titanic_train[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,238,titanic_train2 = scaler.transform(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,258,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,259,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,260,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,261,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,262,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,263,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,268,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,269,X_test1 = lpca.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/10.classification(kaggle challenge)/titanic-final-script1.py,270,titanic_test['Survived'] = final_estimator.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,16,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,18,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,22,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,24,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,27,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,29,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,32,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,34,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,45,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,49,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,76,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,77,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,78,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,79,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/model evaluation strategies.py,82,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,17,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,19,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,23,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,25,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,28,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,30,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,33,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,35,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,43,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,69,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,70,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,71,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,72,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/4.life cycle/lifecycle.py,75,titanic_test['Survived'] = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/18.recommender systems/association based analysis -1.py,15,oht_ary = oht.fit(dataset).transform(dataset)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/18.recommender systems/personalized recommendations-knn.py,23,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/18.recommender systems/personalized recommendations-knn.py,30,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/18.recommender systems/personalized recommendations-knn.py,41,"pred = algo.predict(row[1], row[2])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/18.recommender systems/personalized recommendations-svd.py,20,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/18.recommender systems/personalized recommendations-svd.py,27,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/18.recommender systems/association based analysis - 2.py,16,oht_ary = oht.fit(rows).transform(rows)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/19.density estimation/kde-higher dim.py,32,data = pca.fit_transform(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/19.density estimation/kde-higher dim.py,37,grid.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/19.density estimation/kde-1d.py,33,"kde_estimator.fit(x[:, None])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/19.density estimation/kde-1d.py,40,"kde_grid_estimator.fit(x[:, None])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/19.density estimation/kde-2d.py,23,kde.fit(xy.T)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/17.preprocessing/scaling and normalization/2.scaling-3d.py,48,X_ss = s_scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/17.preprocessing/scaling and normalization/2.scaling-3d.py,53,X_mm = m_scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/17.preprocessing/scaling and normalization/2.scaling-3d.py,58,X_rs = r_scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/17.preprocessing/scaling and normalization/3.normalization.py,40,X_norm = normalizer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/17.preprocessing/scaling and normalization/3.normalization.py,49,X_norm = normalizer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/17.preprocessing/scaling and normalization/1.scaling-2d.py,41,X_ss = s_scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/17.preprocessing/scaling and normalization/1.scaling-2d.py,46,X_mm = m_scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/17.preprocessing/scaling and normalization/1.scaling-2d.py,51,X_rs = r_scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/2.house price prediction(transformed target).py,54,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/2.house price prediction(transformed target).py,58,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/2.house price prediction(transformed target).py,64,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/2.house price prediction(transformed target).py,98,house_test['SalePrice'] = np.expm1(gb_model.predict(X_test1))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/3.house price prediction(combined feature selector and ensemble).py,56,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/3.house price prediction(combined feature selector and ensemble).py,60,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/3.house price prediction(combined feature selector and ensemble).py,66,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/3.house price prediction(combined feature selector and ensemble).py,119,pred_gb = np.expm1(gb_model.predict(X_test1))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/3.house price prediction(combined feature selector and ensemble).py,120,pred_svm = np.expm1(svm_model.predict(X_test1))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/1.house price prediction(knn).py,58,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/1.house price prediction(knn).py,62,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/1.house price prediction(knn).py,68,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/1.house price prediction(knn).py,75,"lasso_selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/1.house price prediction(knn).py,96,house_test['SalePrice'] = final_model.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/4.house price prediction(combined feature selector and stacked ensemble).py,57,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/4.house price prediction(combined feature selector and stacked ensemble).py,61,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/4.house price prediction(combined feature selector and stacked ensemble).py,67,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/12.regression(kaggle challenge)/4.house price prediction(combined feature selector and stacked ensemble).py,125,house_test['SalePrice'] = np.expm1(final_model.predict(X_test1))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/16.clustering(kaggle challenge)/clustering-credit card purchases.py,25,purchase_data[imputable_cont_features] = cont_imputer.transform(purchase_data[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/16.clustering(kaggle challenge)/clustering-credit card purchases.py,33,purchase_data1 = m_scaler.fit_transform(purchase_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/16.clustering(kaggle challenge)/clustering-credit card purchases.py,49,lpca_data['cluster'] = kmeans_final_model.predict(lpca_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/feature reduction-lpca.py,22,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/feature reduction-lpca.py,30,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,17,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,19,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,23,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,25,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,28,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,30,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,33,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,35,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,38,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,40,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,44,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,46,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,55,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,60,X_train1 = lpca.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,69,"knn_grid_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,75,"print(final_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,82,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,83,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,84,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,85,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,86,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,87,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,92,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,93,X_test1 = lpca.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/8.feature reduction/titanic-pca.py,94,titanic_test['Survived'] = final_estimator.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,25,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,27,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,31,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,33,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,57,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,59,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,62,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,64,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,67,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,69,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,72,le_title.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,74,titanic_train['Title'] = le_title.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,77,le_fgroup.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,79,titanic_train['FamilyGroup'] = le_fgroup.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,83,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,85,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,93,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,108,"feature_selector.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,114,X_train2 = tmp_model1.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,118,"feature_selector.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,124,X_train2 = tmp_model2.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,130,"grid_lsvm_estimator.fit(X_train2, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,136,"print(final_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,142,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,143,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,144,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,145,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,146,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,147,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,152,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection1.py,153,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,25,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,27,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,31,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,33,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,57,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,59,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,62,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,64,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,67,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,69,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,72,le_title.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,74,titanic_train['Title'] = le_title.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,77,le_fgroup.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,79,titanic_train['FamilyGroup'] = le_fgroup.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,83,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,85,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,93,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,108,"X_train2 = tmp_model.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,114,"grid_lsvm_estimator.fit(X_train2, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,120,"print(final_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,126,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,127,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,128,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,129,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,130,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,131,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,136,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection4.py,137,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,15,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,17,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,21,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,23,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,47,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,49,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,52,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,54,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,57,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,59,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,62,le_title.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,64,titanic_train['Title'] = le_title.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,67,le_fgroup.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,69,titanic_train['FamilyGroup'] = le_fgroup.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,73,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,75,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,84,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,91,"grid_lsvm_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,97,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,103,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,104,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,105,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,106,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,107,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,108,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,113,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-creation.py,114,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,25,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,27,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,31,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,33,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,57,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,59,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,62,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,64,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,67,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,69,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,72,le_title.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,74,titanic_train['Title'] = le_title.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,77,le_fgroup.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,79,titanic_train['FamilyGroup'] = le_fgroup.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,83,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,85,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,93,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,109,"X_train2 = tmp_model.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,115,"grid_lsvm_estimator.fit(X_train2, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,121,"print(final_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,127,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,128,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,129,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,130,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,131,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,132,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,137,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection3.py,138,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,25,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,27,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,31,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,33,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,57,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,59,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,62,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,64,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,67,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,69,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,72,le_title.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,74,titanic_train['Title'] = le_title.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,77,le_fgroup.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,79,titanic_train['FamilyGroup'] = le_fgroup.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,83,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,85,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,93,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,109,"X_train2 = tmp_model.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,115,"grid_lsvm_estimator.fit(X_train2, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,121,"print(final_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,127,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,128,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,129,titanic_test['Embarked'] = le_embarked.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,130,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,131,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,132,tmp1 = ohe.transform(titanic_test[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,137,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/9.feature selection/feature-selection2.py,138,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,17,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,19,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,23,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,25,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,28,le_embarked.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,30,titanic_train['Embarked'] = le_embarked.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,33,le_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,35,titanic_train['Sex'] = le_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,38,le_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,40,titanic_train['Pclass'] = le_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,44,ohe.fit(titanic_train[categorical_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,46,tmp1 = ohe.transform(titanic_train[categorical_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,55,X_train = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,61,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-deployment.py,67,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/ml-as-a-service.py,18,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/ml-as-a-service.py,21,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/ml-as-a-service.py,24,titanic_test['Embarked'] = le_emb.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/ml-as-a-service.py,27,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/ml-as-a-service.py,30,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/ml-as-a-service.py,35,tmp1 = ohe.transform(titanic_test[cat_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/ml-as-a-service.py,41,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/ml-as-a-service.py,46,prediction = knn_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-usage.py,14,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-usage.py,17,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-usage.py,20,titanic_test['Embarked'] = le_emb.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-usage.py,23,titanic_test['Sex'] = le_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-usage.py,26,titanic_test['Pclass'] = le_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-usage.py,31,tmp1 = ohe.transform(titanic_test[cat_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-usage.py,37,X_test = scaler.transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-jan/6.model deployment/model-usage.py,40,titanic_test['Survived'] = knn_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/19.kaggle-recommenders/recommenders-svd.py,20,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/19.kaggle-recommenders/recommenders-svd.py,27,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/19.kaggle-recommenders/recommenders-svd.py,38,"pred = algo.predict(row[1], row[2])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/19.kaggle-recommenders/recommenders-knn.py,25,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/19.kaggle-recommenders/recommenders-knn.py,32,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/19.kaggle-recommenders/recommenders-knn.py,43,"pred = algo.predict(row[1], row[2])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/4.datascience lifeycle/Lifecycle-I.py,31,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/4.datascience lifeycle/Lifecycle-I.py,50,titanic_test['Survived'] = dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/3.machine learning basics/firstML.py,22,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/3.machine learning basics/firstML.py,35,titanic_test['Survived'] = dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-imputing.py,16,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-imputing.py,18,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-imputing.py,22,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-imputing.py,24,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-scaling.py,19,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-scaling.py,21,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-scaling.py,25,scaler1.fit(titanic_train[scalable_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-scaling.py,28,titanic_train[scalable_features] = scaler1.transform(titanic_train[scalable_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-scaling.py,33,# scaler2.fit(titanic_train[scalable_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-scaling.py,36,# titanic_train[scalable_features] = scaler2.transform(titanic_train[scalable_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-scaling.py,39,# scaler3.fit(titanic_train[scalable_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-scaling.py,42,# titanic_train[scalable_features] = scaler3.transform(titanic_train[scalable_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-onehotencoding.py,21,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-onehotencoding.py,23,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-onehotencoding.py,27,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-onehotencoding.py,29,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-onehotencoding.py,34,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-onehotencoding.py,35,titanic_train[encodable_columns] = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-onehotencoding.py,40,one_hot_encoder.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/11.data preprocessing/preprocessing-onehotencoding.py,42,titanic_train1 = one_hot_encoder.transform(titanic_train).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/5.model deployment/Lifecycle-Deployment.py,35,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/5.model deployment/Lifecycle-LocalTest.py,27,titanic_test1['Survived'] = dt_estimator.predict(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,26,cont_imputer.fit(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,27,titanic_all[imputable_cont_features] = cont_imputer.transform(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,31,cat_imputer.fit(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,32,titanic_all['Embarked'] = cat_imputer.transform(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,68,"dt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,76,X_train1 = fs_model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,83,"grid_dt_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,88,"print(grid_dt_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,91,X_test1 = fs_model.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/15.kaggle-classification-IV/titanic-VII.py,93,titanic_test['Survived'] = grid_dt_estimator.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,45,cont_imputer.fit(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,47,#cat_imputer.fit(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,54,df[cont_features] = imputers[0].transform(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,55,df[cat_features] = imputers[1].transform(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,77,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,81,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,88,return estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,111,"estimator.fit(feature_data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,119,"return features, fs_model.transform(feature_data)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,123,scaler.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression1.py,191,X_train1 = scaled_model.transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,45,cont_imputer.fit(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,47,#cat_imputer.fit(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,54,df[cont_features] = imputers[0].transform(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,55,df[cat_features] = imputers[1].transform(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,77,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,81,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,88,return estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,111,"estimator.fit(feature_data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,119,"return features, fs_model.transform(feature_data)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,123,scaler.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/16.kaggle-regression/regression2.py,191,X_train1 = scaled_model.transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/17.association analysis/apriori1.py,13,oht_ary = oht.fit(dataset).transform(dataset)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/17.association analysis/apriori2.py,16,oht_ary = oht.fit(rows).transform(rows)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/7.kaggle-classification-II/titanic-v4-ml.py,28,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/7.kaggle-classification-II/titanic-v4-ml.py,53,titanic_test['Survived'] = dt_estimator.predict(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/20.dimensionality reduction/pca1.py,16,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/20.dimensionality reduction/pca1.py,31,df2 = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/20.dimensionality reduction/pca2.py,9,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/20.dimensionality reduction/pca2.py,16,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/20.dimensionality reduction/pca2.py,20,df2 = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/20.dimensionality reduction/pca3.py,9,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/20.dimensionality reduction/pca3.py,16,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/20.dimensionality reduction/pca3.py,20,df2 = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking2.py,27,cont_imputer.fit(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking2.py,28,titanic_all[imputable_cont_features] = cont_imputer.transform(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking2.py,32,cat_imputer.fit(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking2.py,33,titanic_all['Embarked'] = cat_imputer.transform(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking2.py,68,"rf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking2.py,76,X_train1 = fs_model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking2.py,94,"grid_stack_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble1.py,28,cont_imputer.fit(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble1.py,29,titanic_all[imputable_cont_features] = cont_imputer.transform(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble1.py,33,cat_imputer.fit(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble1.py,34,titanic_all['Embarked'] = cat_imputer.transform(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble1.py,70,"ada.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble1.py,78,X_train1 = fs_model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble1.py,87,"grid_ada_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble1.py,26,cont_imputer.fit(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble1.py,27,titanic_all[imputable_cont_features] = cont_imputer.transform(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble1.py,31,cat_imputer.fit(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble1.py,32,titanic_all['Embarked'] = cat_imputer.transform(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble1.py,68,"rf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble1.py,76,X_train1 = fs_model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble1.py,83,"grid_bagged_tree_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble1.py,88,"print(grid_bagged_tree_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble2.py,29,cont_imputer.fit(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble2.py,30,titanic_all[imputable_cont_features] = cont_imputer.transform(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble2.py,34,cat_imputer.fit(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble2.py,35,titanic_all['Embarked'] = cat_imputer.transform(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble2.py,71,"rf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble2.py,80,X_train1 = fs_model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble2.py,87,"grid_bagged_tree_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/bagged-ensemble2.py,92,"print(grid_bagged_tree_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking1.py,27,cont_imputer.fit(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking1.py,28,titanic_all[imputable_cont_features] = cont_imputer.transform(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking1.py,32,cat_imputer.fit(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking1.py,33,titanic_all['Embarked'] = cat_imputer.transform(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking1.py,68,"rf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking1.py,76,X_train1 = fs_model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/stacking1.py,94,"grid_stack_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble2.py,28,cont_imputer.fit(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble2.py,29,titanic_all[imputable_cont_features] = cont_imputer.transform(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble2.py,33,cat_imputer.fit(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble2.py,34,titanic_all['Embarked'] = cat_imputer.transform(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble2.py,70,"rf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble2.py,78,X_train1 = fs_model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/ensembles/boosted-ensemble2.py,87,"grid_gb_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,20,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,22,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,26,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,28,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,33,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,34,titanic_train[encodable_columns] = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,39,one_hot_encoder.fit(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,41,titanic_train2 = one_hot_encoder.transform(titanic_train1).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,44,scaler.fit(titanic_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,45,X_train = scaler.transform(titanic_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,51,"grid_knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/lazy learning/knn.py,55,"print(grid_knn_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/objective based learning/logistic-regression.py,27,cont_imputer.fit(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/objective based learning/logistic-regression.py,28,titanic_all[imputable_cont_features] = cont_imputer.transform(titanic_all[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/objective based learning/logistic-regression.py,32,cat_imputer.fit(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/objective based learning/logistic-regression.py,33,titanic_all['Embarked'] = cat_imputer.transform(titanic_all['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/objective based learning/logistic-regression.py,69,"rf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/objective based learning/logistic-regression.py,77,X_train1 = fs_model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/objective based learning/logistic-regression.py,86,"grid_lr_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/objective based learning/logistic-regression.py,92,"print(final_model.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/9.supervised ML algorithms/naive bayes/gaussian-nb.py,27,"nb_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/22.roc-pr curves/roc1.py,30,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/22.roc-pr curves/roc1.py,33,y_predict = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/22.roc-pr curves/roc2.py,35,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/22.roc-pr curves/roc2.py,39,"lr_model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/22.roc-pr curves/roc3.py,53,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/22.roc-pr curves/roc3.py,54,y_predict = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/18.recommenders/recommenders-svd.py,20,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/18.recommenders/recommenders-svd.py,27,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/18.recommenders/recommenders-knn.py,25,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/18.recommenders/recommenders-knn.py,32,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/18.recommenders/recommenders-knn.py,43,"pred = algo.predict(row[1], row[2])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/text-processing1.py,41,"vectorizer.fit(movie_train.loc[0:3,'review'])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/text-processing1.py,46,"review_vectors = vectorizer.transform(movie_train.loc[0:3,'review']).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/text-processing1.py,56,"vectorizer.fit(movie_train.loc[0:3,'review'])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/text-processing1.py,61,"review_vectors = vectorizer.transform(movie_train.loc[0:3,'review']).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/text-processing1.py,73,"vectorizer.fit(movie_train.loc[0:3,'review'])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/text-processing1.py,78,"review_vectors = vectorizer.transform(movie_train.loc[0:3,'review']).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/text-processing2.py,24,"review_vectors = vectorizer.fit_transform(movie_train.loc[0:3,'review']).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/text-processing2.py,27,review_vectors1 = tf_transformer.fit_transform(review_vectors).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/text-processing2.py,31,review_vectors1 = tfidf_transformer.fit_transform(review_vectors).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/nb-text-no-pipeline.py,26,review_vectors = vectorizer.fit_transform(movie_train1['review']).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/nb-text-no-pipeline.py,30,X_train = tfidf_transformer.fit_transform(review_vectors).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/nb-text-no-pipeline.py,36,"grid_nb_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/10.text classification/nb-text-pipeline.py,41,"grid_nb_pipeline_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/8.parameter tuning/parameter-tuning-grid.py,32,"grid_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/8.parameter tuning/parameter-tuning-grid.py,39,"print(grid_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/8.parameter tuning/underfit.py,20,"grid_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/8.parameter tuning/underfit.py,26,"print(grid_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/8.parameter tuning/overfit.py,28,"grid_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/8.parameter tuning/overfit.py,35,"print(grid_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/8.parameter tuning/parameter-tuning-random.py,32,"random_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/8.parameter tuning/parameter-tuning-random.py,39,"print(grid_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/6.ML as a service/Lifecycle-ModelServing.py,15,prediction = dt_estimator.predict(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/21.clustering/clustering-hierarchical.py,26,h_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/21.clustering/clustering-kmeans1.py,26,kmeans_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/21.clustering/clustering-kmeans2.py,39,cluster_labels = clusterer.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,20,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,22,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,26,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,28,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,33,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,34,titanic_train[encodable_columns] = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,39,one_hot_encoder.fit(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,41,titanic_train2 = one_hot_encoder.transform(titanic_train1).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,44,scaler.fit(titanic_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,45,X_train = scaler.transform(titanic_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,51,"grid_knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,55,"print(grid_knn_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,62,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,63,titanic_test[encodable_columns] = mapper.transform(titanic_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,65,titanic_test2 = one_hot_encoder.transform(titanic_test1).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,66,X_test = scaler.transform(titanic_test2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-VI.py,68,titanic_test['Survived'] = grid_knn_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,20,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,22,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,26,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,28,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,33,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,34,titanic_train[encodable_columns] = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,39,one_hot_encoder.fit(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,41,X_train = one_hot_encoder.transform(titanic_train1).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,47,"grid_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,52,"print(grid_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,59,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,60,titanic_test[encodable_columns] = mapper.transform(titanic_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,62,X_test = one_hot_encoder.transform(titanic_test1).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/13.kaggle-classification-III/titanic-V.py,64,titanic_test['Survived'] = grid_dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection1.py,18,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection1.py,20,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection1.py,27,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection1.py,28,titanic_train[encodable_columns] = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection1.py,38,"best_k.fit(titanic_train2, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection1.py,48,"grid_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection1.py,52,"print(grid_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection3.py,18,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection3.py,20,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection3.py,27,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection3.py,28,titanic_train[encodable_columns] = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection3.py,41,"rfe.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection3.py,42,X_new = rfe.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection3.py,47,X_new = model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection2.py,18,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection2.py,20,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection2.py,27,mapper.fit(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection2.py,28,titanic_train[encodable_columns] = mapper.transform(titanic_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection2.py,42,"grid_dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature selection/feature-selection2.py,48,X_new = model.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature creation/feature-creation.py,20,age_imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/14.feature engineering/feature creation/feature-creation.py,21,titanic_train[['Age']] = age_imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/1.python/11.programming-styles.py,9,dt.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-jan/1.python/11.programming-styles.py,10,dt.score()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,16,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,18,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,22,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,24,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,43,lab_encoder_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,45,titanic_train['Sex'] = lab_encoder_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,48,lab_encoder_emb.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,50,titanic_train['Embarked'] = lab_encoder_emb.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,53,lab_encoder_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,55,titanic_train['Pclass'] = lab_encoder_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,58,lab_encoder_fgroup.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,60,titanic_train['FamilyGroup'] = lab_encoder_fgroup.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,65,ohe.fit(titanic_train[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,67,tmp1 = ohe.transform(titanic_train[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,79,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-deploymentpy.py,88,"print(best_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving.py,15,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving.py,18,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving.py,23,titanic_test['Sex'] = objects_map.get('le-sex').transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving.py,24,titanic_test['Embarked'] = objects_map.get('le-emb').transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving.py,25,titanic_test['Pclass'] = objects_map.get('le-pclass').transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving.py,26,titanic_test['FamilyGroup'] = objects_map.get('le-fgroup').transform(titanic_test['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving.py,29,tmp1 = objects_map.get('ohe').transform(titanic_test[cat_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving.py,36,titanic_test['Survived'] = estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving-web.py,17,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving-web.py,20,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving-web.py,25,titanic_test['Sex'] = objects_map.get('le-sex').transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving-web.py,26,titanic_test['Embarked'] = objects_map.get('le-emb').transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving-web.py,27,titanic_test['Pclass'] = objects_map.get('le-pclass').transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving-web.py,28,titanic_test['FamilyGroup'] = objects_map.get('le-fgroup').transform(titanic_test['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving-web.py,31,tmp1 = objects_map.get('ohe').transform(titanic_test[cat_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/11.models-as-a-service/model-serving-web.py,38,predictions = estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/5.model tuning/model tuning-randomsearch.py,18,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/5.model tuning/model tuning-gridsearch.py,18,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,22,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,24,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,28,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,30,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,53,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,55,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,58,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,60,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,63,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,65,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,68,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,70,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,73,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,75,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,80,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,82,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,96,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/8.underfit vs overfit diagnosis/overfit vs underfit diagnosis.py,108,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/12.metrics summary/roc-binary.py,32,"grid_classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/12.metrics summary/roc-binary.py,35,"print(grid_classifier.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/12.metrics summary/roc-binary.py,44,y_pred_classes = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/12.metrics summary/roc-multiclass.py,54,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/12.metrics summary/roc-multiclass.py,57,y_predict = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,22,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,24,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,28,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,30,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,53,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,55,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,58,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,60,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,63,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,65,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,68,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,70,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,73,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,75,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,80,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,82,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,93,"rf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,98,X_train1 = fselector1.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,102,"X_train2 = fselector2.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_selection.py,106,"X_train3 = fselector3.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,15,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,17,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,21,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,23,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,49,lab_encoder_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,51,titanic_train['Sex'] = lab_encoder_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,54,lab_encoder_emb.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,56,titanic_train['Embarked'] = lab_encoder_emb.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,59,lab_encoder_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,61,titanic_train['Pclass'] = lab_encoder_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,64,lab_encoder_title.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,66,titanic_train['Title'] = lab_encoder_title.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,69,lab_encoder_fgroup.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,71,titanic_train['FamilyGroup'] = lab_encoder_fgroup.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,76,ohe.fit(titanic_train[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,78,tmp1 = ohe.transform(titanic_train[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,90,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/7.feature-engg/feature_creation.py,100,"print(best_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/3.machine-learning basics/machine-learning-introduction.py,21,"classifer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/3.machine-learning basics/machine-learning-introduction.py,38,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/14.association based recommenders/apriori1.py,13,oht_ary = oht.fit(dataset).transform(dataset)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/14.association based recommenders/apriori2.py,16,oht_ary = oht.fit(rows).transform(rows)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/4.model evaluation/model-evaluation .py,17,"classifer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/4.model evaluation/model-evaluation .py,34,titanic_test['Survived'] = classifer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,22,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,24,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,28,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,30,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,53,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,55,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,58,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,60,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,63,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,65,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,68,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,70,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,73,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,75,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,80,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,82,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,90,tmp = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,99,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,104,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn2.py,109,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,22,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,24,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,28,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,30,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,53,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,55,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,58,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,60,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,63,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,65,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,68,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,70,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,73,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,75,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,80,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,82,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,96,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,101,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/knn/titanic-knn1.py,106,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,26,df[features] = mapper.fit_transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,30,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,32,df[features] = cont_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,46,return scaler.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,49,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,66,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,73,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,78,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,83,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,88,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,93,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,98,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,103,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,147,X_train1 = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,157,X_test = selector.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression1.py,160,house_test['SalePrice'] = final_estimator.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,26,df[features] = mapper.fit_transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,30,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,32,df[features] = cont_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,46,return scaler.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,49,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,66,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,73,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,78,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,83,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,88,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,93,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,98,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,103,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,151,X_train1 = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,161,X_test = selector.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression4.py,164,house_test['SalePrice'] = final_estimator.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,26,df[features] = mapper.fit_transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,30,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,32,df[features] = cont_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,46,return scaler.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,49,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,66,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,73,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,78,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,83,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,88,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,93,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,98,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,103,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,147,X_train1 = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,155,X_test = selector.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression3.py,157,house_test['SalePrice'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,26,df[features] = mapper.fit_transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,30,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,32,df[features] = cont_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,46,return scaler.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,49,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,66,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,73,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,78,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,83,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,88,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,93,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,98,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,103,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,147,X_train1 = selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,155,X_test = selector.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/kaggle-house sale price prediction/kaggle-regression2.py,157,house_test['SalePrice'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,22,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,24,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,28,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,30,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,53,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,55,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,58,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,60,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,63,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,65,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,68,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,70,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,73,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,75,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,80,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,82,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,95,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,105,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt1.py,109,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,22,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,24,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,28,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,30,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,53,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,55,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,58,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,60,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,63,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,65,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,68,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,70,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,73,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,75,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,80,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,82,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,93,"X_train1 = fselector.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,98,"dt_grid_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,108,"print(final_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,112,X_test1 = fselector.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/decision trees/titanic-dt2.py,114,titanic_test['Survived'] = final_estimator.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,20,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,22,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,26,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,28,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,51,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,53,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,56,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,58,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,61,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,63,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,66,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,68,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,71,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,73,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,78,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,80,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,87,tmp = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,96,"grid_ksvm_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,104,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,110,"grid_ksvm_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-non linear algorithms.py,118,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,20,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,22,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,26,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,28,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,51,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,53,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,56,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,58,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,61,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,63,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,66,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,68,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,71,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,73,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,78,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,80,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,87,tmp = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,96,"grid_lr_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,102,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,109,"grid_lsvm_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,115,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,121,"grid_perceptron_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/objective based learning/objective based-linear algorithms.py,127,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,20,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,22,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,26,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,28,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,51,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,53,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,56,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,58,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,61,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,63,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,66,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,68,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,71,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,73,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,78,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,80,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,87,tmp = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,107,"hvoting_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,113,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,118,"svoting_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,124,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/voting-ensemble.py,127,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,20,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,22,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,26,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,28,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,51,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,53,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,56,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,58,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,61,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,63,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,66,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,68,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,71,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,73,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,78,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,80,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,94,"bt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,100,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,106,"rf_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,112,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,119,"et_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,125,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/bagged-ensemble.py,129,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,21,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,23,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,27,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,29,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,52,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,54,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,57,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,59,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,62,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,64,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,67,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,69,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,72,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,74,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,79,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,81,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,95,"ada_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,103,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,109,"gb_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,115,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,121,"xgb_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,126,"print(final_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/ensemble learning/boosted-ensemble.py,129,titanic_test['Survived'] = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,23,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,25,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,29,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,31,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,54,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,56,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,59,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,61,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,64,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,66,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,69,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,71,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,74,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,76,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,81,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,83,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,97,"nb_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,105,"print(nb_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb1.py,109,titanic_test['Survived'] = nb_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,24,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,26,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,30,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,32,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,55,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,57,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,60,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,62,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,65,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,67,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,70,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,72,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,75,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,77,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,82,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,84,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,100,"nb_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,108,"print(nb_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/naive bayes/titanic-nb2.py,112,titanic_test['Survived'] = nb_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,26,df[features] = mapper.fit_transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,30,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,32,df[features] = cont_imputer.transform(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,46,return scaler.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,49,"selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,52,return select.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,67,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,74,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,79,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,84,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,89,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,94,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,99,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/9.supervised ml algorithms/regression/regression-algorithms.py,104,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/13.personalized recommenders/recommenders-svd.py,20,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/13.personalized recommenders/recommenders-svd.py,27,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/13.personalized recommenders/recommenders-knn.py,23,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/13.personalized recommenders/recommenders-knn.py,30,algo.fit(trainSet)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/13.personalized recommenders/recommenders-knn.py,41,"pred = algo.predict(row[1], row[2])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,15,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,17,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,21,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,23,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,27,lab_encoder_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,29,titanic_train['Sex'] = lab_encoder_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,32,lab_encoder_emb.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,34,titanic_train['Embarked'] = lab_encoder_emb.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,37,lab_encoder_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,39,titanic_train['Pclass'] = lab_encoder_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,44,ohe.fit(titanic_train[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,46,tmp1 = ohe.transform(titanic_train[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,53,scaler.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,56,X_train1 = scaler.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,63,"dt_grid_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,73,"print(best_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,85,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,86,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,87,titanic_test['Sex'] = lab_encoder_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,88,titanic_test['Embarked'] = lab_encoder_emb.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,89,titanic_test['Pclass'] = lab_encoder_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,90,tmp1 = ohe.transform(titanic_test[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,94,X_test1 = scaler.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers2.py,95,titanic_test['Survived'] = best_dt_estimator.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,15,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,17,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,21,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,23,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,49,lab_encoder_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,51,titanic_train['Sex'] = lab_encoder_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,54,lab_encoder_emb.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,56,titanic_train['Embarked'] = lab_encoder_emb.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,59,lab_encoder_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,61,titanic_train['Pclass'] = lab_encoder_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,64,lab_encoder_title.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,66,titanic_train['Title'] = lab_encoder_title.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,69,lab_encoder_fgroup.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,71,titanic_train['FamilyGroup'] = lab_encoder_fgroup.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,76,ohe.fit(titanic_train[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,78,tmp1 = ohe.transform(titanic_train[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,90,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,100,"print(best_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,107,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,108,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,112,titanic_test['Sex'] = lab_encoder_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,113,titanic_test['Embarked'] = lab_encoder_emb.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,114,titanic_test['Pclass'] = lab_encoder_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,115,titanic_test['Title'] = lab_encoder_title.transform(titanic_test['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,116,titanic_test['FamilyGroup'] = lab_encoder_fgroup.transform(titanic_test['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,117,tmp1 = ohe.transform(titanic_test[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical.py,121,titanic_test['Survived'] = best_dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,22,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,24,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,28,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,30,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,53,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,55,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,58,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,60,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,63,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,65,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,68,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,70,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,73,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,75,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,80,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,82,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,96,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,106,"print(best_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution1.py,109,titanic_test['Survived'] = best_dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,20,lab_encoder_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,22,titanic_train['Sex'] = lab_encoder_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,26,ohe.fit(titanic_train[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,28,tmp1 = ohe.transform(titanic_train[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,33,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,35,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,39,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,41,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,67,lab_encoder_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,69,titanic_train['Sex'] = lab_encoder_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,72,lab_encoder_emb.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,74,titanic_train['Embarked'] = lab_encoder_emb.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,77,lab_encoder_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,79,titanic_train['Pclass'] = lab_encoder_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,82,lab_encoder_title.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,84,titanic_train['Title'] = lab_encoder_title.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,87,lab_encoder_fgroup.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,89,titanic_train['FamilyGroup'] = lab_encoder_fgroup.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,94,ohe.fit(titanic_train[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,96,tmp1 = ohe.transform(titanic_train[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,108,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,118,"print(best_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,125,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,126,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,130,titanic_test['Sex'] = lab_encoder_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,131,titanic_test['Embarked'] = lab_encoder_emb.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,132,titanic_test['Pclass'] = lab_encoder_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,133,titanic_test['Title'] = lab_encoder_title.transform(titanic_test['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,134,titanic_test['FamilyGroup'] = lab_encoder_fgroup.transform(titanic_test['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,135,tmp1 = ohe.transform(titanic_test[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/level_mismatch_categorical-solution2.py,139,titanic_test['Survived'] = best_dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,15,cont_imputer.fit(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,17,titanic_train[imputable_cont_features] = cont_imputer.transform(titanic_train[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,21,cat_imputer.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,23,titanic_train['Embarked'] = cat_imputer.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,27,lab_encoder_sex.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,29,titanic_train['Sex'] = lab_encoder_sex.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,32,lab_encoder_emb.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,34,titanic_train['Embarked'] = lab_encoder_emb.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,37,lab_encoder_pclass.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,39,titanic_train['Pclass'] = lab_encoder_pclass.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,44,ohe.fit(titanic_train[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,46,tmp1 = ohe.transform(titanic_train[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,58,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,68,"print(best_dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,80,titanic_test[imputable_cont_features] = cont_imputer.transform(titanic_test[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,81,titanic_test['Embarked'] = cat_imputer.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,82,titanic_test['Sex'] = lab_encoder_sex.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,83,titanic_test['Embarked'] = lab_encoder_emb.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,84,titanic_test['Pclass'] = lab_encoder_pclass.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,85,tmp1 = ohe.transform(titanic_test[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/6.preprocessing/preprocessing-transformers1.py,89,titanic_test['Survived'] = best_dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/lpca1.py,13,lpca.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/lpca1.py,18,df1 = lpca.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,20,cont_imputer.fit(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,22,titanic[imputable_cont_features] = cont_imputer.transform(titanic[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,26,cat_imputer.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,28,titanic['Embarked'] = cat_imputer.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,51,lab_encoder_sex.fit(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,53,titanic['Sex'] = lab_encoder_sex.transform(titanic['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,56,lab_encoder_emb.fit(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,58,titanic['Embarked'] = lab_encoder_emb.transform(titanic['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,61,lab_encoder_pclass.fit(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,63,titanic['Pclass'] = lab_encoder_pclass.transform(titanic['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,66,lab_encoder_title.fit(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,68,titanic['Title'] = lab_encoder_title.transform(titanic['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,71,lab_encoder_fgroup.fit(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,73,titanic['FamilyGroup'] = lab_encoder_fgroup.transform(titanic['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,78,ohe.fit(titanic[ohe_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,80,tmp1 = ohe.transform(titanic[ohe_features]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,87,tmp = scaler.fit_transform(tmp)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,94,lpca.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,100,X_train1 = lpca.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,104,"fselector_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,108,X_train1 = selection.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,114,"grid_lsvm_estimator.fit(X_train1, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/feature-reduction-techniques.py,120,"print(final_estimator.score(X_train1, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/lpca2.py,13,lpca.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2018-october/10.feature transformation and reduction/lpca2.py,18,df1 = lpca.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/5.house price prediction.py,57,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/5.house price prediction.py,61,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/5.house price prediction.py,67,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/5.house price prediction.py,74,"lasso_selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/5.house price prediction.py,82,lpca.fit(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/5.house price prediction.py,84,pca_data = lpca.transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/5.house price prediction.py,88,tsne_data = tsne.fit_transform(pca_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/5.house price prediction.py,103,pca_test_data = lpca.transform(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/5.house price prediction.py,106,house_test['SalePrice'] = np.expm1(final_rf_model.predict(pca_test_data))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/2.house price prediction.py,57,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/2.house price prediction.py,61,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/2.house price prediction.py,67,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/2.house price prediction.py,75,lpca.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/2.house price prediction.py,77,pca_data = lpca.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/2.house price prediction.py,82,"lasso_selector.fit(pca_data, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/2.house price prediction.py,90,tsne_data = tsne.fit_transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/2.house price prediction.py,100,pca_test_data = lpca.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/2.house price prediction.py,104,house_test['SalePrice'] = final_model.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,58,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,62,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,68,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,75,"lasso_selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,83,lpca.fit(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,85,pca_data = lpca.transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,89,tsne_data = tsne.fit_transform(pca_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,183,"tpot_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,184,"print(tpot_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,190,pca_test_data = lpca.transform(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/7.house price prediction-automl-full pipeline.py,193,house_test['SalePrice'] = np.expm1(final_rf_model.predict(pca_test_data))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/1.house price prediction.py,56,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/1.house price prediction.py,60,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/1.house price prediction.py,66,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/1.house price prediction.py,73,"lasso_selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/1.house price prediction.py,81,lpca.fit(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/1.house price prediction.py,83,pca_data = lpca.transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/1.house price prediction.py,86,tsne_data = tsne.fit_transform(pca_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/1.house price prediction.py,97,pca_test_data = lpca.transform(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/1.house price prediction.py,100,house_test['SalePrice'] = final_model.predict(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/3.house price prediction.py,58,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/3.house price prediction.py,62,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/3.house price prediction.py,68,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/3.house price prediction.py,75,"lasso_selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/3.house price prediction.py,83,lpca.fit(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/3.house price prediction.py,85,pca_data = lpca.transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/3.house price prediction.py,89,tsne_data = tsne.fit_transform(pca_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/3.house price prediction.py,104,pca_test_data = lpca.transform(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/3.house price prediction.py,107,house_test['SalePrice'] = np.expm1(final_model.predict(pca_test_data))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,58,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,62,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,68,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,75,"lasso_selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,83,lpca.fit(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,85,pca_data = lpca.transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,89,tsne_data = tsne.fit_transform(pca_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,112,"tpot_estimator.fit(pca_data, y_trans)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,113,"print(tpot_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,119,pca_test_data = lpca.transform(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/6.house price prediction-automl-parameter tuning.py,122,house_test['SalePrice'] = np.expm1(final_rf_model.predict(pca_test_data))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/4.house price prediction.py,57,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/4.house price prediction.py,61,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/4.house price prediction.py,67,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/4.house price prediction.py,74,"lasso_selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/4.house price prediction.py,82,lpca.fit(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/4.house price prediction.py,84,pca_data = lpca.transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/4.house price prediction.py,88,tsne_data = tsne.fit_transform(pca_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/4.house price prediction.py,103,pca_test_data = lpca.transform(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/14.regression(kaggle)/4.house price prediction.py,106,house_test['SalePrice'] = np.expm1(final_kernel_svm_model.predict(pca_test_data))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution31(average ensemble).py,30,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution31(average ensemble).py,32,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution31(average ensemble).py,37,X_train = scaler.fit_transform(titanic_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution31(average ensemble).py,79,titanic_test1[cat_features] = cat_imputers.transform(titanic_test1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution31(average ensemble).py,80,titanic_test1[cont_features] = cont_imputers.transform(titanic_test1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution31(average ensemble).py,85,X_test = scaler.transform(titanic_test2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution31(average ensemble).py,90,classes = np.asarray([clf.predict(X) for clf in clfs])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution4(kernel svm with feature engg).py,60,titanic[cat_features] = cat_imputers.transform(titanic[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution4(kernel svm with feature engg).py,62,titanic[cont_features] = cont_imputers.transform(titanic[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution4(kernel svm with feature engg).py,69,tmp = scaler.fit_transform(titanic)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution4(kernel svm with feature engg).py,88,titanic_test['Survived'] = svm_final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution1(knn).py,28,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution1(knn).py,30,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution1(knn).py,62,titanic_test1[cat_features] = cat_imputers.transform(titanic_test1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution1(knn).py,63,titanic_test1[cont_features] = cont_imputers.transform(titanic_test1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution1(knn).py,68,titanic_test['Survived'] = knn_pipeline_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution33(stacked ensemble).py,31,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution33(stacked ensemble).py,33,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution33(stacked ensemble).py,41,X_train = scaler.fit_transform(titanic_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution33(stacked ensemble).py,86,titanic_test1[cat_features] = cat_imputers.transform(titanic_test1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution33(stacked ensemble).py,87,titanic_test1[cont_features] = cont_imputers.transform(titanic_test1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution33(stacked ensemble).py,92,X_test = scaler.transform(titanic_test2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution33(stacked ensemble).py,93,titanic_test['Survived'] = voting_final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution32(voting ensemble).py,29,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution32(voting ensemble).py,31,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution32(voting ensemble).py,39,X_train = scaler.fit_transform(titanic_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution32(voting ensemble).py,85,titanic_test1[cat_features] = cat_imputers.transform(titanic_test1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution32(voting ensemble).py,86,titanic_test1[cont_features] = cont_imputers.transform(titanic_test1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution32(voting ensemble).py,91,X_test = scaler.transform(titanic_test2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution32(voting ensemble).py,92,titanic_test['Survived'] = voting_final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution2(kernel svm).py,30,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution2(kernel svm).py,32,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution2(kernel svm).py,40,X_train = scaler.fit_transform(titanic_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution2(kernel svm).py,61,titanic_test1[cat_features] = cat_imputers.transform(titanic_test1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution2(kernel svm).py,62,titanic_test1[cont_features] = cont_imputers.transform(titanic_test1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution2(kernel svm).py,67,X_test = scaler.transform(titanic_test2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/titanic_solution2(kernel svm).py,68,titanic_test['Survived'] = svm_final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl2(full pipeline tuning).py,62,titanic[cat_features] = cat_imputers.transform(titanic[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl2(full pipeline tuning).py,64,titanic[cont_features] = cont_imputers.transform(titanic[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl2(full pipeline tuning).py,71,tmp = scaler.fit_transform(titanic)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl2(full pipeline tuning).py,87,"tpot_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl2(full pipeline tuning).py,88,"print(tpot_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl2(full pipeline tuning).py,96,titanic_test['Survived'] = tpot_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl1(hyper parameter tuning).py,62,titanic[cat_features] = cat_imputers.transform(titanic[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl1(hyper parameter tuning).py,64,titanic[cont_features] = cont_imputers.transform(titanic[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl1(hyper parameter tuning).py,71,tmp = scaler.fit_transform(titanic)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl1(hyper parameter tuning).py,101,"tpot_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl1(hyper parameter tuning).py,102,"print(tpot_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/7.classification(kaggle)/auto-ml/titanic_solution-automl1(hyper parameter tuning).py,110,titanic_test['Survived'] = tpot_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/5.underfit and overfit/overfit-underfit-dt.py,17,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/5.underfit and overfit/overfit-underfit-dt.py,20,"train_score = dt_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/5.underfit and overfit/overfit-underfit-dt.py,33,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/5.underfit and overfit/overfit-underfit-dt.py,36,"train_score = dt_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/5.underfit and overfit/overfit-underfit-dt.py,55,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/5.underfit and overfit/overfit-underfit-knn.py,13,"knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/5.underfit and overfit/overfit-underfit-knn.py,16,"train_score = knn_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/5.underfit and overfit/overfit-underfit-knn.py,22,"knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/5.underfit and overfit/overfit-underfit-knn.py,25,"train_score = knn_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/6.voting-ensemble.py,19,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/6.voting-ensemble.py,24,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/6.voting-ensemble.py,29,"rf_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/6.voting-ensemble.py,33,"hvoting_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/6.voting-ensemble.py,39,"svoting_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/6.voting-ensemble.py,44,"svoting_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/6.voting-ensemble.py,51,"svoting_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/3.decision tree learning.py,23,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/3.decision tree learning.py,41,y_pred = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/11.prob learning.py,16,"nb_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/11.prob learning.py,23,print(nb_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/3.random-forest.py,23,"rf_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/3.random-forest.py,44,y_pred = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/ovr-models.py,26,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/ovr-models.py,38,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/ovr-models.py,51,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/ovr-models.py,58,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/ovr-models.py,64,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/2.knn learning.py,22,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/2.knn learning.py,31,y_pred = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/8.linear-models.py,25,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/8.linear-models.py,37,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/2.classification/8.linear-models.py,50,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/4.parameter search/parameter search-solutions.py,19,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/4.parameter search/parameter search-solutions.py,33,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/4.parameter search/parameter search-solutions.py,43,y_pred = final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/classification_utils.py,171,"Z = estimator.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/classification_utils.py,206,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/classification_utils.py,208,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/classification_utils.py,214,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/classification_utils.py,232,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/regression_utils.py,27,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/regression_utils.py,85,"y_pred = estimator.predict(xx.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/regression_utils.py,130,"Z = estimator.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/regression_utils.py,154,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/regression_utils.py,165,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/regression_utils.py,169,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/outlier_utils.py,122,"Z = estimator.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/outlier_utils.py,130,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/outlier_utils.py,163,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/outlier_utils.py,178,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/outlier_utils.py,179,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/outlier_utils.py,192,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/common_utils.py,38,multi_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/common_utils.py,43,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/common_utils.py,59,scaler.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/common_utils.py,64,return tmp.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/common_utils.py,81,"return pd.DataFrame(tmp_model.transform(X), columns = selected_features)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/common_utils.py,99,"grid_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/common_utils.py,130,"grid_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/common_utils.py,261,"grid_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/utils/common_utils.py,266,"print(""Train score:"" + str(grid_estimator.score(X, y)) )"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/3.model evaluation/model evaluation-validation data driven.py,17,"knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/3.model evaluation/model evaluation-test data driven.py,16,"knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/3.model evaluation/model evaluation-test data driven.py,19,y_pred = knn_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/scaling.py,13,scaled_tr.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/scaling.py,16,X_train_scaled = scaled_tr.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/scaling.py,22,X_test_scaled = scaled_tr.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/scaling.py,23,y_pred = final_estimator.predict(X_test_scaled)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/level-mismatch-problem.py,51,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/level-mismatch-problem.py,53,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/level-mismatch-problem.py,60,#titanic_train1 = scaler.fit_transform(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/level-mismatch-problem.py,92,titanic_test1[cat_features] = cat_imputers.transform(titanic_test1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/level-mismatch-problem.py,93,titanic_test1[cont_features] = cont_imputers.transform(titanic_test1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/level-mismatch-problem.py,99,#titanic_test1 = scaler.transform(titanic_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/level-mismatch-problem.py,102,titanic_test['Survived'] = svm_final_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/pipelines.py,17,"knn_pipeline.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/pipelines.py,19,y_pred = knn_pipeline.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/pipelines.py,29,"knn_grid_pipeline.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/6.preprocessing/pipelines.py,33,y_pred = knn_grid_pipeline.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/9.model persistence and deployment/1.build-titanic-model.py,31,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/9.model persistence and deployment/1.build-titanic-model.py,33,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/9.model persistence and deployment/1.build-titanic-model.py,38,X_train = scaler.fit_transform(titanic_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/9.model persistence and deployment/2.titanic-model-service.py,28,titanic_test1[cat_features] = model_objects.get('cat_imputers').transform(titanic_test1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/9.model persistence and deployment/2.titanic-model-service.py,29,titanic_test1[cont_features] = model_objects.get('cont_imputers').transform(titanic_test1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/9.model persistence and deployment/2.titanic-model-service.py,40,X_test = model_objects.get('scaler').transform(titanic_test2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/9.model persistence and deployment/2.titanic-model-service.py,41,result = model_objects.get('estimator').predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/16.clustering/5.clustering-gmm.py,15,gmm_estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/16.clustering/5.clustering-gmm.py,16,gmm_estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/11.density estimation/2.density estimators comparison - 2d.py,64,gmm_grid_estimator.fit(X_sample)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/11.density estimation/2.density estimators comparison - 2d.py,74,kde_grid_estimator.fit(X_sample)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/11.density estimation/1.density estimators comparison - 1d.py,23,"kde = neighbors.KernelDensity(kernel='gaussian', bandwidth=0.5).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/11.density estimation/1.density estimators comparison - 1d.py,27,"nbrs = density_estimation.KNeighborsDensity('bayesian', n_neighbors=40).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/11.density estimation/1.density estimators comparison - 1d.py,31,"gmm = mixture.GaussianMixture(3, 'full').fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/11.density estimation/3.density estimators comparison - higher dim.py,32,pca_digits = pca.fit_transform(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/11.density estimation/3.density estimators comparison - higher dim.py,42,tsne_digits = tsne.fit_transform(pca_digits)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/11.density estimation/3.density estimators comparison - higher dim.py,51,gmm_grid_estimator.fit(pca_digits)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/11.density estimation/3.density estimators comparison - higher dim.py,56,new_tsne_digits = tsne.fit_transform(pca_new_data[0])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/10. dimensionality reduction/manifold learning algorithms.py,18,ys = pca.fit_transform(xs)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/10. dimensionality reduction/manifold learning algorithms.py,24,ms = mds.fit_transform(xs)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/10. dimensionality reduction/manifold learning algorithms.py,29,ts = tsne.fit_transform(xs)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/10. dimensionality reduction/linear pca.py,23,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/10. dimensionality reduction/linear pca.py,32,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/10. dimensionality reduction/linear pca.py,41,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/10. dimensionality reduction/linear pca.py,50,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-statistical.py,51,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-statistical.py,53,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-statistical.py,61,"X_train1 = filter_selector.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-statistical.py,64,"X_train1 = filter_selector.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-wrapper.py,51,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-wrapper.py,53,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-wrapper.py,62,"X_train1 = wrapper_selector.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-wrapper.py,66,"X_train1 = wrapper_selector.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-wrapper.py,70,"X_train1 = wrapper_selector.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-embedded.py,51,titanic_train1[cat_features] = cat_imputers.transform(titanic_train1[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-embedded.py,53,titanic_train1[cont_features] = cont_imputers.transform(titanic_train1[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-embedded.py,64,X_train1 = embedded_selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-embedded.py,71,X_train1 = embedded_selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/8.feature selection/feature selection-embedded.py,78,X_train1 = embedded_selector.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/15.classification varations and metrics/imbalanced-classification.py,23,"dummy_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/15.classification varations and metrics/imbalanced-classification.py,24,dummy_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/15.classification varations and metrics/imbalanced-classification.py,44,"dummy_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/15.classification varations and metrics/imbalanced-classification.py,45,dummy_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/15.classification varations and metrics/hard-classification.py,38,"dummy_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/15.classification varations and metrics/hard-classification.py,39,dummy_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/15.classification varations and metrics/hard-classification.py,59,"dummy_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-may/15.classification varations and metrics/hard-classification.py,60,dummy_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/5.house price prediction.py,63,tsne_data = viz_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/5.house price prediction.py,105,"house_test['SalePrice'] = np.round(pipeline_generated.predict(house_test1), 2)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-1.house price.py,60,house1[imputable_cat_features] = cat_imputer.transform(house1[imputable_cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-1.house price.py,65,house1[imputable_cont_features] = cont_imputer.transform(house1[imputable_cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-1.house price.py,73,house3 = scaler.transform(house2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-1.house price.py,81,"lasso_selector.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-1.house price.py,90,lpca.fit(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-1.house price.py,92,pca_data = lpca.transform(X_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-1.house price.py,95,tsne_data = tsne.fit_transform(pca_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-1.house price.py,107,pca_test_data = lpca.transform(X_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-1.house price.py,110,house_test['SalePrice'] = final_model.predict(pca_test_data)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/1-2.house price.py,82,"house_test['SalePrice'] = np.round(pipeline_generated.predict(house_test1), 2)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/6.house price prediction.py,63,tsne_data = viz_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/6.house price prediction.py,106,"house_test['SalePrice'] = np.round(pipeline_generated.predict(house_test1), 2)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/2.house price.py,96,"house_test['SalePrice'] = np.round(pipeline_generated.predict(house_test1), 2)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/7.house price prediction- automl.py,64,tsne_data = viz_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/7.house price prediction- automl.py,67,X_train = preprocess_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/7.house price prediction- automl.py,77,"tpot_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/7.house price prediction- automl.py,78,"print(tpot_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/7.house price prediction- automl.py,92,X_test = preprocess_pipeline.fit_transform(house_test1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/7.house price prediction- automl.py,96,"house_test['SalePrice'] = np.round(tpot_estimator.predict(house_test1), 2)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/4.house price prediction.py,63,tsne_data = viz_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/4.house price prediction.py,105,"house_test['SalePrice'] = np.round(pipeline_generated.predict(house_test1), 2)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/3.house price.py,57,#preprocess_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/13.house price prediction(kaggle)/3.house price.py,99,"house_test['SalePrice'] = np.round(pipeline_generated.predict(house_test1), 2)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/3.machine learning introduction/machine learning introduction3.py,13,"rf_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/3.machine learning introduction/machine learning introduction3.py,18,titanic_test['Survived'] = rf_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/3.machine learning introduction/machine learning introduction2.py,13,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/3.machine learning introduction/machine learning introduction2.py,18,titanic_test['Survived'] = dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/3.machine learning introduction/machine learning introduction1.py,13,"knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/3.machine learning introduction/machine learning introduction1.py,18,titanic_test['Survived'] = knn_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/14.dimensionality reduction/dimensionality reduction-tsne2.py,58,preprocessed_data = preprocess_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/14.dimensionality reduction/dimensionality reduction-tsne2.py,66,tsne_data = viz_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/14.dimensionality reduction/dimensionality reduction-pca2.py,57,preprocessed_data = preprocess_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/14.dimensionality reduction/dimensionality reduction-pca2.py,65,lpca_data = viz_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/14.dimensionality reduction/dimensionality reduction-pca1.py,18,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/14.dimensionality reduction/dimensionality reduction-pca1.py,31,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/14.dimensionality reduction/dimensionality reduction-pca1.py,43,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/14.dimensionality reduction/dimensionality reduction-pca1.py,55,lpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outliers.py,15,iso_forest_estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outliers.py,17,print(iso_forest_estimator.predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outliers.py,21,lof_estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outliers.py,26,osvm_estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outliers.py,28,print(osvm_estimator.predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outlier detection.py,56,house_train2 = preprocess_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outlier detection.py,63,labels = outlier_pipeline.fit_predict(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outlier detection.py,68,clustering.fit(house_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outlier detection.py,76,cluster_data = cluster_pipeline.fit_transform(house_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/20.outlier detection/outlier detection.py,81,clustering.fit(corr_matrix)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/6.overfit and underfit/decision tree - overfit and underfit.py,13,lencoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/6.overfit and underfit/decision tree - overfit and underfit.py,15,titanic_train['Sex_encoded'] = lencoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/6.overfit and underfit/decision tree - overfit and underfit.py,18,imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/6.overfit and underfit/decision tree - overfit and underfit.py,20,titanic_train['Age_imputed'] = imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/6.overfit and underfit/decision tree - overfit and underfit.py,26,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/6.overfit and underfit/decision tree - overfit and underfit.py,29,"print(dt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/6.overfit and underfit/decision tree - overfit and underfit.py,43,titanic_test['Sex_encoded'] = lencoder.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/6.overfit and underfit/decision tree - overfit and underfit.py,44,titanic_test['Age_imputed'] = imputer.transform(titanic_test[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/6.overfit and underfit/decision tree - overfit and underfit.py,47,titanic_test['Survived'] = dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/15.clustering/2.clustering-kmeans.py,13,kmeans.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/15.clustering/5.clustering-gmm.py,15,gmm_estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/15.clustering/5.clustering-gmm.py,16,gmm_estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/15.clustering/3.kmeans-limitations.py,17,X_tsne = tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/4.model evaluation/model evaluation3.py,13,"rf_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/4.model evaluation/model evaluation3.py,19,titanic_test['Survived'] = rf_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/4.model evaluation/model evaluation2.py,13,"knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/4.model evaluation/model evaluation2.py,19,titanic_test['Survived'] = knn_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/4.model evaluation/model evaluation1.py,15,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/4.model evaluation/model evaluation1.py,29,titanic_test['Survived'] = dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/pca_utils.py,99,X_pca = pca_transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/pca_utils.py,149,X_pca = pca_transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/pca_utils.py,179,X_pca = pca_transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/classification_utils.py,171,"Z = estimator.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/classification_utils.py,206,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/classification_utils.py,208,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/classification_utils.py,217,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/classification_utils.py,241,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/tsne_utils.py,99,"manifold.TSNE(n_components=n_components, random_state=100).fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/clustering_utils.py,34,labels = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/clustering_utils.py,36,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/clustering_utils.py,66,labels = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/clustering_utils.py,68,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/clustering_utils.py,82,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/clustering_utils.py,100,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/clustering_utils.py,116,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/clustering_utils.py,123,y = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/clustering_utils.py,135,y = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/regression_utils.py,27,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/regression_utils.py,103,"y_pred = estimator.predict(xx.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/regression_utils.py,168,"Z = estimator.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/regression_utils.py,200,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/regression_utils.py,216,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/regression_utils.py,227,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/regression_utils.py,231,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/outlier_utils.py,122,"Z = estimator.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/outlier_utils.py,130,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/outlier_utils.py,163,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/outlier_utils.py,178,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/outlier_utils.py,179,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/outlier_utils.py,193,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/common_utils.py,41,multi_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/common_utils.py,46,cont_imputer.fit(df[features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/common_utils.py,62,scaler.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/common_utils.py,67,return tmp.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/common_utils.py,84,"return pd.DataFrame(tmp_model.transform(X), columns = selected_features)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/common_utils.py,102,"grid_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/common_utils.py,133,"grid_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/common_utils.py,264,"grid_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/utils/common_utils.py,269,"print(""Train score:"" + str(grid_estimator.score(X, y)) )"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/2.random predictions/dummy classification1.py,13,"dummy_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/2.random predictions/dummy classification1.py,18,titanic_test['Survived'] = dummy_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/2.random predictions/dummy classification3.py,14,"dummy_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/2.random predictions/dummy classification3.py,19,titanic_test['Survived'] = dummy_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/2.random predictions/dummy classification2.py,13,"dummy_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/2.random predictions/dummy classification2.py,18,titanic_test['Survived'] = dummy_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v42(knn).py,11,imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v42(knn).py,13,titanic_train['Age_imputed'] = imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v42(knn).py,19,X = scaler.fit_transform(titanic_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v42(knn).py,28,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v42(knn).py,31,"print(knn_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v42(knn).py,33,"print(knn_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v1.py,15,lencoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v1.py,17,titanic_train['Sex_encoded'] = lencoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v1.py,20,imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v1.py,22,titanic_train['Age_imputed'] = imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v1.py,28,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v1.py,43,titanic_test['Sex_encoded'] = lencoder.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v1.py,44,titanic_test['Age_imputed'] = imputer.transform(titanic_test[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v1.py,47,titanic_test['Survived'] = dt_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v5.py,13,lencoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v5.py,15,titanic_train['Sex_encoded'] = lencoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v5.py,18,imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v5.py,20,titanic_train['Age_imputed'] = imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v5.py,32,"rf_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v5.py,36,"print(rf_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v5.py,38,"print(rf_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,11,lencoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,13,titanic_train['Sex_encoded'] = lencoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,16,imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,18,titanic_train['Age_imputed'] = imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,30,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,33,"print(knn_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,35,"print(knn_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,47,titanic_test['Sex_encoded'] = lencoder.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,48,titanic_test['Age_imputed'] = imputer.transform(titanic_test[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v4.py,51,titanic_test['Survived'] = dt_grid_estimator.best_estimator_.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,13,age_imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,14,titanic_train['Age_imputed'] = age_imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,17,fare_imputer.fit(titanic_train[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,33,sex_encoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,34,titanic_train['Sex_encoded'] = sex_encoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,37,pclass_encoder.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,38,titanic_train['Pclass_encoded'] = pclass_encoder.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,41,emb_encoder.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,42,titanic_train['Embarked_encoded'] = emb_encoder.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,51,title_encoder.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,52,titanic_train['Title_encoded'] = title_encoder.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,70,fg_encoder.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,71,titanic_train['FamilyGroup_encoded'] =fg_encoder.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,84,"ada_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,88,"print(ada_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,90,"print(ada_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,95,"xgb_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,99,"print(xgb_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,101,"print(xgb_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,107,titanic_test['Age_imputed'] = age_imputer.transform(titanic_test[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,108,titanic_test['Fare'] = fare_imputer.transform(titanic_test[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,117,titanic_test['Sex_encoded'] = sex_encoder.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,118,titanic_test['Pclass_encoded'] = pclass_encoder.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,119,titanic_test['Embarked_encoded'] = emb_encoder.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,120,titanic_test['Title_encoded'] = title_encoder.transform(titanic_test['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,121,titanic_test['FamilyGroup_encoded'] = fg_encoder.transform(titanic_test['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v7.py,124,titanic_test['Survived'] = xgb_grid_estimator.best_estimator_.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,16,age_imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,17,titanic_train['Age_imputed'] = age_imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,20,fare_imputer.fit(titanic_train[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,36,sex_encoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,37,titanic_train['Sex_encoded'] = sex_encoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,40,pclass_encoder.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,41,titanic_train['Pclass_encoded'] = pclass_encoder.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,44,emb_encoder.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,45,titanic_train['Embarked_encoded'] = emb_encoder.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,54,title_encoder.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,55,titanic_train['Title_encoded'] = title_encoder.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,73,fg_encoder.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,74,titanic_train['FamilyGroup_encoded'] =fg_encoder.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,90,"tpot_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,91,"print(tpot_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,95,"print(tpot_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,101,titanic_test['Age_imputed'] = age_imputer.transform(titanic_test[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,102,titanic_test['Fare'] = fare_imputer.transform(titanic_test[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,111,titanic_test['Sex_encoded'] = sex_encoder.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,112,titanic_test['Pclass_encoded'] = pclass_encoder.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,113,titanic_test['Embarked_encoded'] = emb_encoder.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,114,titanic_test['Title_encoded'] = title_encoder.transform(titanic_test['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,115,titanic_test['FamilyGroup_encoded'] = fg_encoder.transform(titanic_test['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/automl2.py,118,titanic_test['Survived'] = tpot_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,15,lencoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,17,titanic_train['Sex_encoded'] = lencoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,20,imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,22,titanic_train['Age_imputed'] = imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,34,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,39,"print(dt_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,41,"print(dt_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,53,titanic_test['Sex_encoded'] = lencoder.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,54,titanic_test['Age_imputed'] = imputer.transform(titanic_test[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v3.py,57,titanic_test['Survived'] = dt_grid_estimator.best_estimator_.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v41(knn issues).py,11,lencoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v41(knn issues).py,13,titanic_train['Sex_encoded'] = lencoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v41(knn issues).py,16,imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v41(knn issues).py,18,titanic_train['Age_imputed'] = imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v41(knn issues).py,30,"knn_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v41(knn issues).py,33,"print(knn_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v41(knn issues).py,35,"print(knn_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,15,lencoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,17,titanic_train['Sex_encoded'] = lencoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,20,imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,22,titanic_train['Age_imputed'] = imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,31,"dt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,34,"dt_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,39,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,44,"print(dt_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,56,titanic_test['Sex_encoded'] = lencoder.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,57,titanic_test['Age_imputed'] = imputer.transform(titanic_test[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v2.py,60,titanic_test['Survived'] = dt_grid_estimator.best_estimator_.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,14,age_imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,15,titanic_train['Age_imputed'] = age_imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,18,fare_imputer.fit(titanic_train[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,34,sex_encoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,35,titanic_train['Sex_encoded'] = sex_encoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,38,pclass_encoder.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,39,titanic_train['Pclass_encoded'] = pclass_encoder.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,42,emb_encoder.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,43,titanic_train['Embarked_encoded'] = emb_encoder.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,52,title_encoder.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,53,titanic_train['Title_encoded'] = title_encoder.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,71,fg_encoder.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,72,titanic_train['FamilyGroup_encoded'] =fg_encoder.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,84,"rf_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,88,"print(rf_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,90,"print(rf_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,96,"ada_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,100,"print(ada_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,102,"print(ada_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,108,"dt_grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,112,"print(dt_grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,114,"print(dt_grid_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,119,titanic_test['Age_imputed'] = age_imputer.transform(titanic_test[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,120,titanic_test['Fare'] = fare_imputer.transform(titanic_test[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,129,titanic_test['Sex_encoded'] = sex_encoder.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,130,titanic_test['Pclass_encoded'] = pclass_encoder.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,131,titanic_test['Embarked_encoded'] = emb_encoder.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,132,titanic_test['Title_encoded'] = title_encoder.transform(titanic_test['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,133,titanic_test['FamilyGroup_encoded'] = fg_encoder.transform(titanic_test['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/titanic-v6.py,136,titanic_test['Survived'] = rf_grid_estimator.best_estimator_.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,16,age_imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,17,titanic_train['Age_imputed'] = age_imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,20,fare_imputer.fit(titanic_train[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,36,sex_encoder.fit(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,37,titanic_train['Sex_encoded'] = sex_encoder.transform(titanic_train['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,40,pclass_encoder.fit(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,41,titanic_train['Pclass_encoded'] = pclass_encoder.transform(titanic_train['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,44,emb_encoder.fit(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,45,titanic_train['Embarked_encoded'] = emb_encoder.transform(titanic_train['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,54,title_encoder.fit(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,55,titanic_train['Title_encoded'] = title_encoder.transform(titanic_train['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,73,fg_encoder.fit(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,74,titanic_train['FamilyGroup_encoded'] =fg_encoder.transform(titanic_train['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,103,"tpot_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,106,"print(tpot_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,108,"print(tpot_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,114,titanic_test['Age_imputed'] = age_imputer.transform(titanic_test[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,115,titanic_test['Fare'] = fare_imputer.transform(titanic_test[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,124,titanic_test['Sex_encoded'] = sex_encoder.transform(titanic_test['Sex'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,125,titanic_test['Pclass_encoded'] = pclass_encoder.transform(titanic_test['Pclass'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,126,titanic_test['Embarked_encoded'] = emb_encoder.transform(titanic_test['Embarked'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,127,titanic_test['Title_encoded'] = title_encoder.transform(titanic_test['Title'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,128,titanic_test['FamilyGroup_encoded'] = fg_encoder.transform(titanic_test['FamilyGroup'])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/5.kaggle(titanic)/auto ml1.py,131,titanic_test['Survived'] = tpot_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arma(gridsearch).py,30,res = estimator.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arma(gridsearch).py,33,"y_pred = estimator.predict(res.params, test_data.index[0], test_data.index[-1])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arma(gridsearch).py,47,res = estimator.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arma(gridsearch).py,51,"y_pred = estimator.predict(res.params, start=0, end=df.shape[0]-1 )"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arma(gridsearch).py,80,"pred = estimator.predict(res.params, start_index, end_index)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arma(gridsearch).py,85,"pred = estimator.predict(res.params, index[0], index[-1])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-ar(gridsearch).py,23,res = estimator.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-ar(gridsearch).py,26,"pred = estimator.predict(res.params, test_data.index[0], test_data.index[-1])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-ar(gridsearch).py,41,res = estimator.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-ar(gridsearch).py,45,"predictions = estimator.predict(res.params, start=0, end=df.shape[0]-1 )"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-ar(gridsearch).py,75,"pred = estimator.predict(res.params, start_index, end_index)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-ar(gridsearch).py,80,"pred = estimator.predict(res.params, index[0], index[-1])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arima(gridsearch).py,30,res = estimator.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arima(gridsearch).py,33,"y_pred = estimator.predict(res.params, test_data.index[0], test_data.index[-1])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arima(gridsearch).py,47,res = estimator.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arima(gridsearch).py,51,"y_pred = estimator.predict(res.params, start=0, end=df.shape[0]-1 )"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arima(gridsearch).py,80,"pred = estimator.predict(res.params, start_index, end_index)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-arima(gridsearch).py,85,"pred = estimator.predict(res.params, index[0], index[-1])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-model building and evaluation.py,20,res = estimator.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-model building and evaluation.py,26,"predictions = estimator.predict(res.params, start=0, end=df.shape[0]-1 )"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-model building and evaluation.py,41,res = estimator.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/18.time series forecasting/timeseries-model building and evaluation.py,42,"pred = estimator.predict(res.params,test_data.index[0], test_data.index[-1])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/8.geometrical viz - classification algorithms/linear-models.py,25,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/8.geometrical viz - classification algorithms/linear-models.py,37,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/8.geometrical viz - classification algorithms/linear-models.py,50,print(final_estimator.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/8.geometrical viz - classification algorithms/feature transformation.py,20,X_poly1 = poly_features.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/8.geometrical viz - classification algorithms/feature transformation.py,23,X_poly2 = poly_features.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/16.association analysis/association based recommedations1.py,14,oht_ary = oht.fit(dataset).transform(dataset)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/16.association analysis/association based recommedations2.py,16,oht_ary = oht.fit(rows).transform(rows)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/10.kaggle(dont overfit2)/dont overfit-pipeline5.py,36,"print(pipeline_generated.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/10.kaggle(dont overfit2)/dont overfit-pipeline1.py,35,"print(pipeline_generated.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/10.kaggle(dont overfit2)/dont overfit-pipeline4.py,35,"print(pipeline_generated.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/10.kaggle(dont overfit2)/dont overfit-pipeline3.py,35,"print(pipeline_generated.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/10.kaggle(dont overfit2)/dont overfit-pipeline6.py,29,"tpot_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/10.kaggle(dont overfit2)/dont overfit-pipeline6.py,30,"print(tpot_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/10.kaggle(dont overfit2)/dont overfit-pipeline6.py,34,"print(tpot_estimator.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/10.kaggle(dont overfit2)/dont overfit-pipeline2.py,35,"print(pipeline_generated.score(X_eval, y_eval))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/11.feature selection/feature selection.py,24,train2 = variance.fit_transform(train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/11.feature selection/feature selection.py,32,train2 = embedded_selector.transform(train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/11.feature selection/feature selection.py,36,"train2 = statistical_selector.fit_transform(train1, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/11.feature selection/feature selection.py,42,"train2 = rfe_selector.fit_transform(train1, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/17. personalized recommendations/movie rating prediction-svd.py,23,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/17. personalized recommendations/movie rating prediction-svd.py,30,final_estimator.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/17. personalized recommendations/movie rating prediction-knn1.py,28,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/17. personalized recommendations/movie rating prediction-knn1.py,35,final_estimator.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/17. personalized recommendations/movie rating prediction-knn2.py,28,gs.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2019-october/17. personalized recommendations/movie rating prediction-knn2.py,35,final_estimator.fit(movie_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/8.kaggle-classification-III/kaggle-VII.py,26,"tree_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/8.kaggle-classification-III/kaggle-VII.py,27,"print(tree_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/8.kaggle-classification-III/kaggle-VII.py,43,titanic_test['Survived'] = tree_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/8.kaggle-classification-III/kaggle-VI.py,26,"tree_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/8.kaggle-classification-III/kaggle-VI.py,27,"print(tree_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/8.kaggle-classification-III/kaggle-VI.py,43,titanic_test['Survived'] = tree_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/5.model evaluation/model-evalution.py,24,"tree_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/5.model evaluation/model-evalution.py,26,"tree_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/3.machine learning basics/ML-programming.py,20,"tree_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/10.model tuning/parameter-tuning.py,27,"grid_tree_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/10.model tuning/parameter-tuning.py,31,"print(grid_tree_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/10.model tuning/parameter-tuning.py,47,titanic_test['Survived'] = grid_tree_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/4.kaggle-classification-II/kaggle-V.py,19,"tree_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/4.kaggle-classification-II/kaggle-V.py,32,titanic_test['Survived'] = tree_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/decision trees/decision-tree-capability0.py,12,"tree_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/decision trees/decision-tree-capability0.py,13,"util.plot_decision_boundary(lambda x: tree_estimator.predict(x), X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/decision trees/decision-tree-capability1.py,11,"tree_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/decision trees/decision-tree-capability1.py,12,"util.plot_decision_boundary(lambda x: tree_estimator.predict(x), X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/decision trees/decision-tree-capability2.py,11,"tree_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/decision trees/decision-tree-capability2.py,12,"util.plot_decision_boundary(lambda x: tree_estimator.predict(x), X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/decision trees/decision-tree-capability3.py,21,"tree_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/decision trees/decision-tree-capability3.py,22,"util.plot_decision_boundary(lambda x: tree_estimator.predict(x), X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/prob models/prob-nb.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/prob models/prob-nb.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/prob models/prob-nb.py,74,"nb_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/prob models/prob-nb.py,82,titanic_test['Survived'] = nb_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn-scaling.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn-scaling.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn-scaling.py,71,scaler.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn-scaling.py,72,X_train = scaler.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn-scaling.py,79,"grid_knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn-scaling.py,87,titanic_test['Survived'] = grid_knn_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn.py,74,"grid_knn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/lazy models/lazy-knn.py,88,titanic_test['Survived'] = grid_rf_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/stacking models/stacking-model.py,31,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/stacking models/stacking-model.py,33,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/stacking models/stacking-model.py,85,"stacked_model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/stacking models/stacking-model.py,90,titanic_test['Survived'] = stacked_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/stacking models/stacking.py,30,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/stacking models/stacking.py,31,y_pred = clf.predict(X_holdout)[:]
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/stacking models/stacking.py,41,"grid.fit(S_train, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/stacking models/stacking.py,56,"S_test_i[:, j] = clf.predict(X)[:]"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/stacking models/stacking.py,60,y_pred = clf.predict(S_test)[:]
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-ada.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-ada.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-ada.py,76,"grid_ada_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-ada.py,80,"print(grid_ada_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-ada.py,90,titanic_test['Survived'] = grid_rf_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-gbm.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-gbm.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-gbm.py,74,"grid_gbm_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-gbm.py,78,"print(grid_gbm_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/boosted models/boosting-gbm.py,88,titanic_test['Survived'] = grid_rf_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/neuralnet.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/neuralnet.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/neuralnet.py,71,scaler.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/neuralnet.py,72,X_train = scaler.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/neuralnet.py,79,"grid_nn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/neuralnet.py,83,"print(grid_nn_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/neuralnet.py,91,titanic_test['Survived'] = nn_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/logistic-regression.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/logistic-regression.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/logistic-regression.py,74,"grid_lr_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/logistic-regression.py,78,"print(grid_lr_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/logistic-regression.py,86,titanic_test['Survived'] = grid_lr_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/kernel-svm.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/kernel-svm.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/kernel-svm.py,74,"grid_ksvm_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/kernel-svm.py,78,"print(grid_ksvm_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/kernel-svm.py,86,titanic_test['Survived'] = grid_lsvm_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/linear-svm.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/linear-svm.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/linear-svm.py,74,"grid_lsvm_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/linear-svm.py,78,"print(grid_lsvm_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/objective based models/linear-svm.py,86,titanic_test['Survived'] = grid_lsvm_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-soft.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-soft.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-soft.py,79,"grid_voting_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-soft.py,83,"print(grid_voting_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-soft.py,89,titanic_test['Survived'] = grid_voting_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-hard.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-hard.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-hard.py,79,"grid_voting_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-hard.py,83,"print(grid_voting_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/voting models/voting-hard.py,90,titanic_test['Survived'] = grid_voting_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-bt.py,31,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-bt.py,33,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-bt.py,77,"grid_bt_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-bt.py,81,"print(grid_bt_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-bt.py,86,titanic_test['Survived'] = grid_rf_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/rf-capability.py,51,"tree_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/rf-capability.py,52,"plot_decision_boundary(lambda x: tree_estimator.predict(x), X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/rf-capability.py,55,"rf_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/rf-capability.py,56,"plot_decision_boundary(lambda x: rf_estimator.predict(x), X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-et.py,31,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-et.py,33,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-et.py,76,"grid_et_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-et.py,80,"print(grid_et_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-et.py,90,titanic_test['Survived'] = grid_rf_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-rf.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-rf.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-rf.py,75,"grid_rf_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-rf.py,80,"print(grid_rf_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/11.supervised learning/bagged models/bagging-rf.py,90,titanic_test['Survived'] = grid_rf_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/15.kaggle-classification-IV/titanic-VIII.py,30,"mean_imputer.fit(titanic_train[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/15.kaggle-classification-IV/titanic-VIII.py,32,"titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/15.kaggle-classification-IV/titanic-VIII.py,74,"grid_tree_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/15.kaggle-classification-IV/titanic-VIII.py,78,"print(grid_tree_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/15.kaggle-classification-IV/titanic-VIII.py,88,titanic_test['Survived'] = grid_tree_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/12.unsupervised learning/titanic-tsne.py,26,titanic_2 = tsne.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/12.unsupervised learning/pca/pca1.py,16,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/12.unsupervised learning/pca/pca1.py,20,df1_pca = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/12.unsupervised learning/pca/pca2.py,10,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/12.unsupervised learning/pca/pca2.py,20,pca.fit(df2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/12.unsupervised learning/pca/pca3.py,9,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/12.unsupervised learning/pca/pca3.py,16,pca.fit(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/12.unsupervised learning/pca/pca3.py,18,df2 = pca.transform(df1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/14.feature creation/feature-creation.py,21,age_imputer.fit(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/14.feature creation/feature-creation.py,22,titanic_train[['Age']] = age_imputer.transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/20.association analysis/apriori1.py,13,oht_ary = oht.fit(dataset).transform(dataset)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/20.association analysis/apriori2.py,16,oht_ary = oht.fit(rows).transform(rows)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-ridge.py,46,mean_imputer.fit(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-ridge.py,48,mode_imputer.fit(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-ridge.py,61,df[cont_features] = imputers[0].transform(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-ridge.py,62,df[cat_features] = imputers[1].transform(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-ridge.py,84,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-ridge.py,88,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-ridge.py,95,return estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-knn.py,46,mean_imputer.fit(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-knn.py,48,mode_imputer.fit(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-knn.py,61,df[cont_features] = imputers[0].transform(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-knn.py,62,df[cat_features] = imputers[1].transform(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-knn.py,84,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-knn.py,88,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-knn.py,95,return estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-lasso.py,46,mean_imputer.fit(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-lasso.py,48,mode_imputer.fit(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-lasso.py,61,df[cont_features] = imputers[0].transform(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-lasso.py,62,df[cat_features] = imputers[1].transform(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-lasso.py,84,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-lasso.py,88,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-lasso.py,95,return estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-rf.py,46,mean_imputer.fit(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-rf.py,48,mode_imputer.fit(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-rf.py,61,df[cont_features] = imputers[0].transform(df[cont_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-rf.py,62,df[cat_features] = imputers[1].transform(df[cat_features])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-rf.py,84,"grid_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-rf.py,88,"print(grid_estimator.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/16.kaggle-regression-I/regression-rf.py,95,return estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/18.outlier detection/outlier-detection.py,42,svm_model .fit(listings)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/18.outlier detection/outlier-detection.py,54,iso_forest_model.fit(listings)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/18.outlier detection/outlier-detection.py,56,decisions_if = iso_forest_model.predict(listings)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/6.model deployment/model-export.py,20,"tree_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/6.model deployment/model-export.py,21,"tree_estimator.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/6.model deployment/model-serving.py,12,prediction = dt_estimator.predict(query_df)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/19.clustering/clustering-hierarchical.py,26,h_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/19.clustering/clustering-kmeans1.py,26,kmeans_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/19.clustering/clustering-kmeans2.py,39,cluster_labels = clusterer.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/1.python/9.paradigms.py,9,dt.fit()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-aug/1.python/9.paradigms.py,10,dt.score()
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/7.kaggle-II(classification)/titanic-v3-decision tree.py,25,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/7.kaggle-II(classification)/titanic-v3-decision tree.py,26,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/7.kaggle-II(classification)/titanic-v3-decision tree.py,27,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/7.kaggle-II(classification)/titanic-v3-decision tree.py,33,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/7.kaggle-II(classification)/titanic-v3-decision tree.py,42,titanic_test1.Sex = le.fit_transform(titanic_test1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/7.kaggle-II(classification)/titanic-v3-decision tree.py,43,titanic_test1.Embarked = le.fit_transform(titanic_test1.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/7.kaggle-II(classification)/titanic-v3-decision tree.py,44,titanic_test1.Pclass = le.fit_transform(titanic_test1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/16.regression algorithms/random-forest1.py,30,"rf_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/16.regression algorithms/decision-trees2.py,36,"dt_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/16.regression algorithms/random-forest-pca.py,26,scaled_features = mapper.fit_transform(restaurant_train1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/16.regression algorithms/random-forest-pca.py,30,pca.fit(restaurant_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/16.regression algorithms/random-forest-pca.py,32,restaurant_train3 = pca.transform(restaurant_train2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/16.regression algorithms/random-forest-pca.py,43,"rf_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/16.regression algorithms/decision-trees1.py,39,"dt_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/16.regression algorithms/random-forest2.py,33,"rf_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/17.roc curve/roc2.py,24,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/17.roc curve/roc2.py,25,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/17.roc curve/roc2.py,26,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/17.roc curve/roc2.py,34,"grid_model.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/17.roc curve/roc2.py,37,grid_model.predict()
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v7(fe,pre,mb).py",33,titanic_all[['Age']] = age_imputer.fit_transform(titanic_all[['Age']])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v7(fe,pre,mb).py",78,titanic_all[['Fare']] = fare_imputer.fit_transform(titanic_all[['Fare']])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v7(fe,pre,mb).py",98,"rf_grid_estimator.fit(X_train,y_train)"
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v7(fe,pre,mb).py",103,titanic_test['Survived'] = rf_grid_estimator.predict(X_test)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v6(fe,pre,mb).py",28,age_imputer.fit(titanic_train[['Age']])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v6(fe,pre,mb).py",30,titanic_train[['Age']] = age_imputer.transform(titanic_train[['Age']])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v6(fe,pre,mb).py",90,fare_imputer.fit(titanic_train[['Fare']])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v6(fe,pre,mb).py",105,"rf_grid_estimator.fit(X_train,y_train)"
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v6(fe,pre,mb).py",116,titanic_test[['Age']] = age_imputer.transform(titanic_test[['Age']])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v6(fe,pre,mb).py",119,titanic_test[['Fare']] = fare_imputer.transform(titanic_test[['Fare']])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v6(fe,pre,mb).py",137,titanic_test1['Survived'] = rf_grid_estimator.predict(X_test)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v8(fe,knn).py",34,titanic_all[['Age']] = age_imputer.fit_transform(titanic_all[['Age']])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v8(fe,knn).py",79,titanic_all[['Fare']] = fare_imputer.fit_transform(titanic_all[['Fare']])
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v8(fe,knn).py",89,scaled_features = mapper.fit_transform(titanic_all1)
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v8(fe,knn).py",103,"knn_grid_estimator.fit(X_train,y_train)"
"/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/14.kaggle-IV(classification)/titanic-v8(fe,knn).py",108,titanic_test['Survived'] =knn_grid_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca1.py,5,pca.fit(X1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca1.py,10,X2 = pca.transform(X1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca1.py,15,pca.fit(X3)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca1.py,19,X4 = pca.transform(X3)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca2.py,35,titanic_all[['Age']] = age_imputer.fit_transform(titanic_all[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca2.py,80,titanic_all[['Fare']] = fare_imputer.fit_transform(titanic_all[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca2.py,89,scaled_features = mapper.fit_transform(titanic_all1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca2.py,94,pca.fit(titanic_all2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca2.py,98,titanic_all3 = pd.DataFrame(pca.transform(titanic_all2))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca2.py,111,"knn_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca3.py,35,titanic_all[['Age']] = age_imputer.fit_transform(titanic_all[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca3.py,80,titanic_all[['Fare']] = fare_imputer.fit_transform(titanic_all[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca3.py,89,scaled_features = mapper.fit_transform(titanic_all1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca3.py,94,pca.fit(titanic_all2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca3.py,98,titanic_all3 = pd.DataFrame(pca.transform(titanic_all2))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/15.pca/pca3.py,111,"knn_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/12.kaggle-III(classification)/titanic-v4(rf).py,24,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/12.kaggle-III(classification)/titanic-v4(rf).py,25,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/12.kaggle-III(classification)/titanic-v4(rf).py,26,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/12.kaggle-III(classification)/titanic-v4(rf).py,33,"rf_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/12.kaggle-III(classification)/titanic-v4(rf).py,42,titanic_test1.Sex = le.fit_transform(titanic_test1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/12.kaggle-III(classification)/titanic-v4(rf).py,43,titanic_test1.Embarked = le.fit_transform(titanic_test1.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/12.kaggle-III(classification)/titanic-v4(rf).py,44,titanic_test1.Pclass = le.fit_transform(titanic_test1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/12.kaggle-III(classification)/titanic-v4(rf).py,47,titanic_test1['Survived'] = rf_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/4.data preprocessing/categorical-variables.py,22,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/4.data preprocessing/categorical-variables.py,23,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/4.data preprocessing/categorical-variables.py,24,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/23.spark-ml/ml-pipeline.py,60,pipelineModel = pipeline.fit(train)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/23.spark-ml/ml-pipeline.py,62,pipelineModel.transform(test)\
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-build-export.py,34,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-build-export.py,35,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-build-export.py,36,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-build-export.py,39,#titanic_train1.Sex = ohe.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-build-export.py,40,#titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-build-export.py,41,#titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-build-export.py,54,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-import-predict.py,17,titanic_test1.Sex = le.fit_transform(titanic_test1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-import-predict.py,18,titanic_test1.Embarked = le.fit_transform(titanic_test1.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-import-predict.py,19,titanic_test1.Pclass = le.fit_transform(titanic_test1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/8.model deployment/model-import-predict.py,22,titanic_test1['Survived'] = dt.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/titanic-voting-classifier.py,25,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/titanic-voting-classifier.py,26,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/titanic-voting-classifier.py,27,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/titanic-voting-classifier.py,40,"grid1.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/titanic-voting-classifier.py,45,"grid2.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/stacking.py,30,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/stacking.py,31,y_pred = clf.predict(X_holdout)[:]
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/stacking.py,41,"grid.fit(S_train, y)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/stacking.py,56,"S_test_i[:, j] = clf.predict(X)[:]"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/stacking.py,60,y_pred = clf.predict(S_test)[:]
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/titanic-stackedmodels.py,25,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/titanic-stackedmodels.py,26,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/titanic-stackedmodels.py,27,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/19.voting and stacking ensembles/titanic-stackedmodels.py,57,"stacked_model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/21.clustering/clustering2.py,8,"kmeans_model.fit(votes.iloc[:, 3:])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/21.clustering/clustering2.py,18,"cluster_labels = cluster_model.fit_predict(votes.iloc[:, 3:])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/21.clustering/clustering3.py,8,"cluster_model.fit(votes.iloc[:, 3:])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/21.clustering/clustering3.py,19,"cluster_labels = cluster_model.fit_predict(votes.iloc[:, 3:])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/21.clustering/clustering1.py,9,"kmeans_model.fit(votes.iloc[:, 3:])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/21.clustering/clustering1.py,25,"plot_columns = pca_2.fit_transform(votes.iloc[:,3:18])"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/5.model building with ML/model building-ml.py,23,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/9.parameter tuning/parameter-tuning.py,29,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/9.parameter tuning/parameter-tuning.py,30,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/9.parameter tuning/parameter-tuning.py,31,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/9.parameter tuning/parameter-tuning.py,41,"dt_grid.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/9.parameter tuning/parameter-tuning.py,61,titanic_test1.Sex = le.fit_transform(titanic_test1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/9.parameter tuning/parameter-tuning.py,62,titanic_test1.Embarked = le.fit_transform(titanic_test1.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/9.parameter tuning/parameter-tuning.py,63,titanic_test1.Pclass = le.fit_transform(titanic_test1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/9.parameter tuning/parameter-tuning.py,66,titanic_test1['Survived'] = dt.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/13.feature engineering/feature-engg1.py,27,titanic_train[['Age']] = imputer.fit_transform(titanic_train[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/13.feature engineering/feature-engg1.py,97,"rf_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/naive-bayes.py,24,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/naive-bayes.py,25,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/naive-bayes.py,26,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/naive-bayes.py,35,"nb_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/naive-bayes.py,44,titanic_test1.Sex = le.fit_transform(titanic_test1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/naive-bayes.py,45,titanic_test1.Embarked = le.fit_transform(titanic_test1.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/naive-bayes.py,46,titanic_test1.Pclass = le.fit_transform(titanic_test1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/naive-bayes.py,49,titanic_test1['Survived'] = nb_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest1.py,24,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest1.py,25,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest1.py,26,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest1.py,33,"rf_estimator1.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest1.py,39,"rf_estimator2.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest1.py,46,"grid_model.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/knn2.py,34,titanic_all[['Age']] = age_imputer.fit_transform(titanic_all[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/knn2.py,79,titanic_all[['Fare']] = fare_imputer.fit_transform(titanic_all[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/knn2.py,89,scaled_features = mapper.fit_transform(titanic_all1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/knn2.py,103,"knn_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/adaboost1.py,28,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/adaboost1.py,29,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/adaboost1.py,30,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/adaboost1.py,39,"adaboost_estimator1.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/adaboost1.py,45,"adaboost_estimator2.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/voting-classifier1.py,26,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/voting-classifier1.py,27,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/voting-classifier1.py,28,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/voting-classifier1.py,41,"v_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/logistic-regression.py,35,titanic_all[['Age']] = age_imputer.fit_transform(titanic_all[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/logistic-regression.py,80,titanic_all[['Fare']] = fare_imputer.fit_transform(titanic_all[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/logistic-regression.py,89,scaled_features = mapper.fit_transform(titanic_all1)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/logistic-regression.py,95,# pca.fit(titanic_all2)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/logistic-regression.py,99,# titanic_all3 = pd.DataFrame(pca.transform(titanic_all2))
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/logistic-regression.py,112,"lr_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/logistic-regression.py,116,"lr_estimator1.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/knn1.py,33,titanic_all[['Age']] = age_imputer.fit_transform(titanic_all[['Age']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/knn1.py,78,titanic_all[['Fare']] = fare_imputer.fit_transform(titanic_all[['Fare']])
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/knn1.py,96,"knn_grid_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/knn1.py,101,titanic_test['Survived'] = knn_grid_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/adaboost2.py,28,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/adaboost2.py,29,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/adaboost2.py,30,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/adaboost2.py,38,"adaboost_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/decision-tree.py,25,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/decision-tree.py,26,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/decision-tree.py,27,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/decision-tree.py,33,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/decision-tree.py,42,titanic_test1.Sex = le.fit_transform(titanic_test1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/decision-tree.py,43,titanic_test1.Embarked = le.fit_transform(titanic_test1.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/decision-tree.py,44,titanic_test1.Pclass = le.fit_transform(titanic_test1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest2.py,26,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest2.py,27,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest2.py,28,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/11.classification algorithms/random-forest2.py,35,"rf_estimator.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/6.model evaluation/model evalution-cv.py,29,"dt.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/20.feature importances/feature_importance1.py,24,titanic_train1.Sex = le.fit_transform(titanic_train1.Sex)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/20.feature importances/feature_importance1.py,25,titanic_train1.Embarked = le.fit_transform(titanic_train.Embarked)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/20.feature importances/feature_importance1.py,26,titanic_train1.Pclass = le.fit_transform(titanic_train1.Pclass)
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/20.feature importances/feature_importance1.py,34,"grid_model.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/algorithmica-repository_datascience/2017-feb/20.feature importances/feature_importance2.py,14,"rf.fit(X, Y);"
/Users/cba/Desktop/github_datascience_code/download_code/aws_aws-step-functions-data-science-sdk-python/tests/integ/test_sagemaker_steps.py,54,"pca_estimator_fixture.fit(records=record_set_fixture, mini_batch_size=200, wait=True, job_name=job_name)"
/Users/cba/Desktop/github_datascience_code/download_code/aws_aws-step-functions-data-science-sdk-python/tests/data/sklearn_processing/preprocessor.py,53,train_features = preprocess.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/aws_aws-step-functions-data-science-sdk-python/tests/data/sklearn_processing/preprocessor.py,54,test_features = preprocess.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/aws_aws-step-functions-data-science-sdk-python/tests/data/one_p_mnist/sklearn_mnist_preprocessor.py,55,"preprocessor.fit(X=train_file['x'], y=train_file['y'])"
/Users/cba/Desktop/github_datascience_code/download_code/aws_aws-step-functions-data-science-sdk-python/tests/data/one_p_mnist/sklearn_mnist_preprocessor.py,69,"transformed = np.concatenate((data[:, 0].reshape(-1, 1), model.transform(data[:, 1:])), axis=1)"
/Users/cba/Desktop/github_datascience_code/download_code/aws_aws-step-functions-data-science-sdk-python/tests/data/one_p_mnist/sklearn_mnist_estimator.py,50,"clf.fit(train_images, train_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/aws_aws-step-functions-data-science-sdk-python/tests/data/one_p_mnist/sklearn_mnist_estimator.py,66,return model.predict(train_set)
/Users/cba/Desktop/github_datascience_code/download_code/aws_aws-step-functions-data-science-sdk-python/tests/data/sklearn_mnist/mnist.py,75,"clf.fit(train_images, train_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/gangadhar-p_NucleiDetectron/lib/datasets/nuclei/nuclei_utils.py,44,"X = min_max_scaler.fit_transform(X.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/gangadhar-p_NucleiDetectron/lib/datasets/nuclei/nuclei_utils.py,52,"X = min_max_scaler.fit_transform(X.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/gangadhar-p_NucleiDetectron/lib/datasets/nuclei/cluster_images.py,107,cluster_maker.fit_predict(in_df[color_features_names])
/Users/cba/Desktop/github_datascience_code/download_code/gangadhar-p_NucleiDetectron/lib/datasets/nuclei/cluster_images.py,116,cluster_maker.fit_predict(in_df[color_features_names])
/Users/cba/Desktop/github_datascience_code/download_code/gangadhar-p_NucleiDetectron/lib/datasets/nuclei/cluster_images.py,125,cluster_maker.fit(in_df[color_features_names])
/Users/cba/Desktop/github_datascience_code/download_code/gangadhar-p_NucleiDetectron/lib/roi_data/loader.py,161,"X = min_max_scaler.fit_transform(X.reshape(-1,1))"
/Users/cba/Desktop/github_datascience_code/download_code/anlthms_dsb-2017/run.py,94,"model.fit(train, optimizer=opt, num_epochs=args.epochs, cost=cost, callbacks=callbacks)"
/Users/cba/Desktop/github_datascience_code/download_code/anlthms_dsb-2017/data.py,194,self.data[cur_idx + chunk_idx] = self.transform(self.transform_buffer).ravel()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/pipeline/_validate.py,161,dummy = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/pipeline/_train.py,261,"model.fit(pipeline_name + ""_TRAIN_VIEW"", predictors)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/pipeline/_train.py,264,"model.fit(pipeline_name + ""_TRAIN_VIEW"", predictors, target)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_encoding.py,1050,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_plotting.py,1248,"model.fit(self, columns)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_plotting.py,1256,"model.fit(self, [column])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_plotting.py,2429,"model.fit(self, columns)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_plotting.py,2430,vdf = model.transform(self)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_plotting.py,3899,"model.fit(self._parent, [self._alias])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_plotting.py,3909,"model.fit(vdf, [self._alias])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_corr.py,2052,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_corr.py,2058,"model.predict(vdf, name=""prediction_0"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_corr.py,2060,model2.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_corr.py,2066,"model2.predict(vdf, name=""prediction_p"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_machine_learning.py,1753,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_machine_learning.py,1775,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_machine_learning.py,1793,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_machine_learning.py,1817,"result.score(""quality"", ""prediction"", metric = ""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_machine_learning.py,1819,"result.score(""quality"", ""prediction"", metric = ""mse"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/core/vdataframe/_machine_learning.py,1821,"result.score(""quality"", ""prediction"", metric = ""max"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/regression.py,131,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/regression.py,218,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/regression.py,304,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/regression.py,392,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/regression.py,480,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/regression.py,571,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/regression.py,661,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/regression.py,749,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/regression.py,931,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,366,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,584,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,727,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,872,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,1020,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,1165,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,1309,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,1450,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,1594,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,1738,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,1882,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,2026,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,2172,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,2320,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,2464,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,2608,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,2753,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,2897,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,3042,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,3186,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,3333,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,3826,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,3987,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,4210,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,4378,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,4535,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,4948,data.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/metrics/classification.py,5097,"estimator.score(pos_label=pos_label, metric=m, nbins=nbins)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/tree.py,186,model_btc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/tree.py,1005,model_btr.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/tree.py,1236,model_bta.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/tree.py,1466,model_btc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/tree.py,1721,model_nbt.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/tree.py,1942,model_nbt.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/linear_model.py,97,model_lm.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/linear_model.py,205,model_lm.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/linear_model.py,489,model_lmc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/linear_model.py,595,model_lm.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/naive_bayes.py,254,model_nb.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/naive_bayes.py,455,model_nb.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,140,model_km.predict(data)[0]
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,151,distances = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,218,distances = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,271,model_km.transform(data)[0]
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,600,model_km.predict(data)[0]
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,630,model_km.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,759,model_nc.predict(data)[0]
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,777,model_nc.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,949,model_bkm.predict(data)[0]
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,967,model_bkm.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,1189,model_bkm.predict(data)[0]
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,1566,model_kp.predict(data)[0]
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,1596,model_kp.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/cluster.py,1752,model_kp.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/preprocessing.py,123,model_sts.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/preprocessing.py,278,model_sts.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/preprocessing.py,391,model_mms.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/preprocessing.py,529,model_ohe.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/preprocessing.py,643,model_ohe.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/ensemble.py,57,return np.column_stack([tree.predict(X) for tree in self.trees_])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/ensemble.py,252,model_rfr.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/ensemble.py,398,model_rfr.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/ensemble.py,580,model_rfc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/ensemble.py,990,model_xgbr.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/ensemble.py,1148,model_xgbr.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/ensemble.py,1367,model_xgbc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/ensemble.py,1788,model_isf.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/ensemble.py,1938,model_isf.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/decomposition.py,104,model_pca.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/decomposition.py,248,model_pca.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/decomposition.py,551,model_svd.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/decomposition.py,660,model_svd.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/memmodel/base.py,270,model_nb.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/kmeans.py,285,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/kmeans.py,582,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/variables_selection.py,820,estimator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/variables_selection.py,826,current_score = estimator.score(metric=criterion)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/variables_selection.py,841,estimator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/variables_selection.py,847,test_score = estimator.score(metric=criterion)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/variables_selection.py,879,estimator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/variables_selection.py,885,test_score = estimator.score(metric=criterion)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/model_validation.py,568,estimator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/hp_tuning/cv.py,1756,hyper_param_estimator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/hp_tuning/cv.py,1768,"vdf = hyper_param_estimator.predict(vdf, name=""score"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,371,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,379,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,797,"model.fit(vdf, X = ""day"", y = ""y1"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,837,"model.predict(vdf, X=X, name=prediction_name)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,857,model_tmp.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,865,"model_tmp.r2_ = model.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,951,"model.fit(vdf, X = ""day"", y = ""y1"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,958,"model.predict(vdf, X = ""day"", name = ""y_pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,963,"result = model.predict(vdf, X = ""day"", name = ""y_pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,1438,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,1444,"R2 = model.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,1447,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,1453,"R2 = model.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,1839,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/tsa.py,1889,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,123,"model.fit(input_relation = vdf, X = ""x"", y = ""y"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,130,"model.predict(vdf, X = ""x"", name = ""y_pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,239,"model.fit(input_relation = vdf, X = ""x"", y = ""y"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,246,"model.predict(vdf, X = ""x"", name = ""y_pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,303,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,309,"R2 = model.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,312,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,318,"R2 = model.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,549,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,555,"mse += [model.score(metric=""mse"")]"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,672,"model.fit(input_relation = vdf, X = ""x"", y = ""y"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,679,"model.predict(vdf, X = ""x"", name = ""y_pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,788,"model.fit(input_relation = vdf, X = ""x"", y = ""y"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,795,"model.predict(vdf, X = ""x"", name = ""y_pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,861,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,867,"R2 = model.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,870,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,876,"R2 = model.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,1060,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,1066,"R2 = model.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,1069,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/model_selection/statistical_tests/ols.py,1075,"R2 = model.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,256,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,340,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,350,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,368,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,739,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,823,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,833,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,851,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,1331,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,1436,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,1446,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,1464,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,2057,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,2162,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,2172,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tree.py,2190,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,250,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,325,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,335,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,353,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,553,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,970,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,1053,"model.score(metric = ""f1"", average = ""macro"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,1072,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,1088,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,1489,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,2040,"model.fit(data, X = [""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,2236,"model.fit(data, X = [""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,2428,"model.fit(data, X = [""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,2500,"model.fit(self.map, self.X, ""KDE"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,2641,"model.fit(data, X = [""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,2870,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,2908,result = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,2915,model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,3071,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,3185,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,3406,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,3413,result = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,3420,model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/neighbors.py,3509,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,198,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,392,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,595,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,889,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,963,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,973,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,991,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,1403,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,1477,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,1487,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,1505,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,1925,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,2025,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,2035,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,2053,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,2483,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,2557,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,2567,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,2585,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,2990,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,3089,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,3099,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,3117,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,3641,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,3744,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,3754,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/linear_model.py,3772,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/naive_bayes.py,319,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/naive_bayes.py,398,"model.score(metric = ""f1"", average = ""macro"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/naive_bayes.py,417,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/naive_bayes.py,433,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,157,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,165,"result = model.predict(data, [""density"", ""sulphates""], name = ""Cluster IDs"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,172,"model.predict(data, [""density"", ""sulphates""], name = ""Cluster IDs"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,282,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,288,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,333,"self.predict(vdf, name=name)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,546,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,606,"result = model.predict(data, [""density"", ""sulphates""], name = ""Cluster IDs"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,613,"model.predict(data, [""density"", ""sulphates""], name = ""Cluster IDs"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,1003,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,1009,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,1253,"model.fit(data, X = [""color"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,1311,"result = model.predict(data, [""density"", ""sulphates""], name = ""Cluster IDs"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,1318,"model.predict(data, [""density"", ""sulphates""], name = ""Cluster IDs"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,1862,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,1936,"result = model.predict(data, [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,1943,"model.predict(data, [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,2328,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,2334,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,2447,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,2453,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,2543,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,2745,"model.fit(data, X = [""col""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,2777,result = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,2784,model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,2991,"model.fit(data, X = [""col""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,3225,"model.fit(data, X = [""col""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,3233,result = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,3240,model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,3326,"model.fit(data, X = [""col1"", ""col2""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,3597,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,3682,"model.score(metric = ""f1"", average = ""macro"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,3701,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/cluster.py,3717,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,378,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,505,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,614,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,625,result = model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,632,model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,735,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,746,result = model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,753,model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,1251,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,1285,result = model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,1292,model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,1730,"model.fit(data, [""sex"", ""parch""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,1758,result = model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/preprocessing.py,1765,model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/pipeline.py,208,"step[1].fit(current_vdf, X_new, y, test_relation)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/pipeline.py,210,"step[1].fit(current_vdf, X_new)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/pipeline.py,212,"current_vdf = step[1].transform(current_vdf, X_new)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/pipeline.py,260,return self.steps[-1][1].score(metric=metric)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/pipeline.py,305,current_vdf = step[1].predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/pipeline.py,309,"current_vdf = step[1].predict(current_vdf, X_new, name=name)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/pipeline.py,311,"current_vdf = step[1].transform(current_vdf, X_new)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/pipeline.py,350,"current_vdf = step[1].transform(current_vdf, X_new)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,414,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,731,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,816,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,826,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,844,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,1416,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,1501,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,1511,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,1529,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,2194,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,2299,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,2309,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,2327,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,3138,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,3243,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,3253,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,3271,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,3946,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,3976,"result = model.predict(data, [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,3983,"model.predict(data, [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,4355,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,4534,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,4671,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,4678,"result = model.predict(data, [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/ensemble.py,4685,"model.predict(data, [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,138,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,277,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,286,result = model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,293,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,455,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,463,result = model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,470,model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,585,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,612,vdf = self.transform(vDataFrame(self.input_relation))
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,716,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,841,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,1082,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,1099,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,1118,model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,1540,model.fit(tcdt)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,1558,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,1578,model.transform(tcdt)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,1832,model.fit(tcdt)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,1966,model.fit(tcdt)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,2117,model.fit(tcdt)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,2372,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,2389,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/decomposition.py,2408,model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/svm.py,270,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/svm.py,369,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/svm.py,379,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/svm.py,397,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/svm.py,846,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/svm.py,949,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/svm.py,959,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/svm.py,977,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,336,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,466,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,687,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,836,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,1275,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,1412,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,1876,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,2029,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,2289,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,2664,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,2813,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,2954,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,3090,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,3265,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,3403,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,3537,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,3840,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,3944,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,4225,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,4243,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,4368,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,4385,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,4403,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,4535,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,4692,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,4807,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,4921,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,5035,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,5209,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,5579,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,5688,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6013,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6029,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6036,"model.score(pos_label= ""Iris-setosa"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6156,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6173,"result = model.predict(test, name = ""prediction"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6180,"model.predict(test, name = ""prediction"""
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6303,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6493,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6609,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6725,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6841,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,6957,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,7202,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,7275,"R2 = self.score(metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,7490,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,7508,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,7653,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,7672,result = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,7690,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/base.py,7809,"model.fit(data, X = [""density"", ""sulphates""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/model_management.py,370,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/feature_extraction/text.py,215,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/feature_extraction/text.py,225,model.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/feature_extraction/text.py,237,"model.fit(input_relation = data, index = ""id"", x = ""values"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/feature_extraction/text.py,238,"result = model.transform(vdf = data, index = ""id"", x = ""values"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/feature_extraction/text.py,273,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/feature_extraction/text.py,278,model.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/feature_extraction/text.py,288,"model.fit(input_relation = data, index = ""id"", x = ""values"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/feature_extraction/text.py,289,"result = model.transform(vdf = data, index = ""id"", x = ""values"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/automl/clustering.py,181,"model_preprocess.fit(input_relation, X=X)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/automl/clustering.py,228,"self.model_.fit(input_relation, X=X)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/automl/dataprep.py,395,model_pca.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/automl/dataprep.py,400,vdf = model_pca.transform()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/automl/supervised.py,536,model_preprocess.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/automl/supervised.py,665,best_model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/ensemble.py,151,"model.fit(amazon, ts = ""date"", y = ""number"", by = ""state"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/ensemble.py,367,report += model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/ensemble.py,543,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,208,"model.fit(data, ""date"", ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,423,"model.fit(data, ""date"", ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,571,"model.fit(data, ""date"", ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,825,"model.fit(data, ""date"", ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,831,model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,837,result = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,1003,prediction = self.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,1258,"model.fit(data, ""date"", ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,1520,"model.fit(data, ""date"", ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,1527,"model.score(start = 40, npredictions = 30, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,1725,"model.fit(data, ""date"", ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/base.py,1774,prediction=self.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,292,"model.fit(data, ""date"", ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,441,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,449,"model.score(start = 40, npredictions = 30)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,466,model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,472,result = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,484,``model.predict(npredictions = 30)``.
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,508,"model.predict(output_estimated_ts = True, output_standard_errors = True)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,514,"result = model.predict(output_estimated_ts = True, output_standard_errors = True)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,534,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,548,"result = model.predict(data, ""date"", ""passengers"", start = 40, npredictions = 20, output_estimated_ts = True, output_standard_errors = True)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,636,"model.score(start = 40, npredictions = 30, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,645,"model.predict(start = 100, npredictions = 40, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,651,"result = model.predict(start = 100, npredictions = 40, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,664,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,679,"result = model.predict(data, ""date"", ""passengers"", start = 40, npredictions = 20, output_estimated_ts = True, output_standard_errors = True, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1024,"model.fit(data, ""date"", ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1164,model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1172,"model.score(start = 40, npredictions = 30)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1189,model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1195,result = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1207,``model.predict(npredictions = 30)``.
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1231,"model.predict(output_estimated_ts = True, output_standard_errors = True)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1237,"result = model.predict(output_estimated_ts = True, output_standard_errors = True)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1257,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1271,"result = model.predict(data, ""date"", ""passengers"", start = 40, npredictions = 20, output_estimated_ts = True, output_standard_errors = True)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1362,"model.score(start = 40, npredictions = 30, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1372,"model.predict(start = 100, npredictions = 40, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1378,"result = model.predict(start = 100, npredictions = 40, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1391,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1406,"result = model.predict(data, ""date"", ""passengers"", start = 40, npredictions = 20, output_estimated_ts = True, output_standard_errors = True, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1753,"model.fit(data, ""month"", ""GB"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1889,"model.score(start = 3, npredictions = 30)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1906,model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1912,result = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1924,``model.predict(npredictions = 30)``.
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1946,model.predict(output_estimated_ts = True)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1952,result = model.predict(output_estimated_ts = True)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1972,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,1985,"result = model.predict(data, ""month"", ""GB"", start = 7, npredictions = 10, output_estimated_ts = True)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2075,"model.score(start = 4, npredictions = 6, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2085,"model.predict(start = 100, npredictions = 10, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2091,"result = model.predict(start = 100, npredictions = 40, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2104,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2119,"result = model.predict(data, ""month"", ""GB"", start = 4, npredictions = 20, output_estimated_ts = True, output_standard_errors = True, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2458,"model.fit(data, ""day"", ""temp"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2574,"model.score(start = 25, npredictions = 10)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2591,model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2597,result = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2609,``model.predict(npredictions = 30)``.
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2631,model.predict(output_estimated_ts = True)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2637,result = model.predict(output_estimated_ts = True)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2657,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2670,"result = model.predict(data, ""day"", ""temp"", start = 25, npredictions = 10, output_estimated_ts = True)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2776,"model.score(start = 25, npredictions = 30, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2786,"model.predict(start = 25, npredictions = 15, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2792,"result = model.predict(start = 25, npredictions = 15, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2805,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/machine_learning/vertica/tsa/arima.py,2820,"result = model.predict(data, ""day"", ""temp"", start = 25, npredictions = 20, output_estimated_ts = True, output_standard_errors = True, method = ""forecast"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/mlops/model_tracking/base.py,328,"model.predict(vdf=test_vdf, X=self.X, name=""y_score"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/mlops/model_versioning/base.py,136,return model_object.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/mlops/model_versioning/base.py,140,"return model_object.predict(vdf=vdf, X=X, name=name, inplace=inplace)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/core/vdataframe/test_machine_learning.py,352,vpy_res = get_vpy_model(model_class).pred_vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/core/vdataframe/test_encoding.py,358,py_res = np.unique(la_encod.fit_transform(titanic_pdf[column]))
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/core/vdataframe/test_math.py,151,].transform(lambda x: x.fillna(x.mean()))
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/core/vdataframe/test_math.py,788,py_res = py_grp_data.transform(lambda py_data: eval(py_func))[0]
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/metrics/test_regression_metrics.py,33,vpy_lr_model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/metrics/test_regression_metrics.py,39,"vpy_lr_pred_vdf = vpy_lr_model.predict(winequality_vpy, name=""quality_pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/metrics/test_regression_metrics.py,227,"cw_lm = ols(""quality ~ quality_pred"", data=vpy_lr_pred_pdf).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/metrics/test_regression_metrics.py,233,"skl_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/metrics/test_regression_metrics.py,235,pred = skl_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/metrics/test_classification_metrics.py,478,y_true_num_ = LabelBinarizer().fit_transform(y_true_num)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/metrics/test_classification_metrics.py,488,y_true_num_ = LabelBinarizer().fit_transform(y_true_num)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_tree.py,106,prediction = memmodel_btr.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_tree.py,172,prediction = memmodel_btc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_tree.py,279,prediction = memmodel_nbt.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_preprocessing.py,69,prediction = memmodel_sts.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_preprocessing.py,118,prediction = memmodel_mms.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_preprocessing.py,167,prediction = memmodel_ohe.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_decomposition.py,64,transformation = memmodel_pca.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_decomposition.py,161,transformation = memmodel_svd.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_linear_model.py,58,prediction = memmodel_lm.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_linear_model.py,152,prediction = memmodel_lmc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_cluster.py,94,prediction = memmodel_km.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_cluster.py,130,prediction = memmodel_km.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_cluster.py,221,prediction = memmodel_kp.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_cluster.py,257,prediction = memmodel_kp.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_cluster.py,351,prediction = memmodel_bkm.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_cluster.py,389,prediction = memmodel_bkm.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_cluster.py,499,prediction = memmodel_nc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_cluster.py,535,prediction = memmodel_nc.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_naive_bayes.py,85,prediction = memmodel_nb.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_ensemble.py,173,prediction = memmodel_rfr.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_ensemble.py,230,prediction = memmodel_rfc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_ensemble.py,326,prediction = memmodel_xgbr.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/memmodel/test_ensemble.py,386,prediction = memmodel_xgbc.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1180,"titanic_pdf[""sex""] = le.fit_transform(titanic_pdf[""sex""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1315,self.model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1326,self.model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1337,self.model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1348,self.model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1357,return self.model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1364,return self.model.fit(dataset[self.datasetup_instance.X])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1377,self.model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1417,pred_vdf = self.model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1431,pred_vdf = self.model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1460,pred_vdf = self.model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1481,pred_vdf = self.model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1497,pred_vdf = self.model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1512,pred = self.model.predict(dataset[self.datasetup_instance.X])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1523,pred = self.model.predict(dataset[self.datasetup_instance.X])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1537,pred = self.model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1550,pred = self.model.predict(dataset[self.datasetup_instance.X])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/model_utils.py,1563,pred = self.model.predict(self.datasetup_instance.py_dataset[4][:500])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_model_management.py,226,pred_vdf = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_model_management.py,241,pred_vdf = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_model_management.py,260,pred_vdf = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_model_management.py,357,pred_raw_vdf = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_tfidf.py,80,vpy_model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_tfidf.py,94,py_model.fit(self.documents)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_tfidf.py,139,vdf_merge = vpy_model.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_tfidf.py,145,py_term_vectors = py_model.transform(self.documents)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_tfidf.py,210,X_py = cnt_vec.fit_transform(self.documents)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,492,vpy_score = vpy_model_obj.model.score(metric=vpy_metric_name[0])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,505,vpy_score = vpy_model_obj.model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,518,vpy_score = vpy_model_obj.model.score(metric=vpy_metric_name[0])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,529,vpy_score = vpy_model_obj.model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,545,vpy_score = vpy_model_obj.model.score(metric=vpy_metric_name[0])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,559,vpy_score = vpy_model_obj.model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,564,vpy_score = vpy_model_obj.model.score(metric=vpy_metric_name[0])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,575,vpy_score = vpy_model_obj.model.score(metric=vpy_metric_name[0])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,586,vpy_score = vpy_model_obj.model.score(metric=vpy_metric_name[0])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,596,vpy_score = vpy_model_obj.model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,609,vpy_score = vpy_model_obj.model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,623,vpy_score = vpy_model_obj.model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,636,vpy_score = vpy_model_obj.model.score(metric=vpy_metric_name[0])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,647,vpy_score = vpy_model_obj.model.score(metric=vpy_metric_name[0])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,657,vpy_score = vpy_model_obj.model.score(metric=vpy_metric_name[0])
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_base_model_methods.py,1644,mm_res = mmodel.predict(pdf).tolist()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_linear_model.py,109,vpy_res = vpy_model_obj.model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/machine_learning/vertica/test_cluster.py,46,vpy_res = vpy_model_obj.model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_versioning.py,38,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_versioning.py,52,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_versioning.py,66,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_versioning.py,80,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_versioning.py,94,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_versioning.py,138,pred_vdf1 = rm.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_versioning.py,150,pred_vdf2 = rm.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_versioning.py,161,pred_vdf1 = rm.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_versioning.py,182,pred_vdf3 = rm.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,152,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,166,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,180,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,218,"model.fit(winequality_vpy, predictors, response)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,238,"model.fit(winequality_vpy, predictors, response)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,284,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,298,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,312,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,352,"model.fit(winequality_vpy, predictors, response)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,374,"model.fit(winequality_vpy, predictors, response)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,416,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,430,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,446,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,485,"model.fit(iris_vd, predictors, response)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,507,"model.fit(iris_vd, predictors, response)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,551,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,563,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,575,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,615,"model.fit(iris_vd, predictors)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/mlops/test_model_tracking.py,635,"model.fit(iris_vd, predictors)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/conftest.py,36,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/conftest.py,57,"model.fit(dummy_dist_vd, [col_name_1, col_name_2], by_col)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,1673,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,1713,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,1750,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,1780,"model.fit(dummy_scatter_vd, [self.COL_NAME_1, self.COL_NAME_2])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,1815,"model.fit(dummy_scatter_vd, [self.COL_NAME_1, self.COL_NAME_2, self.COL_NAME_3])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,1843,"model.fit(titanic_vd, [self.COL_NAME_1], self.COL_NAME_2)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,1895,"model.fit(titanic_vd, [self.COL_NAME_1, self.COL_NAME_3], self.COL_NAME_2)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,2066,"model.fit(dummy_scatter_vd[self.COL_NAME_1, self.COL_NAME_2, self.COL_NAME_3])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,2133,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,2192,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,2252,"model.fit(dummy_dist_vd, x_col, y_col)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,2292,"model.fit(dummy_scatter_vd, [self.COL_NAME_1], self.COL_NAME_2)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,2438,"model.fit(dummy_pred_data_vd, [self.COL_NAME_1], self.BY_COL)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,2476,"model.fit(dummy_pred_data_vd, [self.COL_NAME_1, self.COL_NAME_2], self.BY_COL)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/base_test_files.py,2505,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/matplotlib/machine_learning/test_matplotlib_kmeans.py,44,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests_new/plotting/matplotlib/machine_learning/test_matplotlib_kmeans.py,116,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,50,"model_class.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,84,"model_test.fit(""public.winequality"", [""alcohol"", ""quality""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,137,"model2.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,151,"model3.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,181,"model2.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,199,"model3.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,234,"prediction3 = model.to_memmodel().transform([[3.0, 11.0, 93.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,241,"model2.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,259,"prediction3 = model2.to_memmodel().transform([[3.0, 11.0, 93.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,267,"model3.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,285,"prediction3 = model3.to_memmodel().transform([[3.0, 11.0, 93.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,293,winequality_trans = model.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,304,"model2.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,305,winequality_trans = model2.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,315,"model3.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,316,winequality_trans = model3.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_normalizer.py,351,"model_test.fit(winequality_vd, [""alcohol"", ""quality""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kde.py,60,"model_class.fit(""public.titanic"", [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kde.py,82,"titanic_copy = model.predict(titanic_vd.copy(), name=""kde"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kde.py,99,"model_test.fit(""public.titanic"", [""age""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kde.py,114,"model_test.fit(titanic_vd, [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kde.py,115,"titanic_copy = model_test.predict(titanic_vd.copy(), name=""kde"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kde.py,125,"model.fit(titanic_vd, [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kde.py,129,"model.fit(titanic_vd, [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kde.py,134,"model.fit(titanic_vd, [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,122,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,142,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,181,"model_test.fit(titanic_vd, [""age"", ""fare"", ""sex""], ""embarked"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,196,"model_test.fit(titanic_vd, [""age"", ""fare"", ""sex""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,208,res = mmodel.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,241,"model.predict(vdf, name=""prediction_vertica_sql"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,251,"score = vdf.score(""prediction_sql"", ""prediction_vertica_sql"", ""accuracy"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,253,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,257,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,261,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,325,"model.predict(dtc_data_copy, name=""pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,328,"model.predict(dtc_data_copy, name=""pred1"", cutoff=0.7)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,331,"model.predict(dtc_data_copy, name=""pred2"", cutoff=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,368,"assert model.score(cutoff=0.9, metric=""accuracy"") == pytest.approx(1.0)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,369,"assert model.score(cutoff=0.1, metric=""accuracy"") == pytest.approx(1.0)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,370,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,373,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,376,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,379,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,382,"assert model.score(cutoff=0.9, metric=""bm"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,385,"assert model.score(cutoff=0.1, metric=""bm"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,388,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,391,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,394,"assert model.score(cutoff=0.9, metric=""f1"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,397,"assert model.score(cutoff=0.1, metric=""f1"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,400,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,403,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,406,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,409,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,412,"assert model.score(cutoff=0.9, metric=""mk"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,415,"assert model.score(cutoff=0.1, metric=""mk"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,418,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,421,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,424,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,427,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,430,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,433,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,436,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,439,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_classifier.py,451,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,57,"model_class.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,80,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,100,titanic_copy = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,163,"assert model.score(metric=""max"") == pytest.approx(1.0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,165,"assert model.score(metric=""mae"") == pytest.approx(0.319076305220884, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,167,"assert model.score(metric=""median"") == pytest.approx(0.2, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,169,"assert model.score(metric=""mse"") == pytest.approx(0.161887550200803, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,171,"assert model.score(metric=""rmse"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,175,"assert model.score(metric=""msle"") == pytest.approx(0.0148862189812457, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,177,"assert model.score() == pytest.approx(0.321109086681745, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,179,"assert model.score(metric=""r2a"") == pytest.approx(0.3197417333820103, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,181,"assert model.score(metric=""var"") == pytest.approx(0.32196148887151, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,183,"assert model.score(metric=""aic"") == pytest.approx(-1807.52756734861, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,185,"assert model.score(metric=""bic"") == pytest.approx(-1792.8586642855369, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,197,"model_test.fit(titanic_vd, [""age""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_regressor.py,198,assert model_test.score() == pytest.approx(-0.122616967579114)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,37,"assert model.predict([[0.4, 0.5]])[0] == pytest.approx(1.3)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,52,"assert model.predict([[0.4, 0.5]])[0] == pytest.approx(1)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,83,"transformation = model.transform([[0.4, 0.5]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,116,"transformation = model.transform([[0.4, 0.5]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,148,"transformation = model.transform([[0.4, 0.5]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,168,"transformation = model.transform([[0.4, 0.5]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,196,"transformation = model.transform([[""male"", 1], [""female"", 3]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,219,"transformation = model.transform([[""male"", 1], [""female"", 3]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,265,"assert model.predict([[0.2, 0.3]])[0] == 0"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,266,"assert model.predict([[2, 2]])[0] == 1"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,267,"assert model.predict([[100, 201]])[0] == 2"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,289,"transform_val = model.transform([[0.2, 0.3]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,325,"assert model.predict([[0.2, 0.3]])[0] == ""a"""
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,326,"assert model.predict([[2, 2]])[0] == ""b"""
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,327,"assert model.predict([[100, 201]])[0] == ""c"""
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,349,"transform_val = model.transform([[0.2, 0.3]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,395,"assert model.predict([[0.2, 0.3]])[0] == 4"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,396,"assert model.predict([[2, 2]])[0] == 4"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,397,"assert model.predict([[100, 201]])[0] == 2"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,402,"transform_val = model.transform([[0.2, 0.3]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,440,"prediction = model.predict([[""male"", 100], [""female"", 20], [""female"", 50]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,478,"prediction = model.predict([[""male"", 100], [""female"", 20], [""female"", 50]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,519,"prediction = model.predict([[""male"", 100], [""female"", 20], [""female"", 50]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,580,"prediction = model.predict([[""male"", 100], [""female"", 20], [""female"", 50]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,651,"prediction = model.predict([[""male"", 100], [""female"", 20], [""female"", 50]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,728,"prediction = model.predict([[""male"", 100], [""female"", 20], [""female"", 50]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,812,"prediction = model.predict([[""male"", 100], [""female"", 20], [""female"", 50]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_memmodel.py,900,prediction = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,151,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,174,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,232,"model_test.fit(titanic_vd, [""age"", ""fare"", ""sex""], ""embarked"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,247,"model_test.fit(titanic_vd, [""age"", ""fare"", ""sex""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,259,res = mmodel.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,292,"model.predict(vdf, name=""prediction_vertica_sql"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,302,"score = vdf.score(""prediction_sql"", ""prediction_vertica_sql"", metric=""accuracy"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,304,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,308,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,312,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,396,"model.predict(xgbc_data_copy, name=""pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,399,"model.predict(xgbc_data_copy, name=""pred1"", cutoff=0.7)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,402,"model.predict(xgbc_data_copy, name=""pred2"", cutoff=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,439,"assert model.score(cutoff=0.9, metric=""accuracy"") == pytest.approx(1.0)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,440,"assert model.score(cutoff=0.1, metric=""accuracy"") == pytest.approx(1.0)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,441,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,444,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,447,"assert model.score(cutoff=0.9, metric=""best_cutoff"", pos_label=""Train"") in ("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,451,"assert model.score(cutoff=0.1, metric=""best_cutoff"", pos_label=""Train"") in ("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,455,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,458,"assert model.score(cutoff=0.1, metric=""bm"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,461,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,464,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,467,"assert model.score(cutoff=0.9, metric=""f1"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,470,"assert model.score(cutoff=0.1, metric=""f1"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,473,"assert model.score(cutoff=0.9, metric=""logloss"", pos_label=""Train"") in ("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,477,"assert model.score(cutoff=0.1, metric=""logloss"", pos_label=""Train"") in ("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,481,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,484,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,487,"assert model.score(cutoff=0.9, metric=""mk"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,490,"assert model.score(cutoff=0.1, metric=""mk"", pos_label=""Train"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,493,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,496,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,499,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,502,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,505,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,508,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,511,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,514,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,528,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,576,"model.fit(titanic, X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,589,y_test_python = model_python.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,606,"model.fit(titanic, X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_xgb_classifier.py,619,y_test_python = model_python.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_svd.py,54,"model_class.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_svd.py,99,"model_test.fit(""public.winequality"", [""alcohol"", ""quality""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_svd.py,182,"prediction3 = model.to_memmodel().transform([[3.0, 11.0, 93.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_svd.py,186,winequality_trans = model.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_svd.py,200,winequality_trans = model.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_svd.py,217,result = model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_svd.py,231,"model_test.fit(winequality_vd, [""alcohol"", ""quality""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dbscan.py,62,"model_class.fit(""public.titanic"", [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dbscan.py,75,titanic_copy = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dbscan.py,97,"model_test.fit(titanic_vd, [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dbscan.py,98,"assert model_test.predict()[""dbscan_cluster""].min() == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dbscan.py,106,"model.fit(titanic_vd, [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dbscan.py,110,"model.fit(titanic_vd, [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dbscan.py,117,"model.fit(titanic_vd, [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_lof.py,61,"model_class.fit(""public.titanic"", [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_lof.py,74,titanic_copy = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_lof.py,91,"model_test.fit(""public.titanic"", [""age""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_lof.py,98,"model_test.fit(""public.titanic"", [""age"", ""fare"", ""pclass""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_lof.py,113,"model_test.fit(titanic_vd, [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_lof.py,114,"assert model_test.predict()[""lof_score""].mean() == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_lof.py,122,"model.fit(titanic_vd, [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_lof.py,126,"model.fit(titanic_vd, [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_lof.py,133,"model.fit(titanic_vd, [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,94,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,114,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,212,res = mmodel.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,224,"model.predict(vdf, name=""prediction_vertica_sql"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,225,"score = vdf.score(""prediction_sql"", ""prediction_vertica_sql"", metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,230,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,290,"assert model.score(metric=""max"") == pytest.approx(0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,292,"assert model.score(metric=""mae"") == pytest.approx(0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,294,"assert model.score(metric=""median"") == pytest.approx(0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,296,"assert model.score(metric=""mse"") == pytest.approx(0.0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,298,"assert model.score(metric=""rmse"") == pytest.approx(0.0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,300,"assert model.score(metric=""msle"") == pytest.approx(0.0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,302,"assert model.score() == pytest.approx(1.0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,304,"assert model.score(metric=""r2a"") == pytest.approx(1.0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,306,"assert model.score(metric=""var"") == pytest.approx(1.0, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,308,"assert model.score(metric=""aic"") == pytest.approx(-float(""inf""), abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,310,"assert model.score(metric=""bic"") == pytest.approx(-float(""inf""), abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_dummy_tree_regressor.py,320,"model_test.fit(tr_data_vd, [""gender""], ""transportation"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,60,"model_class.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,75,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,130,"res = mmodel.predict([[11.0, 1993.0], [1.0, 1999.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,143,"titanic = model.predict(titanic, name=""prediction_vertica_sql"", cutoff=0.5)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,154,score = titanic.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,160,score = titanic.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,164,score = titanic.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,175,titanic_copy = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,215,"assert model.score(cutoff=0.9, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,218,"assert model.score(cutoff=0.1, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,221,"assert model.score(metric=""best_cutoff"") == pytest.approx(0.352)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,222,"assert model.score(metric=""bm"") == pytest.approx(0.25186954408065776)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,223,"assert model.score(metric=""csi"") == pytest.approx(0.325)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,224,"assert model.score(metric=""f1"") == pytest.approx(0.49056603773584906)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,225,"assert model.score(metric=""logloss"") == pytest.approx(0.282873255537287)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,226,"assert model.score(metric=""mcc"") == pytest.approx(0.28558718217018486)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,227,"assert model.score(metric=""mk"") == pytest.approx(0.32381858202668545)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,228,"assert model.score(metric=""npv"") == pytest.approx(0.6870838881491345)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,229,"assert model.score(metric=""prc_auc"") == pytest.approx(0.5442487908406839)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,230,"assert model.score(metric=""precision"") == pytest.approx(0.636734693877551)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,231,"assert model.score(metric=""specificity"") == pytest.approx(0.8528925619834711)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,257,"model_test.fit(titanic_vd, [""age""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_nearestcentroid.py,258,"assert model_test.score(cutoff=0.9, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_countvectorizer.py,52,"model_class.fit(""public.titanic"", [""name""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_countvectorizer.py,98,"result = model.transform().sort([""rnk""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_countvectorizer.py,116,"model_class.fit(titanic_vd, [""name""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_countvectorizer.py,117,"assert model_class.transform().shape() == (1841, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_countvectorizer.py,123,"model.fit(titanic_vd, [""name""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_countvectorizer.py,127,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_countvectorizer.py,132,"model.fit(titanic_vd, [""name""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_mca.py,54,model_class.fit(market_vd.cdt())
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_mca.py,80,model_test.fit(market_vd.cdt())
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_mca.py,185,market_trans = model.transform()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_mca.py,192,market_trans = model.transform()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_mca.py,197,result = model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_mca.py,211,model_test.fit(market_vd.cdt())
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,57,model_class.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,76,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,96,"model_test.fit(""public.winequality"", [""alcohol""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,189,"model_test.fit(""public.winequality"", [""alcohol""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,215,"res = mmodel.predict([[3.0, 11.0, 93.0], [11.0, 1.0, 99.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,223,"model.predict(vdf, name=""prediction_vertica_sql"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,224,"score = vdf.score(""prediction_sql"", ""prediction_vertica_sql"", metric=""r2"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,229,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,291,"assert model.score(metric=""max"") == pytest.approx(3.61156861855927, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,293,"assert model.score(metric=""mae"") == pytest.approx(0.608521836351418, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,295,"assert model.score(metric=""median"") == pytest.approx(0.49469564704003, abs=1e-3)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,297,"assert model.score(metric=""mse"") == pytest.approx(0.594990575399229, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,299,"assert model.score(metric=""rmse"") == pytest.approx(0.7713563219415712, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,301,"assert model.score(metric=""msle"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,305,"assert model.score() == pytest.approx(0.219640889304706, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,307,"assert model.score(metric=""r2a"") == pytest.approx(0.21928033527235014, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,309,"assert model.score(metric=""var"") == pytest.approx(0.219641599658795, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,311,"assert model.score(metric=""aic"") == pytest.approx(-3365.29441626357, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,313,"assert model.score(metric=""bic"") == pytest.approx(-3338.189123593071, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svr.py,325,"model_test.fit(winequality_vd, [""alcohol""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kprototypes.py,65,model_class.fit(iris_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kprototypes.py,90,"model_test.fit(""public.iris"", [""SepalLengthCm"", ""SepalWidthCm"", ""Species""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kprototypes.py,137,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kprototypes.py,159,"model_test.fit(iris_vd, [""SepalLengthCm"", ""SepalWidthCm"", ""Species""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kprototypes.py,169,"model_test_random.fit(""public.iris"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kprototypes.py,184,"model_test.fit(iris_vd, [""SepalLengthCm"", ""PetalWidthCm""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kprototypes.py,219,res = mmodel.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kprototypes.py,243,"model.predict(vdf, name=""prediction_vertica_sql"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_kprototypes.py,244,"score = vdf.score(""prediction_sql"", ""prediction_vertica_sql"", metric=""accuracy"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_bisecting_kmeans.py,94,"model_test.fit(""public.bsk_data"", [""col1"", ""col2"", ""col3"", ""col4""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_bisecting_kmeans.py,167,"model.predict(bsk_data_copy, X=[""col1"", ""col2"", ""col3"", ""col4""], name=""pred"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_bisecting_kmeans.py,180,"model_test.fit(bsk_data_vd, [""col1"", ""col2"", ""col3"", ""col4""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_bisecting_kmeans.py,190,"model_test_kmeanspp.fit(""public.bsk_data"", [""col1"", ""col2"", ""col3"", ""col4""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_bisecting_kmeans.py,202,"model_test_pseudo.fit(""public.bsk_data"", [""col1"", ""col2"", ""col3"", ""col4""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_bisecting_kmeans.py,215,"model_test.fit(winequality_vd, [""alcohol"", ""quality""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_bisecting_kmeans.py,259,"res = mmodel.predict([[5.006, 3.418, 1.464, 0.244], [3.0, 11.0, 1993.0, 0.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_bisecting_kmeans.py,267,"model.predict(vdf, name=""prediction_vertica_sql"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_bisecting_kmeans.py,268,"score = vdf.score(""prediction_sql"", ""prediction_vertica_sql"", metric=""accuracy"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,66,"model_class.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,111,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,131,"model_test.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,168,"model_test.fit(winequality_vd, [""alcohol""], ""good"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,173,"model_test.fit(winequality_vd, [""alcohol"", ""residual_sugar""], ""good"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,178,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,210,"res = mmodel.predict([[3.0, 11.0], [11.0, 1.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,224,"model.predict(vdf, name=""prediction_vertica_sql"", cutoff=0.5)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,227,"score = vdf.score(""prediction_sql"", ""prediction_vertica_sql"", metric=""accuracy"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,229,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,233,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,313,"model.predict(titanic_copy, name=""pred_class1"", cutoff=0.7)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,316,"model.predict(titanic_copy, name=""pred_class2"", cutoff=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,348,"assert model.score(cutoff=0.7, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,351,"assert model.score(cutoff=0.3, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,354,"assert model.score(cutoff=0.7, metric=""auc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,357,"assert model.score(cutoff=0.3, metric=""auc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,360,"assert model.score(cutoff=0.7, metric=""best_cutoff"") == pytest.approx(0.431)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,361,"assert model.score(cutoff=0.3, metric=""best_cutoff"") == pytest.approx(0.431)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,362,"assert model.score(cutoff=0.7, metric=""bm"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,365,"assert model.score(cutoff=0.3, metric=""bm"") == pytest.approx(0.0)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,366,"assert model.score(cutoff=0.7, metric=""csi"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,369,"assert model.score(cutoff=0.3, metric=""csi"") == pytest.approx(0.392570281124498)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,370,"assert model.score(cutoff=0.7, metric=""f1"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,373,"assert model.score(cutoff=0.3, metric=""f1"") == pytest.approx(0.5638067772170151)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,374,"assert model.score(cutoff=0.7, metric=""logloss"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,377,"assert model.score(cutoff=0.3, metric=""logloss"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,380,"assert model.score(cutoff=0.7, metric=""mcc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,383,"assert model.score(cutoff=0.3, metric=""mcc"") == pytest.approx(0.0)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,384,"assert model.score(cutoff=0.7, metric=""mk"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,387,"assert model.score(cutoff=0.3, metric=""mk"") == pytest.approx(-0.607429718875502)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,388,"assert model.score(cutoff=0.7, metric=""npv"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,391,"assert model.score(cutoff=0.3, metric=""npv"") == pytest.approx(0.0)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,392,"assert model.score(cutoff=0.7, metric=""prc_auc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,395,"assert model.score(cutoff=0.3, metric=""prc_auc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,398,"assert model.score(cutoff=0.7, metric=""precision"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,401,"assert model.score(cutoff=0.3, metric=""precision"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,404,"assert model.score(cutoff=0.7, metric=""specificity"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,407,"assert model.score(cutoff=0.3, metric=""specificity"") == pytest.approx(0.0)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_linear_svc.py,419,"model_test.fit(titanic_vd, [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,75,model_class.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,92,"model_test.fit(winequality_vd, [""good""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,97,"model_test.fit(winequality_vd, [""color""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,102,"model_test.fit(winequality_vd, [""residual_sugar"", ""alcohol""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,107,"model_test.fit(winequality_vd, [""good""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,144,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,164,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,199,model_class.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,225,"model_test.fit(titanic_vd, [""age"", ""fare"", ""sex"", ""pclass""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,242,model_class.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,248,res = mmodel.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,292,"model_class.predict(titanic, name=""prediction_vertica_sql"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,308,score = titanic.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,312,score = titanic.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,316,score = titanic.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,320,score = titanic.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,426,"model.predict(iris_copy, name=""pred_probability"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,429,"model.predict(iris_copy, name=""pred_class1"", cutoff=0.7)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,432,"model.predict(iris_copy, name=""pred_class2"", cutoff=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,461,"assert model.score(metric=""accuracy"") == pytest.approx(0.96)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,462,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,465,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,468,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,471,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,474,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,477,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,480,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,483,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,486,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,489,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,492,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,495,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,498,assert model.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_naive_bayes.py,512,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,63,"model.fit(titanic_vd, y=""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,74,"model.fit(titanic_vd, y=""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,78,"model.fit(titanic_vd, y=""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,83,"model.fit(titanic_vd, y=""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,93,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,99,model2.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,110,model3.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,118,model4.fit(amazon_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,125,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,129,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,136,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,146,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,153,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,157,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_delphi.py,162,model.fit(titanic_vd)
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,59,"model.fit(titanic_vd, [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,73,"model.fit(""public.titanic"", [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,80,"model.fit(""public.titanic"", [""sex"", ""embarked""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,87,"model.fit(""public.titanic"", [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,94,"model.fit(""public.titanic"", [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,101,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,109,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,117,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,125,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,135,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,147,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,154,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,161,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,171,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,181,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,191,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,201,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,210,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,219,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,226,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,233,"model.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,240,"model.fit(""public.titanic"", [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_tools.py,247,"model.fit(""public.titanic"", [""age"", ""fare""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_iforest.py,67,"model_class.fit(""public.iforest_data"", X)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_iforest.py,96,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_iforest.py,138,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_iforest.py,237,res = mmodel.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_iforest.py,248,"model.predict(iforest_data_vd, name=""prediction_vertica_sql"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_iforest.py,249,"# score = iforest_data_vd.score(""prediction_sql"", ""prediction_vertica_sql"", metric=""r2"") # Numeric Overflow"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_iforest.py,254,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_iforest.py,286,"model_test.fit(iforest_data_vd, [""gender""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,60,model_class.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,92,"model_class.fit(winequality_vd, [""alcohol""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,121,winequality_copy = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,170,"model_class.fit(""public.winequality"", [""alcohol""], ""good"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,187,"assert model.score(metric=""max"") == pytest.approx(3.592465, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,189,"assert model.score(metric=""mae"") == pytest.approx(0.609075, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,191,"assert model.score(metric=""median"") == pytest.approx(0.496031, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,193,"assert model.score(metric=""mse"") == pytest.approx(0.594856660735976, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,195,"assert model.score(metric=""rmse"") == pytest.approx(0.7712695123858948, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,197,"assert model.score(metric=""msle"") == pytest.approx(0.002509, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,199,"assert model.score() == pytest.approx(0.219816, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,201,"assert model.score(metric=""r2a"") == pytest.approx(0.21945605202370688, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,203,"assert model.score(metric=""var"") == pytest.approx(0.219816, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,205,"assert model.score(metric=""aic"") == pytest.approx(-3366.75686210436, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,207,"assert model.score(metric=""bic"") == pytest.approx(-3339.65156943384, abs=1e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,223,"model_class.fit(""public.winequality"", [""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,225,"winequality_copy = model_class.transform(winequality_copy, X=[""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,246,"model_class.fit(""public.winequality"", [""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,276,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,303,"model.fit(winequality_vd, [""alcohol""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,307,"model.fit(winequality_vd, [""alcohol""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pipeline.py,330,"model.fit(winequality_vd, [""alcohol""], ""quality"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_onehotencoder.py,43,"model_class.fit(""public.titanic"", [""pclass"", ""sex"", ""embarked""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_onehotencoder.py,63,"model_test.fit(""public.titanic"", [""pclass"", ""embarked""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_onehotencoder.py,151,"prediction3 = model.to_memmodel().transform([[1, ""female"", ""S""]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_onehotencoder.py,180,"titanic_trans = model.transform(titanic_vd, X=[""pclass"", ""sex"", ""embarked""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_onehotencoder.py,202,"model_test.fit(titanic_vd, [""pclass"", ""embarked""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pca.py,54,"model_class.fit(""public.winequality"", [""citric_acid"", ""residual_sugar"", ""alcohol""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pca.py,80,"model_test.fit(""public.winequality"", [""alcohol"", ""quality""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pca.py,192,"prediction3 = model.to_memmodel().transform([[3.0, 11.0, 93.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pca.py,196,winequality_trans = model.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pca.py,204,winequality_trans = model.transform(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pca.py,221,result = model.score()
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_pca.py,235,"model_test.fit(winequality_vd, [""alcohol"", ""quality""])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,67,"model_class.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,112,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,132,"model_test.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,173,"model_test.fit(winequality_vd, [""alcohol""], ""good"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,179,"model_test.fit(winequality_vd, [""alcohol"", ""residual_sugar""], ""good"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,218,"res = mmodel.predict([[3.0, 11.0], [11.0, 1.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,232,"model.predict(vdf, name=""prediction_vertica_sql"", cutoff=0.5)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,235,"score = vdf.score(""prediction_sql"", ""prediction_vertica_sql"", metric=""accuracy"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,237,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,241,score = vdf.score(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,333,"model.predict(titanic_copy, name=""pred_class1"", cutoff=0.7)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,336,"model.predict(titanic_copy, name=""pred_class2"", cutoff=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,368,"assert model.score(cutoff=0.7, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,371,"assert model.score(cutoff=0.3, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,374,"assert model.score(cutoff=0.7, metric=""auc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,377,"assert model.score(cutoff=0.3, metric=""auc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,380,"assert model.score(cutoff=0.7, metric=""best_cutoff"") == pytest.approx(0.3602)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,381,"assert model.score(cutoff=0.3, metric=""best_cutoff"") == pytest.approx(0.3602)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,382,"assert model.score(cutoff=0.7, metric=""bm"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,385,"assert model.score(cutoff=0.3, metric=""bm"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,388,"assert model.score(cutoff=0.7, metric=""csi"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,391,"assert model.score(cutoff=0.3, metric=""csi"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,394,"assert model.score(cutoff=0.7, metric=""f1"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,397,"assert model.score(cutoff=0.3, metric=""f1"") == pytest.approx(0.5857260049220673)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,398,"assert model.score(cutoff=0.7, metric=""logloss"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,401,"assert model.score(cutoff=0.3, metric=""logloss"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,404,"assert model.score(cutoff=0.7, metric=""mcc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,407,"assert model.score(cutoff=0.3, metric=""mcc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,410,"assert model.score(cutoff=0.7, metric=""mk"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,413,"assert model.score(cutoff=0.3, metric=""mk"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,416,"assert model.score(cutoff=0.7, metric=""npv"") == pytest.approx(0.625531914893617)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,417,"assert model.score(cutoff=0.3, metric=""npv"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,420,"assert model.score(cutoff=0.7, metric=""prc_auc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,423,"assert model.score(cutoff=0.3, metric=""prc_auc"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,426,"assert model.score(cutoff=0.7, metric=""precision"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,429,"assert model.score(cutoff=0.3, metric=""precision"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,432,"assert model.score(cutoff=0.7, metric=""specificity"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,435,"assert model.score(cutoff=0.3, metric=""specificity"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_logistic_regression.py,449,"model_test.fit(titanic_vd, [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_model_selection.py,229,"model.fit(""public.winequality"", [""residual_sugar"", ""alcohol""], ""good"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_model_selection.py,231,"data = model.predict(data, name=""prediction"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_model_selection.py,274,"model.fit(""public.winequality"", [""residual_sugar"", ""alcohol""], ""good"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_model_selection.py,302,"model.fit(""public.winequality"", [""residual_sugar"", ""alcohol""], ""good"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_model_selection.py,394,"model.fit(titanic_vd, [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,60,"model_class.fit(""public.titanic"", [""age"", ""fare""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,85,model_test.fit(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,152,titanic_copy = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,193,"assert model.score(cutoff=0.9, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,196,"assert model.score(cutoff=0.1, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,199,"assert model.score(metric=""best_cutoff"") == pytest.approx(0.999)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,200,"assert model.score(metric=""bm"") == pytest.approx(0.39280009607878474)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,201,"assert model.score(metric=""csi"") == pytest.approx(0.48414376321353064)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,202,"assert model.score(metric=""f1"") == pytest.approx(0.6524216524216524)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,203,"assert model.score(metric=""logloss"") == pytest.approx(26.8788249694002)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,204,"assert model.score(metric=""mcc"") == pytest.approx(0.40382652359985155)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,205,"assert model.score(metric=""mk"") == pytest.approx(0.41516247778624016)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,206,"assert model.score(metric=""npv"") == pytest.approx(0.6811881188118812)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,207,"assert model.score(metric=""prc_auc"") == pytest.approx(0.7591081348272292)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,208,"assert model.score(metric=""precision"") == pytest.approx(0.7339743589743589)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,209,"assert model.score(metric=""specificity"") == pytest.approx(0.8056206088992974)"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,221,"model_test.fit(titanic_vd, [""age""], ""survived"")"
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/vModel/test_knn_classifier.py,222,"assert model_test.score(cutoff=0.9, metric=""accuracy"") == pytest.approx("
/Users/cba/Desktop/github_datascience_code/download_code/vertica_VerticaPy/verticapy/tests/stats/test_stats.py,86,"model.fit(airline_copy, [""passengers_bias""], ""passengers"")"
/Users/cba/Desktop/github_datascience_code/download_code/bjherger_Uber-DS-Challenge/bin/p3.py,200,"res = mod.fit(method='bfgs', maxiter=100)"
/Users/cba/Desktop/github_datascience_code/download_code/bjherger_Uber-DS-Challenge/bin/p3.py,208,predicted = res.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/weiji14_zen3geo/zen3geo/tests/test_datapipes_datashader.py,104,assert dataarray.rio.transform().e == -0.5
/Users/cba/Desktop/github_datascience_code/download_code/weiji14_zen3geo/zen3geo/datapipes/datashader.py,152,>>> dataarray.rio.transform()
/Users/cba/Desktop/github_datascience_code/download_code/weiji14_zen3geo/zen3geo/datapipes/datashader.py,250,# assert raster.rio.transform().e > 0  # y goes South to North
/Users/cba/Desktop/github_datascience_code/download_code/weiji14_zen3geo/zen3geo/datapipes/datashader.py,254,# assert _raster.rio.transform().e < 0  # y goes North to South
/Users/cba/Desktop/github_datascience_code/download_code/square_bionic/example/ml_workflow.py,82,"m.fit(train_frame.drop(""target"", axis=1), train_frame[""target""])"
/Users/cba/Desktop/github_datascience_code/download_code/square_bionic/example/intro_workflow.py,28,"model.fit(my_random_df[[""x""]], my_random_df[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/square_bionic/tests/test_code_references.py,290,"regr.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/square_bionic/tests/test_code_references.py,317,test_y_ = regr.predict(test_x)
/Users/cba/Desktop/github_datascience_code/download_code/square_bionic/tests/test_code_hasher.py,99,"m.fit(train_frame.drop(""target"", axis=1), train_frame[""target""])"
/Users/cba/Desktop/github_datascience_code/download_code/wq_wq.db/wq/db/rest/serializers.py,56,geom.transform(srid)
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/dataset/operations.py,296,.transform(apply_totals)
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,50,".transform(dimx1_date_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,101,".transform(dimx1_date_df, [year(mock_dataset.fields.timestamp)], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,152,".transform(dimx1_date_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,203,".transform(dimx1_date_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,254,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,316,".transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,466,".transform(dimx2_date_str_totalsx2_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,529,".transform(dimx2_str_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,809,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,969,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,1034,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,1109,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,1197,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,1281,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,1486,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,1695,".transform(dimx2_date_str_ref_df, dimensions, references)"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,1815,".transform(dimx2_date_str_ref_delta_df, dimensions, references)"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,1937,".transform(dimx1_date_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,1993,".transform(dimx2_date_str_ref_delta_df, dimensions, references)"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2123,".transform(dimx0_metricx1_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2168,".transform(dimx0_metricx2_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2223,".transform(dimx1_str_df, [mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2276,".transform(dimx1_str_df, [mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2343,".transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2432,".transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2572,".transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2713,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2774,".transform(df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2911,".transform(dimx0_metricx1_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,2994,".transform(dimx0_metricx1_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3035,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3184,".transform(dimx0_metricx2_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3237,".transform(dimx1_date_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3287,".transform(dimx1_date_df, [year(mock_dataset.fields.timestamp)], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3337,".transform(dimx1_str_df, [mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3386,".transform(dimx1_num_df, [mock_dataset.fields[""candidate-id""]], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3460,".transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3520,".transform(dimx2_date_num_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3579,".transform(dimx2_date_num_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3642,".transform(dimx2_date_str_df, dimensions, references)"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3787,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3872,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_highcharts.py,3994,.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,85,").transform(self.df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,110,").transform(self.df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,142,").transform(df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,164,").transform(self.df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,190,").transform(self.df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,217,").transform(self.df, [self.dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,260,").transform(self.df, [self.dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,299,").transform(self.df, [], [reference])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,341,").transform(self.df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,371,").transform(self.df, [], [reference])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,426,").transform(self.df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,446,"result = ReactTable(mock_dataset.fields.votes).transform(dimx0_metricx1_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,457,"result = ReactTable(mock_dataset.fields.votes, mock_dataset.fields.wins).transform(dimx0_metricx2_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,476,"result = ReactTable(mock_dataset.fields.wins, mock_dataset.fields.votes).transform(dimx0_metricx2_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,495,"result = ReactTable(mock_dataset.fields.wins).transform(dimx1_date_df, [day(mock_dataset.fields.timestamp)], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,552,result = ReactTable(CumSum(mock_dataset.fields.votes)).transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,611,"result = ReactTable(mock_dataset.fields.wins).transform(dimx1_str_df, [mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,647,"result = ReactTable(mock_dataset.fields.wins).transform(dimx1_num_df, [mock_dataset.fields['candidate-id']], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,706,result = ReactTable(mock_dataset.fields.wins).transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,755,"result = ReactTable(mock_dataset.fields.wins).transform(dimx2_date_str_totals_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,811,"result = ReactTable(mock_dataset.fields.wins).transform(dimx2_date_str_totalsx2_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,875,"result = ReactTable(mock_dataset.fields.votes).transform(dimx2_date_str_ref_df, dimensions, references)"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,924,"result = ReactTable(mock_dataset.fields.votes, mock_dataset.fields.wins).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,977,"result = ReactTable(mock_dataset.fields.wins, transpose=True).transform(dimx1_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1000,"result = ReactTable(mock_dataset.fields.votes, mock_dataset.fields.wins, transpose=True).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1026,"result = ReactTable(mock_dataset.fields.wins, hide=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1063,").transform(dimx2_date_str_ref_df, dimensions, references)"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1112,"result = ReactTable(mock_dataset.fields.wins).transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1143,"result = ReactTable(mock_dataset.fields.wins, pivot=[mock_dataset.fields.timestamp]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1224,"result = ReactTable(mock_dataset.fields.wins, pivot=[mock_dataset.fields.timestamp], sort=[0]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1305,"result = ReactTable(mock_dataset.fields.wins, pivot=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1361,").transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1459,").transform(dimx2_date_str_ref_df, dimensions, references)"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1580,"result = ReactTable(mock_dataset.fields.wins, pivot=[mock_dataset.fields['candidate-id']]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1625,").transform(dimx1_num_df, [mock_dataset.fields['candidate-id']], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1688,").transform(dimx1_num_df, [mock_dataset.fields['candidate-id']], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1741,"result = ReactTable(mock_dataset.fields.wins).transform(dimx1_date_df, [day(mock_dataset.fields.timestamp)], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1802,"result = ReactTable(mock_dataset.fields.votes, pivot=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1873,"result = ReactTable(mock_dataset.fields.wins, mock_dataset.fields.votes, pivot=[political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,1997,"result = ReactTable(mock_dataset.fields.wins, mock_dataset.fields.votes, pivot=[political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,2147,").transform(dimx2_date_str_totalsx2_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,2238,").transform(dimx2_date_str_totalsx2_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,2324,"result = ReactTable(mock_dataset.fields.wins).transform(dimx1_str_df, [mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,2361,"result = ReactTable(mock_dataset.fields.wins, pivot=dimensions).transform(dimx1_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,2384,"result = ReactTable(mock_dataset.fields.wins).transform(dimx1_str_df, [mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,2416,result = ReactTable(mock_dataset.fields.wins).transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_reacttable.py,2464,"result = ReactTable(mock_dataset.fields.wins, hide=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,50,"result = Pandas(mock_dataset.fields.votes).transform(dimx0_metricx1_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,60,"result = Pandas(mock_dataset.fields.votes, mock_dataset.fields.wins).transform(dimx0_metricx2_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,70,"result = Pandas(mock_dataset.fields.wins, mock_dataset.fields.votes).transform(dimx0_metricx2_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,80,"result = Pandas(mock_dataset.fields.wins).transform(dimx1_date_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,91,result = Pandas(CumSum(mock_dataset.fields.votes)).transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,104,"result = Pandas(mock_dataset.fields.wins).transform(dimx1_str_df, [mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,115,"result = Pandas(mock_dataset.fields.wins).transform(dimx1_num_df, [mock_dataset.fields['candidate-id']], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,127,"result = Pandas(mock_dataset.fields.wins).transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,138,"result = Pandas(mock_dataset.fields.wins, transpose=True).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,152,"result = Pandas(mock_dataset.fields.wins, pivot=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,166,"result = Pandas(mock_dataset.fields.wins, pivot=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,181,"result = Pandas(mock_dataset.fields.wins, hide=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,197,"result = Pandas(mock_dataset.fields.votes, hide=[mock_dataset.fields.votes]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,212,"result = Pandas(mock_dataset.fields.votes, hide=['votes_eoe']).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,227,"result = Pandas(mock_dataset.fields.wins).transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,242,"result = Pandas(mock_dataset.fields.votes).transform(dimx2_date_str_ref_df, dimensions, references)"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,261,"result = Pandas(votes).transform(dimx1_date_df / 3, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,277,result = Pandas(mock_dataset.fields.wins).transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,294,result = Pandas(mock_dataset.fields.wins).transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,311,result = Pandas(mock_dataset.fields.wins).transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,331,result = Pandas(mock_modified_dataset.fields.wins).transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,346,"result = Pandas(mock_dataset.fields.wins, sort=[0]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,361,"result = Pandas(mock_dataset.fields.wins, sort=[0], ascending=[False]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,376,"result = Pandas(mock_dataset.fields.wins, sort=[1]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,391,"result = Pandas(mock_dataset.fields.wins, sort=[1], ascending=[False]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,406,"result = Pandas(mock_dataset.fields.wins, sort=[-0, 1]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,423,"result = Pandas(mock_dataset.fields.votes, pivot=[mock_dataset.fields.political_party], sort=[0]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,441,").transform(dimx2_date_str_df, [mock_dataset.fields.timestamp, mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,455,"result = Pandas(mock_dataset.fields.votes, pivot=[mock_dataset.fields.political_party], sort=[1]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,473,").transform(dimx2_date_str_df, [mock_dataset.fields.timestamp, mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,487,"result = Pandas(mock_dataset.fields.votes, pivot=[mock_dataset.fields.political_party], sort=[1]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,505,").transform(dimx2_date_str_df, [mock_dataset.fields.timestamp, mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,525,").transform(dimx2_date_str_df, [mock_dataset.fields.timestamp, mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,541,").transform(dimx2_date_str_df, [mock_dataset.fields.timestamp, mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,561,").transform(dimx2_date_str_df, [mock_dataset.fields.timestamp, mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,579,").transform(dimx2_date_str_df, [mock_dataset.fields.timestamp, mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,593,"result = Pandas(mock_dataset.fields.wins, sort=[0]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,608,"result = Pandas(mock_dataset.fields.wins, sort=[0], ascending=True).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,623,"result = Pandas(mock_dataset.fields.wins, sort=[1], ascending=[False]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,638,"result = Pandas(mock_dataset.fields.wins, sort=[0, 2], ascending=[False, True]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,657,"result = Pandas(mock_dataset.fields.wins, sort=[]).transform(dimx1_date_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,668,"result = Pandas(mock_dataset.fields.wins, sort=[5]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,681,"result = Pandas(mock_dataset.fields.wins, sort=[0]).transform(no_index_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_pandas.py,714,"result = Pandas(ds.fields.metric1, ds.fields.metric2, pivot=[ds.fields.company]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,31,"result = CSV(mock_dataset.fields.votes).transform(dimx0_metricx1_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,40,"result = CSV(mock_dataset.fields.votes, mock_dataset.fields.wins).transform(dimx0_metricx2_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,49,"result = CSV(mock_dataset.fields.wins, mock_dataset.fields.votes).transform(dimx0_metricx2_df, [], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,58,"result = CSV(mock_dataset.fields.wins).transform(dimx1_date_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,69,"result = CSV(CumSum(mock_dataset.fields.votes)).transform(dimx1_date_operation_df, query_dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,79,"result = CSV(mock_dataset.fields.wins).transform(dimx1_str_df, [mock_dataset.fields.political_party], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,88,"result = CSV(mock_dataset.fields.wins).transform(dimx1_num_df, [mock_dataset.fields['candidate-id']], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,98,"result = CSV(mock_dataset.fields.wins).transform(dimx2_date_str_df, query_dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,108,"result = CSV(mock_dataset.fields.wins, hide=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,123,"result = CSV(mock_dataset.fields.votes, hide=[mock_dataset.fields.votes]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,138,"result = CSV(mock_dataset.fields.votes, hide=['votes_eoe']).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,153,"result = CSV(mock_dataset.fields.wins).transform(dimx2_date_str_df, dimensions, [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,165,"result = CSV(mock_dataset.fields.wins, pivot=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,178,"result = CSV(mock_dataset.fields.wins, pivot=[mock_dataset.fields.political_party]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,192,"result = CSV(mock_dataset.fields.votes, pivot=[mock_dataset.fields['candidate-id']]).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,207,"result = CSV(mock_dataset.fields.votes).transform(dimx2_date_str_ref_df, query_dimensions, query_references)"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_csv.py,219,"result = CSV(mock_dataset.fields.votes, mock_dataset.fields.wins).transform("
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/tests/widgets/test_matplotlib.py,24,".transform(dimx1_date_df, [mock_dataset.fields.timestamp], [])"
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/queries/builder/dataset_query_builder.py,158,widget.transform(
/Users/cba/Desktop/github_datascience_code/download_code/kayak_fireant/fireant/widgets/csv.py,24,"result_df = super(CSV, self).transform(data_frame, dimensions, references, use_raw_values=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,77,transformer.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,80,"np.testing.assert_array_equal(transformer.transform(df), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,81,"np.testing.assert_array_equal(transformer.transform(arr), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,82,"np.testing.assert_array_equal(transformer.transform(new_df), new_transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,89,transformer.fit(arr)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,91,"np.testing.assert_array_equal(transformer.transform(arr), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,92,"np.testing.assert_array_equal(transformer.transform(arr), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,93,"np.testing.assert_array_equal(transformer.transform(new_df), new_transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,103,"np.testing.assert_array_equal(transformer.fit_transform(df), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,137,transformer.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,140,"np.testing.assert_array_equal(transformer.transform(df), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,141,"np.testing.assert_array_equal(transformer.transform(arr), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,142,"np.testing.assert_array_equal(transformer.transform(new_df), new_transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,159,transformer.fit(arr)  # Fit on a numpy array to test while at it
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,162,"np.testing.assert_array_equal(transformer.transform(df), transformed_arr_quantiles_diff)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,163,"np.testing.assert_array_equal(transformer.transform(new_df), new_transformed_arr_quantiles_diff)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,171,"np.testing.assert_array_equal(transformer.fit_transform(df), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,186,transformer.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,223,transformer.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,226,"np.testing.assert_array_equal(transformer.transform(df), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,227,"np.testing.assert_array_equal(transformer.transform(arr), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,228,"np.testing.assert_array_equal(transformer.transform(new_df), new_transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,240,transformer.fit(arr)  # Fit on a numpy array to test while at it
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,241,"np.testing.assert_array_equal(transformer.transform(df), transformed_arr_strat_threshold)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,250,transformer.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,251,"np.testing.assert_array_equal(transformer.transform(df), arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,252,"np.testing.assert_array_equal(transformer.transform(new_df), new_transformed_arr_min_cat_count_sup)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,258,transformer.fit(df_2_cats)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,260,"np.testing.assert_array_equal(transformer.transform(df_2_cats), arr_2_cats)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,266,"np.testing.assert_array_equal(transformer.fit_transform(df), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,277,transformer.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,316,transformer.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,320,"np.testing.assert_array_equal(transformer.transform(df), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,321,"np.testing.assert_array_equal(transformer.transform(arr), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,322,"np.testing.assert_array_equal(transformer.transform(new_df), new_transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,331,"np.testing.assert_array_equal(transformer.fit_transform(df), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,341,transformer.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,345,"np.testing.assert_array_equal(transformer.transform(df), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,346,"np.testing.assert_array_equal(transformer.transform(arr), transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,347,"np.testing.assert_array_equal(transformer.transform(new_df), new_transformed_arr)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,355,transformer.fit(arr)  # Fit on a numpy array to test while at it
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_column_preprocessors.py,371,transformer.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_explainer.py,79,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_explainer.py,100,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_explainer.py,125,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_explainer.py,150,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_bayesian_ridge_regressor.py,89,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_bayesian_ridge_regressor.py,90,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_bayesian_ridge_regressor.py,93,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_bayesian_ridge_regressor.py,96,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_bayesian_ridge_regressor.py,102,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_bayesian_ridge_regressor.py,161,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_bayesian_ridge_regressor.py,184,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svr_regressor.py,89,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svr_regressor.py,90,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svr_regressor.py,93,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svr_regressor.py,95,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svr_regressor.py,102,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svr_regressor.py,161,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svr_regressor.py,184,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,126,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,127,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,129,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,133,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,134,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,136,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,140,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,141,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,143,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,146,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,148,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,154,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,155,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,157,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,161,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,162,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,164,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,168,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,169,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,171,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,174,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,176,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,182,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,183,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,185,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,189,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,190,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,192,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,196,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,197,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,199,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,202,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,204,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,211,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,232,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,238,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,244,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,255,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,261,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,267,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,278,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,284,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,290,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,323,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,328,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,333,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,343,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,348,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,353,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,363,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,368,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,373,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,443,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,479,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,515,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,554,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,590,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_ridge_classifier.py,626,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,175,fake_pipeline.fit(df)  # We fit even if it is not really necessary
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,185,"np.testing.assert_equal(new_pipeline.transform(df), fake_pipeline.transform(df))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,191,"np.testing.assert_equal(new_pipeline.transform(df), fake_pipeline.transform(df))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,198,new_pipeline.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,200,"np.testing.assert_equal(new_pipeline.transform(df), np.array(df))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,210,pipeline.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,233,"model.fit(x_train, y_train_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,241,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,248,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,256,"model.fit(x_train, y_train_regression)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,264,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,271,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,280,"model.fit(x_train, y_train_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,291,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,302,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,312,"model.fit(x_train, y_train_regression)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,323,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,333,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,343,"model.fit(x_train, y_train_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,352,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,361,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,372,"model.fit(x_train, y_train_regression)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,381,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,389,"self.assertEqual(list(new_model.predict(x_test)), list(model.predict(x_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,419,"pipeline1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,420,"pipeline2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,449,"pipeline1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,450,"pipeline2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,508,"model.fit(x_train_1, y_train_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,513,"self.assertEqual(utils_models.predict(x_test_1, model), y_test_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,514,"self.assertEqual(utils_models.predict(x_test_1_solo, model), y_test_1_classification_solo)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,515,"self.assertEqual(utils_models.predict(x_test_1, model, alternative_version=True), y_test_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,516,"self.assertEqual(utils_models.predict(x_test_1_solo, model, alternative_version=True), y_test_1_classification_solo)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,525,"model.fit(x_train_2, y_train_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,530,"self.assertEqual(utils_models.predict(x_test_2, model), y_test_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,531,"self.assertEqual(utils_models.predict(x_test_2_solo, model), y_test_2_classification_solo)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,532,"self.assertEqual(utils_models.predict(x_test_2, model, alternative_version=True), y_test_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,533,"self.assertEqual(utils_models.predict(x_test_2_solo, model, alternative_version=True), y_test_2_classification_solo)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,542,"model.fit(x_train_1, y_train_classification_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,547,"self.assertEqual(utils_models.predict(x_test_1, model), y_test_classification_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,548,"self.assertEqual(utils_models.predict(x_test_1_solo, model), y_test_1_classification_multi_solo)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,549,"self.assertEqual(utils_models.predict(x_test_1, model, alternative_version=True), y_test_classification_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,550,"self.assertEqual(utils_models.predict(x_test_1_solo, model, alternative_version=True), y_test_1_classification_multi_solo)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,559,"model.fit(x_train_2, y_train_classification_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,564,"self.assertEqual(utils_models.predict(x_test_2, model), y_test_classification_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,565,"self.assertEqual(utils_models.predict(x_test_2_solo, model), y_test_2_classification_multi_solo)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,566,"self.assertEqual(utils_models.predict(x_test_2, model, alternative_version=True), y_test_classification_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,567,"self.assertEqual(utils_models.predict(x_test_2_solo, model, alternative_version=True), y_test_2_classification_multi_solo)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,576,"model.fit(x_train_1, y_train_regression)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,582,"self.assertEqual(type(utils_models.predict(x_test_1, model)), list)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,583,"self.assertTrue(isinstance(utils_models.predict(x_test_1_solo, model), list))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,584,"np.testing.assert_almost_equal(utils_models.predict(x_test_1, model), utils_models.predict(x_test_1, model, alternative_version=True))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,593,"model.fit(x_train_2, y_train_regression)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,599,"self.assertEqual(type(utils_models.predict(x_test_2, model)), list)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,600,"self.assertTrue(isinstance(utils_models.predict(x_test_2_solo, model), list))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,601,"np.testing.assert_almost_equal(utils_models.predict(x_test_2, model), utils_models.predict(x_test_2, model, alternative_version=True))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,633,"model.fit(x_train_1, y_train_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,658,"model.fit(x_train_2, y_train_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,681,"model.fit(x_train_1, y_train_classification_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,704,"model.fit(x_train_2, y_train_classification_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_utils_models.py,727,"model.fit(x_train_1, y_train_regression)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,152,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,153,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,155,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,159,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,160,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,162,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,166,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,167,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,169,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,172,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,174,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,180,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,181,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,183,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,187,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,188,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,190,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,194,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,195,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,197,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,200,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,202,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,208,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,209,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,211,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,215,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,216,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,218,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,222,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,223,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,225,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,228,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,230,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,237,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,258,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,264,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,270,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,281,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,287,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,293,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,304,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,310,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,316,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,349,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,354,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,359,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,369,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,374,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,379,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,389,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,394,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,399,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,469,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,505,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,541,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,580,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,616,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_classifier.py,652,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_regressor.py,89,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_regressor.py,90,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_regressor.py,93,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_regressor.py,95,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_regressor.py,102,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_regressor.py,161,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_gbt_regressor.py,185,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,126,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,127,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,129,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,133,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,134,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,136,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,140,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,141,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,143,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,146,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,148,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,154,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,155,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,157,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,161,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,162,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,164,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,168,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,169,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,171,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,174,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,176,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,182,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,183,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,185,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,189,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,190,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,192,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,196,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,197,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,199,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,202,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,204,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,211,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,232,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,238,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,244,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,255,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,261,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,267,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,278,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,284,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,290,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,323,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,328,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,333,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,343,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,348,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,353,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,363,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,368,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,373,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,443,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,478,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,513,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,551,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,586,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_logistic_regression_classifier.py,621,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,115,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,116,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,117,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,122,"probas = model.predict(x_train, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,123,"probas_alternative = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,128,"preds_inv = model.predict(x_train_inv, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,129,"probas_inv = model.predict(x_train_inv, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,136,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,137,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,138,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,143,"probas = model.predict(x_train, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,144,"probas_alternative = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,149,"preds_inv = model.predict(x_train_inv, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,150,"probas_inv = model.predict(x_train_inv, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,157,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,158,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,159,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,164,"probas = model.predict(x_train, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,165,"probas_alternative = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,170,"preds_inv = model.predict(x_train_inv, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,171,"probas_inv = model.predict(x_train_inv, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,179,model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,181,"model.predict(x_train, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,200,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,214,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,228,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,266,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,276,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,286,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,470,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,475,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,479,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,485,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,490,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,494,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,500,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,505,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,509,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,535,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_classifier.py,576,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_regressor.py,89,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_regressor.py,90,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_regressor.py,93,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_regressor.py,95,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_regressor.py,102,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_regressor.py,161,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_regressor.py,184,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,126,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,127,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,129,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,133,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,134,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,136,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,140,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,141,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,143,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,146,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,148,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,154,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,155,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,157,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,161,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,162,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,164,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,168,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,169,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,171,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,174,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,176,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,182,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,183,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,185,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,189,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,190,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,192,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,196,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,197,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,199,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,202,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,204,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,211,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,232,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,238,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,244,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,255,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,261,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,267,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,278,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,284,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,290,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,323,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,328,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,333,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,343,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,348,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,353,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,363,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,368,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,373,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,443,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,478,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,513,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,551,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,586,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_svm_classifier.py,621,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,108,"model.fit(x_train, y_train_regressor, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,120,"model.fit(x_train, y_train_regressor, x_valid=x_train, y_valid=y_train_regressor, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,132,"model.fit(x_train, y_train_regressor, x_valid=x_train, y_valid=y_train_regressor, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,145,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,150,"model.fit(x_train[:50], y_train_regressor[:50])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,156,"model1.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,158,"model2.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,165,"model1.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,167,"model2.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,188,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,189,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,192,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,194,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,201,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,250,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,283,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,334,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_regressor.py,362,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_class.py,80,"model.fit('test', 'test')"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_class.py,82,model.predict('test')
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_class.py,107,"preprocess_pipeline.fit(pd.DataFrame({'test_x1': [1, 2, 3], 'test_x2': [4, 5, 6]}))  # Fit the pipeline"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_class.py,145,"preprocess_pipeline.fit(pd.DataFrame({'test_x1': [1, 2, 3], 'test_x2': [4, 5, 6]}))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_class.py,356,preprocess_pipeline.fit(original_df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_class.py,892,x_input_transformed = model.preprocess_pipeline.transform(x_input)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,271,"gbt.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,336,"gbt.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,338,"sgd.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,535,"gbt.fit(x_train, y_train_str)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,536,"sgd.fit(x_train, y_train_str)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,554,"sgd.fit(x_train, y_train_str)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,590,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,596,"gbt.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,599,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,611,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,638,preds = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,639,"probas = model.predict(x_test, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,640,"preds_alt = model.predict(x_test, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,641,"probas_alt = model.predict(x_test, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,693,model.predict('test')
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,985,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,1022,"gbt.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,1024,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,1077,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,1145,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,1166,preds = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,1168,new_preds = model_new.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,1197,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,1217,preds = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_classifier.py,1219,new_preds = model_new.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,126,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,127,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,129,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,133,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,134,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,136,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,140,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,141,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,143,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,146,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,148,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,154,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,155,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,157,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,161,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,162,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,164,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,168,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,169,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,171,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,174,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,176,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,182,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,183,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,185,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,189,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,190,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,192,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,196,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,197,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,199,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,202,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,204,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,211,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,232,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,238,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,244,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,255,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,261,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,267,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,278,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,284,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,290,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,323,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,328,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,333,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,343,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,348,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,353,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,363,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,368,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,373,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,443,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,478,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,513,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,551,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,586,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_knn_classifier.py,621,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,81,"target_get_predictions = np.array([[model.predict(x_test)[i] for model in list_mock_model] for i, x in enumerate(x_test)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,147,"gbt.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,189,"gbt.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,191,"sgd.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,304,"gbt.fit(x_train, y_train_int)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,305,"sgd.fit(x_train, y_train_int)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,321,"sgd.fit(x_train, y_train_int)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,353,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,359,"gbt.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,362,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,373,preds = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,374,"preds_alt = model.predict(x_test, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,410,model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,412,"model.predict(x_train, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,418,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,420,"model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,422,"model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,436,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,512,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,544,"gbt.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,546,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,583,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,645,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,666,preds = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_aggregation_regressor.py,667,new_preds = model_new.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,126,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,127,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,129,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,133,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,134,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,136,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,140,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,141,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,143,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,146,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,148,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,154,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,155,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,157,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,161,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,162,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,164,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,168,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,169,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,171,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,174,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,176,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,182,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,183,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,185,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,189,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,190,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,192,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,196,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,197,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,199,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,202,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,204,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,211,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,232,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,238,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,244,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,255,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,261,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,267,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,278,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,284,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,290,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,323,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,328,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,333,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,343,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,348,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,353,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,363,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,368,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,373,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,443,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,479,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,515,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,554,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,590,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_classifier.py,626,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,111,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,112,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,113,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,119,"_ = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,121,"_ = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,123,"preds_inv = model.predict(x_train_inv, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,130,model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,132,"model.predict(x_train, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,267,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,272,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,276,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,299,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_dense_regressor.py,328,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_regressor.py,90,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_regressor.py,91,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_regressor.py,94,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_regressor.py,96,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_regressor.py,103,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_regressor.py,162,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_lgbm_regressor.py,186,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_elasticnet_regressor.py,89,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_elasticnet_regressor.py,90,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_elasticnet_regressor.py,93,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_elasticnet_regressor.py,95,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_elasticnet_regressor.py,102,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_elasticnet_regressor.py,161,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_elasticnet_regressor.py,184,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,125,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,126,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,128,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,132,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,133,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,135,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,139,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,140,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,142,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,145,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,147,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,153,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,154,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,156,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,160,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,161,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,163,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,167,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,168,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,170,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,173,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,175,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,181,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,182,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,184,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,188,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,189,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,191,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,195,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,196,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,198,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,201,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,203,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,210,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,231,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,237,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,243,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,254,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,260,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,266,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,277,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,283,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,289,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,322,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,327,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,332,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,342,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,347,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,352,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,362,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,367,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,372,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,442,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,478,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,514,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,553,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,589,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_classifier.py,625,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_classifier.py,55,"self.pipeline.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_classifier.py,67,return np.array(self.pipeline.predict(x_test))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_classifier.py,153,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_classifier.py,165,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_classifier.py,198,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_classifier.py,208,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_classifier.py,236,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_classifier.py,249,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_classifier.py,479,"preprocess_pipeline.fit(pd.DataFrame({'test_x1': [1, 2, 3], 'test_x2': [4, 5, 6]}))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_kernel_ridge_regressor.py,89,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_kernel_ridge_regressor.py,90,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_kernel_ridge_regressor.py,93,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_kernel_ridge_regressor.py,95,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_kernel_ridge_regressor.py,102,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_kernel_ridge_regressor.py,161,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_kernel_ridge_regressor.py,184,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_regressor.py,89,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_regressor.py,90,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_regressor.py,93,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_regressor.py,95,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_regressor.py,102,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_regressor.py,161,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_regressor.py,185,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_regressor.py,89,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_regressor.py,90,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_regressor.py,93,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_regressor.py,95,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_regressor.py,102,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_regressor.py,161,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_rf_regressor.py,185,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,127,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,149,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,172,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,193,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,214,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,220,"model.fit(x_train[:50], y_train_mono_2[:50])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,229,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,240,"model1.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,242,"model2.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,249,"model1.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,251,"model2.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,259,"model1.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,261,"model2.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,268,"model1.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,270,"model2.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,277,"model1.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,279,"model2.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,286,"model1.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,288,"model2.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,295,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,297,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,305,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,307,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,338,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,339,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,341,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,344,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,346,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,357,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,358,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,360,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,363,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,365,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,376,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,377,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,379,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,382,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,384,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,394,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,395,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,398,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,400,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,407,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,434,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,450,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,466,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pipeline.py,481,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,110,"model.fit(x_train, y_train_mono_2, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,124,"model.fit(x_train, y_train_mono_2, x_valid=x_train, y_valid=y_train_mono_2, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,138,"model.fit(x_train, y_train_mono_2, x_valid=x_train, y_valid=y_train_mono_2, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,153,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,167,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_train_mono_3, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,181,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_train_mono_3, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,195,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_valid_mono_missing, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,211,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,225,"model.fit(x_train, y_train_multi, x_valid=x_train, y_valid=y_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,239,"model.fit(x_train, y_train_multi, x_valid=x_train, y_valid=y_train_multi, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,254,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,259,"model.fit(x_train[:50], y_train_mono_2[:50])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,265,"model1.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,267,"model2.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,274,"model1.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,276,"model2.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,283,"model1.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,285,"model2.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,292,"model1.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,294,"model2.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,301,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,303,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,311,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,313,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,338,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,339,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,341,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,344,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,346,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,352,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,353,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,355,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,358,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,360,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,367,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,368,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,370,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,373,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,375,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,382,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,403,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,414,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,426,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,459,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,469,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,479,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,534,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,570,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,627,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_xgboost_classifier.py,669,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,129,"model.fit(x_train, y_train_mono_2, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,141,"model.fit(x_train, y_train_mono_2, x_valid=x_train, y_valid=y_train_mono_2, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,152,"model.fit(x_train, y_train_mono_2, x_valid=x_train, y_valid=y_train_mono_2, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,161,"model.fit(x_train, y_train_mono_2, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,166,"model.fit(x_train, y_train_mono_2, x_valid=x_train, y_valid=y_train_mono_2, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,173,"model.fit(x_train, y_train_mono_2, x_valid=x_train, y_valid=y_train_mono_2, with_shuffle=False)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,182,"model.fit(x_train, y_train_mono_2, x_valid=x_train, y_valid=y_train_mono_2, with_shuffle=False)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,199,"model.fit(x_train, y_train_mono_2, x_valid=x_train, y_valid=y_train_mono_2, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,207,"model.fit(x_train, y_train_mono_2_fake, x_valid=x_train, y_valid=y_train_mono_2, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,215,"model.fit(x_train, y_train_mono_3, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,227,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_train_mono_3, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,238,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_train_mono_3, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,247,"model.fit(x_train, y_train_mono_3, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,252,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_train_mono_3, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,259,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_train_mono_3, with_shuffle=False)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,268,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_train_mono_3, with_shuffle=False)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,285,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_train_mono_3, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,293,"model.fit(x_train, y_train_mono_3_fake, x_valid=x_train, y_valid=y_train_mono_3, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,299,"model.fit(x_train, y_train_mono_3, x_valid=x_train, y_valid=y_valid_mono_missing, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,314,"model.fit(x_train, y_train_multi, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,327,"model.fit(x_train, y_train_multi, x_valid=x_train, y_valid=y_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,339,"model.fit(x_train, y_train_multi, x_valid=x_train, y_valid=y_train_multi, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,348,"model.fit(x_train, y_train_multi, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,353,"model.fit(x_train, y_train_multi, x_valid=x_train, y_valid=y_train_multi, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,360,"model.fit(x_train, y_train_multi, x_valid=x_train, y_valid=y_train_multi, with_shuffle=False)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,369,"model.fit(x_train, y_train_multi, x_valid=x_train, y_valid=y_train_multi, with_shuffle=False)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,387,"model.fit(x_train, y_train_regressor, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,398,"model.fit(x_train, y_train_regressor, x_valid=x_train, y_valid=y_train_regressor, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,408,"model.fit(x_train, y_train_regressor, x_valid=x_train, y_valid=y_train_regressor, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,416,"model.fit(x_train, y_train_regressor, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,421,"model.fit(x_train, y_train_regressor, x_valid=x_train, y_valid=y_train_regressor, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,428,"model.fit(x_train, y_train_regressor, x_valid=x_train, y_valid=y_train_regressor, with_shuffle=False)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,437,"model.fit(x_train, y_train_regressor, x_valid=x_train, y_valid=y_train_regressor, with_shuffle=False)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,459,"model1.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,461,"model2.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,467,"model1.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,469,"model2.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,475,"model1.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,477,"model2.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,483,"model1.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,485,"model2.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,491,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,493,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,499,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,501,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,508,"model1.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,510,"model2.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,516,"model1.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,518,"model2.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,540,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,541,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,542,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,547,"probas = model.predict(x_train, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,548,"probas_alternative = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,553,"preds_inv = model.predict(x_train_inv, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,554,"probas_inv = model.predict(x_train_inv, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,559,"preds = model.predict(x_train, alternative_version=False, inference_batch_size=inference_batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,560,"preds_alternative = model.predict(x_train, alternative_version=True, inference_batch_size=inference_batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,565,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,566,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,567,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,572,"probas = model.predict(x_train, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,573,"probas_alternative = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,578,"preds_inv = model.predict(x_train_inv, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,579,"probas_inv = model.predict(x_train_inv, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,584,"preds = model.predict(x_train, alternative_version=False, inference_batch_size=inference_batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,585,"preds_alternative = model.predict(x_train, alternative_version=True, inference_batch_size=inference_batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,590,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,591,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,592,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,597,"probas = model.predict(x_train, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,598,"probas_alternative = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,603,"preds_inv = model.predict(x_train_inv, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,604,"probas_inv = model.predict(x_train_inv, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,609,"preds = model.predict(x_train, alternative_version=False, inference_batch_size=inference_batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,610,"preds_alternative = model.predict(x_train, alternative_version=True, inference_batch_size=inference_batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,615,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,616,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,617,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,623,"_ = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,625,"_ = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,627,"preds_inv = model.predict(x_train_inv, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,632,"preds = model.predict(x_train, alternative_version=False, inference_batch_size=inference_batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,633,"preds_alternative = model.predict(x_train, alternative_version=True, inference_batch_size=inference_batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,638,model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,640,"model.predict(x_train, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,660,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,678,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,696,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,714,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,908,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,913,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,917,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,923,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,928,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,932,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,938,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,943,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,947,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [list(_) for _ in model.model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,953,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,958,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [[_] for _ in model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_keras.py,962,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_train)], [[_] for _ in model.predict(x_train)], decimal=3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,67,"p.fit(content, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,68,"self.assertEqual(type(p.transform(content)), np.ndarray)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,107,"pipeline.fit(df, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,108,"pipeline_verbose.fit(df, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,109,"pipeline_passthrough.fit(df, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,110,"pipeline_passthrough_verbose.fit(df, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,112,transformed_df = pd.DataFrame(pipeline.transform(df))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,113,transformed_df_verbose = pd.DataFrame(pipeline_verbose.transform(df))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,114,transformed_df_passthrough = pd.DataFrame(pipeline_passthrough.transform(df))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,115,transformed_df_passthrough_verbose = pd.DataFrame(pipeline_passthrough_verbose.transform(df))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,174,"pipeline.fit(df, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,175,"pipeline_verbose.fit(df, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,186,"pipeline.fit(df, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,187,"pipeline_verbose.fit(df, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,198,"estimator.fit(pd.DataFrame({'toto': [1, 0, 1, 1, None]}))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,206,"estimator.fit(pd.DataFrame({'toto': [0, 0, 1, 1, 0]}))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,212,"estimator.fit(['ceci test', 'cela aussi', 'ceci cela'])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_preprocess.py,218,"estimator.fit(pd.DataFrame({'toto_1': [0, 0, 1, 1, 1], 'toto_2': [1, 1, 0, 0, 0], 'toto_3': [0, 0, 0, 0, 0]}), pd.Series([-1, -1, 1, 1, 1]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,126,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,127,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,129,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,133,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,134,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,136,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,140,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,141,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,143,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,146,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,148,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,154,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,155,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,157,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,161,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,162,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,164,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,168,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,169,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,171,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,174,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,176,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,182,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,183,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,185,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,189,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,190,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,192,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,196,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,197,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,199,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,202,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,204,"probas_inv = model.predict(x_train_inv, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,211,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,232,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,238,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,244,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,255,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,261,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,267,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,278,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,284,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,290,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,305,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,311,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,317,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,328,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,334,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,340,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,351,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,357,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,363,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,396,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,401,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,406,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,416,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,421,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,426,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,436,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,441,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,446,"model.fit(x_train, y_train_multi)  # Unavailable in multi-labels"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,516,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,552,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,588,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,627,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,663,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_sgd_classifier.py,699,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pls_regressor.py,89,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pls_regressor.py,90,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pls_regressor.py,93,"probas = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pls_regressor.py,95,"preds_inv = model.predict(x_train_inv, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pls_regressor.py,102,"model.predict(pd.Series([-2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pls_regressor.py,161,"model.fit(x_train, y_train_regressor)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_pls_regressor.py,184,"self.assertEqual([[_] for _ in model.predict(x_train)], [[_] for _ in new_model.predict(x_train)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_regressor.py,55,"self.pipeline.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_regressor.py,62,return np.array(self.pipeline.predict(x_test))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/tests/test_model_regressor.py,222,"preprocess_pipeline.fit(pd.DataFrame({'test_x1': [1, 2, 3], 'test_x2': [4, 5, 6]}))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/3_training_regression.py,164,"preprocess_pipeline.fit(df_train.drop(y_col, axis=1), df_train[y_col])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/3_training_regression.py,259,"model.fit(x_train, y_train, x_valid=x_valid, y_valid=y_valid, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/3_training_regression.py,316,"y_pred_train = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/3_training_regression.py,321,"y_pred_valid = model.predict(x_valid, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/3_training_classification.py,223,"preprocess_pipeline.fit(df_train.drop(y_col, axis=1), df_train[y_col])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/3_training_classification.py,327,"model.fit(x_train, y_train, x_valid=x_valid, y_valid=y_valid, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/3_training_classification.py,385,"y_pred_train = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/3_training_classification.py,390,"y_pred_valid = model.predict(x_valid, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/4_predict.py,83,"y_pred = model.predict(df_prep, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/5_demonstrator.py,119,model.predict(tmp_df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/5_demonstrator.py,211,prediction =  model.predict(df_prep)[0]
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name-scripts/1_preprocess_data.py,127,"new_X = preprocess_pipeline.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/model_pipeline.py,104,"self.pipeline.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/model_pipeline.py,134,"self.pipeline.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/model_pipeline.py,164,return np.array(self.pipeline.predict(x_test))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/model_class.py,366,preprocess_pipeline.fit(x_input)  # We fit the pipeline to set the necessary columns for the pipeline
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/model_keras.py,291,fit_history = self.model.fit(  # type: ignore
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/model_keras.py,414,"predicted_proba = self.model.predict(x_test, batch_size=inference_batch_size, verbose=1)  # type: ignore"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/model_keras.py,446,"predictions = self.model.predict(x_test, batch_size=inference_batch_size, verbose=1)  # type: ignore"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/model_keras.py,473,"return self.predict(x_test, return_proba=True, alternative_version=alternative_version)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/utils_models.py,194,"df = df.assign(**pd.DataFrame(mlb.fit_transform(df[y_col]), columns=mlb.classes_))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/utils_models.py,344,preprocessed_x = preprocess_pipeline.transform(df[columns_in])
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/utils_models.py,382,"predictions = model.predict(df_prep, inference_batch_size=inference_batch_size, alternative_version=alternative_version)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/utils_models.py,562,"model_tmp.fit(**{**kwargs_fit, **{'x_train': x_train, 'y_train': y_train, 'x_valid': x_valid, 'y_valid': y_valid}})"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/utils_models.py,564,y_pred = model_tmp.predict(x_valid)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/model_xgboost_classifier.py,163,"self.model.fit(x_train, y_train, eval_set=eval_set, early_stopping_rounds=self.early_stopping_rounds, verbose=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/model_classifier.py,91,"predicted_proba = self.predict(x_test, return_proba=True, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/model_classifier.py,114,"predicted_proba = self.predict(x_test, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/model_aggregation_classifier.py,248,"model.fit(x_train, y_train, x_valid=x_valid, y_valid=y_valid, with_shuffle=True, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/model_aggregation_classifier.py,312,"array_predict = np.array([sub_model['model'].predict(x_test, alternative_version=alternative_version) for sub_model in self.sub_models])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/model_aggregation_classifier.py,346,"preds_or_probas = model.predict(x_test, return_proba=return_proba, alternative_version=alternative_version) # type: ignore"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_lgbm_classifier.py,101,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_sgd_classifier.py,100,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_sgd_classifier.py,106,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_svm_classifier.py,97,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_svm_classifier.py,103,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_ridge_classifier.py,98,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_ridge_classifier.py,104,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_gbt_classifier.py,102,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_logistic_regression_classifier.py,100,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_knn_classifier.py,99,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/classifiers/models_sklearn/model_rf_classifier.py,100,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/regressors/model_xgboost_regressor.py,122,"self.model.fit(x_train, y_train, eval_set=eval_set, early_stopping_rounds=self.early_stopping_rounds, verbose=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/regressors/model_xgboost_regressor.py,153,y_pred = self.model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/regressors/model_aggregation_regressor.py,188,"sub_model['model'].fit(x_train, y_train, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/models_training/regressors/model_aggregation_regressor.py,237,"array_predict = np.array([sub_model['model'].predict(x_test, alternative_version=alternative_version) for sub_model in self.sub_models])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/preprocessing/column_preprocessors.py,94,"self.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/preprocessing/column_preprocessors.py,95,return self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/preprocessing/outlier_detection.py,64,outliers |= run_forest.fit_predict(X)  # In-place union
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/preprocessing/outlier_detection.py,71,outliers |= lof.fit_predict(X)  # In-place union
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_project/package_name/monitoring/model_explainer.py,145,return self.model.predict(content_prep)  # type: ignore
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_tests/functional_tests.py,621,preds = test_model.predict(df_input_preds_prep)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_tests/functional_tests.py,632,"probas2 = test_model.predict(df_input_preds_prep, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_tests/functional_tests.py,1421,preds = test_model.predict(df_input_preds_prep)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_tests/functional_tests.py,1434,"probas2 = test_model.predict(df_input_preds_prep, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_tests/functional_tests.py,1984,preds = test_model.predict(df_input_preds_prep)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_tests/functional_tests.py,2006,"probas2 = test_model.predict(df_input_preds_prep, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_tests/functional_tests.py,2819,preds = test_model.predict(df_input_preds_prep)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_num/num_tests/functional_tests.py,2829,"probas2 = test_model.predict(df_input_preds_prep, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_tests/functional_tests.py,656,preds = test_model.predict(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_tests/functional_tests.py,667,"probas2 = test_model.predict(df, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_tests/functional_tests.py,825,preds = test_model.predict(df)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_tests/functional_tests.py,840,"probas2 = test_model.predict(df, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1045,"model.fit(df_data, df_valid=df_data, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1052,"model.fit(df_data, df_valid=df_data, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1061,"model.fit(df_data, df_valid=df_data, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1075,"model.fit(df_data, df_valid=df_data, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1079,"model.fit(df_data, df_valid=df_data, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1090,"model.fit(df_data, df_valid=df_data, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1164,"model.fit(df_data, df_valid=df_data)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1165,preds = model.predict(df_data)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1173,model.predict(df_data)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1266,model.fit(df_data)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1357,model.fit(df_data)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1383,fit_params = model.fit(df_data)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1454,"self.assertEqual(model.predict(df_data), new_model.predict(df_data))  # Useful ?"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras_faster_rcnn.py,1653,model.fit(df_data)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_explainer.py,90,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_explainer.py,99,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,157,"model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,168,"self.assertEqual(list(new_model.predict(df_train_mono)), list(model.predict(df_train_mono)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,178,"self.assertEqual(list(new_model.predict(df_train_mono)), list(model.predict(df_train_mono)))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,224,"model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,226,y_classes = list(model.inverse_transform(model.predict(df_train_mono)))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,231,"self.assertEqual(utils_models.predict(df_train_mono, model, model_conf), y_classes)  # DataFrame"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,232,"self.assertEqual(utils_models.predict(file_paths, model, model_conf), y_classes)  # Liste fichiers"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,233,"self.assertEqual(utils_models.predict(file_paths[0], model, model_conf)[0], y_classes[0])  # Chemin fichier"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,234,"self.assertEqual(utils_models.predict(np_images_rgb, model, model_conf), y_classes[1:]) # np.ndarray 'RGB'"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,235,"self.assertEqual(utils_models.predict(np_images_rgb[0], model, model_conf)[0], y_classes[1]) # np.ndarray 'RGB' - 1 seule image"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,236,"np.testing.assert_almost_equal(utils_models.predict(df_train_mono, model, model_conf, return_proba=True), probas, 3)  # DataFrame"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,237,"np.testing.assert_almost_equal(utils_models.predict(file_paths, model, model_conf, return_proba=True), probas, 3)  # Liste fichiers"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,238,"np.testing.assert_almost_equal(utils_models.predict(file_paths[0], model, model_conf, return_proba=True)[0], probas[0], 3)  # Chemin fichier"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,239,"np.testing.assert_almost_equal(utils_models.predict(np_images_rgb, model, model_conf, return_proba=True), probas[1:], 3) # np.ndarray 'RGB'"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,240,"np.testing.assert_almost_equal(utils_models.predict(np_images_rgb[0], model, model_conf, return_proba=True)[0], probas[1], 3) # np.ndarray 'RGB' - 1 seule image"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,250,"model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,252,y_classes = list(model.inverse_transform(model.predict(df_train_multi)))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,257,"self.assertEqual(utils_models.predict(df_train_multi, model, model_conf), y_classes)  # DataFrame"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,258,"self.assertEqual(utils_models.predict(file_paths, model, model_conf), y_classes)  # Liste fichiers"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,259,"self.assertEqual(utils_models.predict(file_paths[0], model, model_conf)[0], y_classes[0])  # Chemin fichier"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,260,"self.assertEqual(utils_models.predict(np_images_rgba, model, model_conf), y_classes[1:]) # np.ndarray 'RGBA'"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,261,"self.assertEqual(utils_models.predict(np_images_rgba[0], model, model_conf)[0], y_classes[1]) # np.ndarray 'RGB' - 1 seule image"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,262,"np.testing.assert_almost_equal(utils_models.predict(df_train_multi, model, model_conf, return_proba=True), probas, 3)  # DataFrame"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,263,"np.testing.assert_almost_equal(utils_models.predict(file_paths, model, model_conf, return_proba=True), probas, 3)  # Liste fichiers"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,264,"np.testing.assert_almost_equal(utils_models.predict(file_paths[0], model, model_conf, return_proba=True)[0], probas[0], 3)  # Chemin fichier"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,265,"np.testing.assert_almost_equal(utils_models.predict(np_images_rgba, model, model_conf, return_proba=True), probas[1:], 3) # np.ndarray 'RGBA'"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,266,"np.testing.assert_almost_equal(utils_models.predict(np_images_rgba[0], model, model_conf, return_proba=True)[0], probas[1], 3) # np.ndarray 'RGB' - 1 seule image"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,274,"model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,277,"utils_models.predict('bad_file_path', model, model_conf)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,279,"utils_models.predict(['bad_file_path'], model, model_conf)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,281,"utils_models.predict(np.array([[[[10, 2], [5, 6]], [[1, 0], [4, 6]]]]), model, model_conf)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,283,"utils_models.predict(np.array([[[10, 2], [5, 6]], [[1, 0], [4, 6]]]), model, model_conf)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,285,"utils_models.predict(np.array([[0, 1]]), model, model_conf)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,287,"utils_models.predict(pd.DataFrame({'toto': ['titi', 'tata']}), model, model_conf)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,289,"utils_models.predict(pd.DataFrame({'file_path': ['bad_file_path']}), model, model_conf)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,326,"model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,328,y_classes = list(model.inverse_transform(model.predict(df_train_mono)))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,353,"model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,355,y_classes = list(model.inverse_transform(model.predict(df_train_multi)))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_utils_models.py,378,"model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,145,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,146,"preds = model.predict(df_train_mono, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,148,"proba = model.predict(df_train_mono, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,153,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,154,"preds = model.predict(df_train_mono, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,156,"proba = model.predict(df_train_mono, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,162,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,163,"preds = model.predict(df_train_multi, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,165,"proba = model.predict(df_train_multi, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,170,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,171,"preds = model.predict(df_train_multi, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,173,"proba = model.predict(df_train_multi, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,180,model.predict(df_train_multi)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,205,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,213,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,250,model.fit(df_train_mono)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,257,model.fit(df_train_multi)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,399,"fit_params = model.fit(df_train_mono, df_valid=None)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,405,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,409,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,415,"fit_params = model.fit(df_train_multi, df_valid=None)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,421,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,425,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,456,fit_params = model.fit(df_train_mono)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_cnn_classifier.py,497,fit_params = model.fit(df_train_multi)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,216,"fit_arguments = model.fit(df_train_mono, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,243,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,270,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,298,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,326,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,354,"fit_arguments = model.fit(df_train_mono, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,383,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,410,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,422,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,436,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,458,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,474,"fit_arguments = model.fit(df_train_mono_fake, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,481,"fit_arguments = model.fit(df_train_mono, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,508,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,535,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,563,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,591,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,619,"fit_arguments = model.fit(df_train_mono, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,648,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,675,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,687,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,701,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,723,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,739,"fit_arguments = model.fit(df_train_mono_fake, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,746,"fit_arguments = model.fit(df_train_multi, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,773,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,800,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,828,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,856,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,884,"fit_arguments = model.fit(df_train_multi, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,913,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,940,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,952,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,966,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,988,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1004,"fit_arguments = model.fit(df_train_multi_fake, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1010,"fit_arguments = model.fit(df_train_multi, df_valid=df_valid_multi_missing, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1038,"fit_arguments = model.fit(df_train_multi, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1065,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1092,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1120,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1148,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1176,"fit_arguments = model.fit(df_train_multi, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1205,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1232,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1244,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1258,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1280,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1296,"fit_arguments = model.fit(df_train_multi_fake, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1302,"fit_arguments = model.fit(df_train_multi, df_valid=df_valid_multi_missing, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1349,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1350,"preds = model.predict(df_train_mono, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1352,"proba = model.predict(df_train_mono, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1357,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1358,"preds = model.predict(df_train_mono, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1360,"proba = model.predict(df_train_mono, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1366,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1367,"preds = model.predict(df_train_mono, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1369,"proba = model.predict(df_train_mono, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1374,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1375,"preds = model.predict(df_train_mono, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1377,"proba = model.predict(df_train_mono, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1383,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1384,"preds = model.predict(df_train_multi, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1386,"proba = model.predict(df_train_multi, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1391,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1392,"preds = model.predict(df_train_multi, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1394,"proba = model.predict(df_train_multi, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1400,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1401,"preds = model.predict(df_train_multi, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1403,"proba = model.predict(df_train_multi, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1408,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1409,"preds = model.predict(df_train_multi, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1411,"proba = model.predict(df_train_multi, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1418,model.predict(df_train_multi)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1444,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1452,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1460,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1468,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1506,model.fit(df_train_mono)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1513,model.fit(df_train_mono)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1520,model.fit(df_train_multi)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1527,model.fit(df_train_multi)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1761,"fit_params = model.fit(df_train_mono, df_valid=None)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1767,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1771,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1777,"fit_params = model.fit(df_train_mono, df_valid=None)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1783,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1787,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1793,"fit_params = model.fit(df_train_multi, df_valid=None)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1799,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1803,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1809,"fit_params = model.fit(df_train_multi, df_valid=None)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1815,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1819,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1851,fit_params = model.fit(df_train_mono)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1896,fit_params = model.fit(df_train_mono)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1942,fit_params = model.fit(df_train_multi)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_transfer_learning_classifier.py,1988,fit_params = model.fit(df_train_multi)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_class.py,69,model.fit('test')
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_class.py,71,model.predict('test')
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_classifier.py,66,"return self.predict(df_test, return_proba=True, batch_size=batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_classifier.py,139,model.fit(df_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_classifier.py,168,model.fit(df_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_classifier.py,195,model.fit(df_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,171,"fit_arguments = model.fit(df_train_mono, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,193,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,215,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,238,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,260,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,282,"fit_arguments = model.fit(df_train_mono, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,305,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,327,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,334,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,343,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,360,"fit_arguments = model.fit(df_train_mono, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,371,"fit_arguments = model.fit(df_train_mono_fake, df_valid=df_train_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,378,"fit_arguments = model.fit(df_train_multi, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,400,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,422,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,445,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,467,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,489,"fit_arguments = model.fit(df_train_multi, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,512,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,534,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,541,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,550,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,567,"fit_arguments = model.fit(df_train_multi, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,578,"fit_arguments = model.fit(df_train_multi_fake, df_valid=df_train_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,584,"fit_arguments = model.fit(df_train_multi, df_valid=df_valid_multi_missing, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,625,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,626,"preds = model.predict(df_train_mono, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,628,"proba = model.predict(df_train_mono, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,633,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,634,"preds = model.predict(df_train_mono, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,636,"proba = model.predict(df_train_mono, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,642,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,643,"preds = model.predict(df_train_multi, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,645,"proba = model.predict(df_train_multi, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,650,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,651,"preds = model.predict(df_train_multi, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,653,"proba = model.predict(df_train_multi, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,660,model.predict(df_train_multi)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,685,"model.fit(df_train_mono, df_valid=df_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,693,"model.fit(df_train_multi, df_valid=df_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,992,"fit_params = model.fit(df_train_mono, df_valid=None)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,998,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,1002,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,1008,"fit_params = model.fit(df_train_multi, df_valid=None)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,1014,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_keras.py,1018,"np.testing.assert_almost_equal([list(_) for _ in reloaded_model.predict(x_batch[0])], [list(_) for _ in model.model.predict(x_batch[0])], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_detectron_faster_rcnn.py,488,"model.fit(df_data, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_detectron_faster_rcnn.py,502,"model.fit(df_data, df_valid=None, with_shuffle=True)  # We fit again with the same data, not important"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_detectron_faster_rcnn.py,513,"model.fit(error_df_data, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_detectron_faster_rcnn.py,535,"model.fit(df_data, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_detectron_faster_rcnn.py,537,"predictions = model.predict(df_data, write_images=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_detectron_faster_rcnn.py,545,"predictions = model.predict(df_data, write_images=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_detectron_faster_rcnn.py,556,"predictions = model.predict(df_data, write_images=True, output_dir_image=output_dir_image)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_detectron_faster_rcnn.py,610,"model.fit(df_data, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/tests/test_model_detectron_faster_rcnn.py,696,"model.fit(df_data, df_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name-scripts/2_training_object_detector.py,174,"model.fit(df_train, df_valid=df_valid, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name-scripts/2_training_object_detector.py,199,y_pred_train = model.predict(df_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name-scripts/2_training_object_detector.py,204,y_pred_valid = model.predict(df_valid)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name-scripts/2_training_classifier.py,164,"model.fit(df_train, df_valid=df_valid, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name-scripts/2_training_classifier.py,189,"y_pred_train = model.predict(df_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name-scripts/2_training_classifier.py,194,"y_pred_valid = model.predict(df_valid, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name-scripts/4_demonstrator.py,125,model.predict(pd.DataFrame({'file_path': [def_image_path]}))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name-scripts/4_demonstrator.py,210,prediction = model.predict(df)[0]
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name-scripts/3_predict.py,108,"y_pred = model.predict(df, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/model_keras.py,374,fit_history = self.model.fit(  # type: ignore
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/model_keras.py,508,predicted_proba = self.model.predict(  # type: ignore
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/model_keras.py,553,"return self.predict(df_test, return_proba=True, batch_size=batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/object_detectors/model_keras_faster_rcnn.py,834,fit_history = self.model_rpn.fit(  # type: ignore
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/object_detectors/model_keras_faster_rcnn.py,888,fit_history = self.model_classifier.fit(  # type: ignore
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/object_detectors/model_keras_faster_rcnn.py,985,"predictions = self.model_classifier.predict(input_data, verbose=0)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/object_detectors/model_keras_faster_rcnn.py,1440,"rpn_predictions_cls, rpn_predictions_regr = self.rpn_clone.predict(batch_x_img)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/object_detectors/model_keras_faster_rcnn.py,1442,"rpn_predictions_cls, rpn_predictions_regr = self.model.model_rpn.predict(batch_x_img)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/classifiers/model_transfer_learning_classifier.py,112,fit_history = self.model.fit(  # type: ignore
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/classifiers/model_classifier.py,89,"predicted_proba = self.predict(df_test, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_vision/vision_project/package_name/models_training/classifiers/model_classifier.py,108,"predicted_proba = self.predict(df_test, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_tests/functional_tests.py,63,"model.fit(x_train=x_train, y_train=y_train, x_valid=x_valid, y_valid=y_valid)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_tests/functional_tests.py,121,model_list_predict = list(model.predict(x_test))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_tests/functional_tests.py,122,new_model_list_predict = list(new_model.predict(x_test))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_tests/functional_tests.py,664,"preds = test_model.predict(['cdi à temps complet', 'vous disposez du permis'])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_tests/functional_tests.py,675,"probas2 = test_model.predict(['cdi à temps complet', 'vous disposez du permis'], return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_tests/functional_tests.py,1289,"preds = test_model.predict(['cdi à temps complet', 'vous disposez du permis', 'le véhicule est nécessaire', 'vous disposez du permis et le véhicule est nécessaire'])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_tests/functional_tests.py,1302,"probas2 = test_model.predict(['cdi à temps complet', 'vous disposez du permis', 'le véhicule est nécessaire', 'vous disposez du permis et le véhicule est nécessaire'], return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_tests/functional_tests.py,1922,"preds = test_model.predict(['cdi à temps complet', 'vous disposez du permis', 'le véhicule est nécessaire', 'vous disposez du permis et le véhicule est nécessaire'])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_tests/functional_tests.py,1944,"probas2 = test_model.predict(['cdi à temps complet', 'vous disposez du permis',"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name-tutorials/fr/jules_verne/model_author.py,70,"super().fit(new_x_train, new_y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name-tutorials/fr/jules_verne/model_author.py,87,predictions = super().predict(sentences)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name-tutorials/fr/jules_verne/model_author.py,112,"return self.predict(x_test, return_proba=True, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_explainer.py,81,"model.fit(x_train, y_train_mono_2)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_explainer.py,96,"model.fit(x_train, y_train_mono_3)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_explainer.py,114,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,204,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,212,"self.assertEqual(list(new_model.predict(['test', 'toto', 'a'])), list(model.predict(['test', 'toto', 'a'])))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,221,"self.assertEqual(list(new_model.predict(['test', 'toto', 'a'])), list(model.predict(['test', 'toto', 'a'])))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,248,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,262,"self.assertEqual(list(new_model.predict(['test', 'toto', 'a'])), list(model.predict(['test', 'toto', 'a'])))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,277,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,291,"self.assertEqual(list(new_model.predict(['test', 'toto', 'a'])), list(model.predict(['test', 'toto', 'a'])))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,315,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,318,"self.assertEqual(utils_models.predict('Ceci est un test', model, model_conf), ['test'])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,319,"self.assertEqual(utils_models.predict('Test ""deux"" !', model, model_conf), ['deux'])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,320,"self.assertEqual(utils_models.predict('Ceci est un test', model, model_conf, alternative_version=True), ['test'])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,321,"self.assertEqual(utils_models.predict('Test ""deux"" !', model, model_conf, alternative_version=True), ['deux'])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,329,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,332,"self.assertEqual(utils_models.predict('Ceci est un test', model, model_conf), [('test',)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,333,"self.assertEqual(utils_models.predict('Toto ""deux"" !', model, model_conf), [('toto',)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,334,"self.assertEqual(utils_models.predict(['Ceci est un test', 'Toto test ""deux"" !'], model, model_conf), [('test',), ('test', 'toto')])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,335,"self.assertEqual(utils_models.predict('Ceci est un test', model, model_conf, alternative_version=True), [('test',)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,336,"self.assertEqual(utils_models.predict('Toto ""deux"" !', model, model_conf, alternative_version=True), [('toto',)])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,337,"self.assertEqual(utils_models.predict(['Ceci est un test', 'Toto test ""deux"" !'], model, model_conf, alternative_version=True), [('test',), ('test', 'toto')])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,354,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_utils_models.py,378,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm_attention.py,164,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm_attention.py,183,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_cnn.py,166,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_cnn.py,185,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,124,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,125,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,127,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,128,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,129,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,131,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,132,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,137,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,138,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,140,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,141,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,142,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,144,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,145,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,150,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,151,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,153,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,154,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,155,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,157,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,158,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,163,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,164,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,166,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,167,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,168,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,170,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,171,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,176,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,177,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,179,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,180,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,181,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,183,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,184,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,189,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,190,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,192,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,193,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,194,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,196,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,197,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,221,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,230,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,239,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,248,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,257,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,266,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,288,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,297,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,306,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,315,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,334,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,341,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,348,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,355,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,363,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_svm.py,371,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,144,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,145,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,147,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,148,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,149,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,151,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,152,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,157,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,158,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,160,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,161,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,162,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,164,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,165,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,170,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,171,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,173,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,174,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,175,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,177,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,178,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,183,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,184,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,186,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,187,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,188,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,190,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,191,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,196,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,197,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,199,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,200,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,201,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,203,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,204,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,209,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,210,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,212,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,213,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,214,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,216,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,217,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,241,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,250,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,259,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,268,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,277,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,286,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,307,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,314,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,321,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,328,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,336,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_gbt.py,344,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,287,"svm.fit(np.array(['ma phrase', 'ta phrase']), np.array(['coucou', 'coucou2']))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,345,"svm.fit(np.array(['ma phrase', 'ta phrase']), np.array(['coucou', 'coucou2']))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,347,"gbt.fit(np.array(['ma phrase', 'ta phrase']), np.array(['coucou', 'coucou2']))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,538,"svm.fit(x_train, y_train_str)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,539,"gbt.fit(x_train, y_train_str)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,557,"gbt.fit(x_train, y_train_str)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,594,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,600,"svm.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,603,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,614,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,641,preds = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,642,"probas = model.predict(x_test, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,643,"preds_alt = model.predict(x_test, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,644,"probas_alt = model.predict(x_test, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,696,model.predict('test')
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,988,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,1025,"svm.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,1027,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_aggregation.py,1080,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_class.py,77,"model.fit('test', 'test')"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_class.py,79,model.predict('test')
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_class.py,137,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_class.py,148,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_class.py,178,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_class.py,188,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_class.py,247,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_class.py,263,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm.py,165,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm.py,184,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,125,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,126,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,128,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,129,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,130,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,132,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,133,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,138,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,139,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,141,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,142,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,143,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,145,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,146,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,151,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,152,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,154,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,155,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,156,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,158,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,159,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,164,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,165,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,167,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,168,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,169,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,171,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,172,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,177,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,178,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,180,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,181,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,182,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,184,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,185,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,190,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,191,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,193,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,194,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,195,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,197,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,198,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,222,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,231,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,240,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,249,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,258,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,267,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,288,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,295,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,302,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,309,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,317,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_lgbm.py,325,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_dense.py,99,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_dense.py,115,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_dense.py,149,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_dense.py,156,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,149,"model.fit(x_train, y_train_mono, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,161,"model.fit(x_train, y_train_mono, x_valid=x_valid, y_valid=y_valid_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,173,"model.fit(x_train, y_train_mono, x_valid=x_valid, y_valid=y_valid_mono, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,185,"model.fit(x_train, np.expand_dims(y_train_mono, 1), x_valid=x_valid, y_valid=np.expand_dims(y_valid_mono, 1), with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,197,"model.fit(x_train, y_train_mono, x_valid=x_valid, y_valid=y_valid_mono_missing, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,209,"model.fit(x_train, y_train_multi, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,221,"model.fit(x_train, y_train_multi, x_valid=x_valid, y_valid=y_valid_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,233,"model.fit(x_train, y_train_multi, x_valid=x_valid, y_valid=y_valid_multi, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,249,"model.fit(x_train, y_train_mono, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,258,"model.fit(x_train[:50], y_train_different_order[:50], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,268,"model.fit(x_train[50:], y_train_mono[50:], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,280,"model.fit(x_train[50:], y_train_mono[50:], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,301,"model.fit(x_train, y_train_mono, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,311,"model.fit(x_train[:50], y_train_mono_fake[:50], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,318,"model.fit(x_train, y_train_multi, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,326,"model.fit(x_train[:50], y_train_multi[:50], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,336,"model.fit(x_train[50:], y_train_multi[50:], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,347,"model.fit(x_train[50:], y_train_multi[50:], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,370,"model.fit(x_train_long, y_train_long, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,382,"model.fit(x_train, y_train_multi, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,392,"model.fit(x_train[:50], y_train_multi_fake[:50], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,403,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,408,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,417,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,422,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,431,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,436,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,445,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,450,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,471,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,472,"preds = model.predict(x_valid, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,474,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,475,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,476,"proba = model.predict(x_valid, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,478,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,479,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,481,model.predict(x_valid_long)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,486,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,487,"preds = model.predict(x_valid, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,489,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,490,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,491,"proba = model.predict(x_valid, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,493,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,494,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,496,model.predict(x_valid_long)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,502,model.predict('test')
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,521,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,533,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,889,"model.fit(x_train=x_train, y_train=y_train, x_valid=x_valid, y_valid=y_valid)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,910,"model.fit(x_train=x_train, y_train=y_train, x_valid=x_valid, y_valid=y_valid)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_huggingface.py,932,"model.fit(x_train=x_train, y_train=y_train, x_valid=x_valid, y_valid=y_valid)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,123,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,137,"model.fit(x_train, y_train_mono, x_valid='toto', y_valid='titi', test=5)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,151,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,167,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,173,"model.fit(x_train[:50], y_train_mono[:50])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,190,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,192,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,199,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,201,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,211,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,213,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,223,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,225,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,232,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,234,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,244,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,246,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,256,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,258,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,268,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,270,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,280,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,282,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,292,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,294,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,304,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,306,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,316,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,318,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,344,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,345,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,347,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,348,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,349,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,351,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,352,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,360,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,361,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,363,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,364,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,365,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,367,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,368,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,374,model.predict('test')
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,394,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_pipeline.py,406,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,125,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,126,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,128,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,129,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,130,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,132,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,133,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,138,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,139,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,141,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,142,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,143,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,145,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,146,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,151,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,152,"preds = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,154,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,155,"self.assertEqual(preds, model.predict(['test'], return_proba=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,156,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,158,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,159,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,164,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,165,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,167,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,168,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,169,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,171,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,172,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,177,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,178,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,180,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,181,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,182,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,184,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,185,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,190,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,191,preds = model.predict(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,193,"preds = model.predict('test', return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,194,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,195,"proba = model.predict(x_train, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,197,"proba = model.predict('test', return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,198,"self.assertEqual([elem for elem in proba], [elem for elem in model.predict(['test'], return_proba=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,222,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,229,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,238,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,245,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,254,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,261,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,270,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,277,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,286,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,293,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,302,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,309,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,330,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,337,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,344,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,351,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,359,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_tfidf_sgdc.py,367,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,162,"model.fit(x_train, y_train_mono, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,177,"model.fit(x_train, y_train_mono, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,192,"model.fit(x_train, y_train_mono, x_valid=x_valid, y_valid=y_valid_mono, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,206,"model.fit(x_train, y_train_mono, x_valid=x_valid, y_valid=y_valid_mono, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,220,"model.fit(x_train, np.expand_dims(y_train_mono, 1), x_valid=x_valid, y_valid=np.expand_dims(y_valid_mono, 1), with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,234,"model.fit(x_train, y_train_mono, x_valid=x_valid, y_valid=y_valid_mono_missing, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,248,"model.fit(x_train, y_train_multi, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,263,"model.fit(x_train, y_train_multi, x_valid=x_valid, y_valid=y_valid_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,278,"model.fit(x_train, y_train_multi, x_valid=x_valid, y_valid=y_valid_multi, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,292,"model.fit(x_train, y_train_multi, x_valid=x_valid, y_valid=y_valid_multi, with_shuffle=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,310,"model.fit(x_train, y_train_mono, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,318,"model.fit(x_train[:50], y_train_different_order[:50], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,327,"model.fit(x_train[50:], y_train_mono[50:], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,338,"model.fit(x_train[50:], y_train_mono[50:], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,360,"model.fit(x_train, y_train_mono, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,369,"model.fit(x_train[:50], y_train_mono_fake[:50], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,378,"model.fit(x_train, y_train_multi, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,385,"model.fit(x_train[:50], y_train_multi[:50], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,394,"model.fit(x_train[50:], y_train_multi[50:], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,404,"model.fit(x_train[50:], y_train_multi[50:], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,426,"model.fit(x_train, y_train_multi, x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,435,"model.fit(x_train[:50], y_train_multi_fake[:50], x_valid=None, y_valid=None, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,444,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,449,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,458,"model1.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,463,"model2.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,472,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,477,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,486,"model1.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,491,"model2.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,514,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,517,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,518,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,523,"preds = model.predict('test', return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,524,"preds_alternative = model.predict('test', return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,525,"self.assertEqual(preds, model.predict(['test'], return_proba=False, alternative_version=False)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,526,"self.assertEqual(preds_alternative, model.predict(['test'], return_proba=False, alternative_version=True)[0])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,535,"probas = model.predict(x_train, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,536,"probas_alternative = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,541,"probas = model.predict('test', return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,542,"probas_alternative = model.predict('test', return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,543,"self.assertEqual([elem for elem in probas], [elem for elem in model.predict(['test'], return_proba=True, alternative_version=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,544,"self.assertEqual([elem for elem in probas_alternative], [elem for elem in model.predict(['test'], return_proba=True, alternative_version=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,556,"model.fit(x_train, y_train_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,559,"preds = model.predict(x_train, return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,560,"preds_alternative = model.predict(x_train, return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,565,"preds = model.predict('test', return_proba=False, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,566,"preds_alternative = model.predict('test', return_proba=False, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,567,"self.assertEqual([elem for elem in preds], [elem for elem in model.predict(['test'], return_proba=False, alternative_version=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,568,"self.assertEqual([elem for elem in preds_alternative], [elem for elem in model.predict(['test'], return_proba=False, alternative_version=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,577,"probas = model.predict(x_train, return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,578,"probas_alternative = model.predict(x_train, return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,583,"probas = model.predict('test', return_proba=True, alternative_version=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,584,"probas_alternative = model.predict('test', return_proba=True, alternative_version=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,585,"self.assertEqual([elem for elem in probas], [elem for elem in model.predict(['test'], return_proba=True, alternative_version=False)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,586,"self.assertEqual([elem for elem in probas_alternative], [elem for elem in model.predict(['test'], return_proba=True, alternative_version=True)[0]])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_keras.py,597,model.predict('test')
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm_structured_attention.py,178,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm_structured_attention.py,197,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm_structured_attention.py,418,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm_structured_attention.py,459,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm_gru.py,165,"model.fit(x_train, y_train_mono)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/tests/test_model_embedding_lstm_gru.py,184,"model.fit(x_train, y_train_multi[cols])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name-scripts/2_training.py,298,"model.fit(x_train, y_train, x_valid=x_valid, y_valid=y_valid, with_shuffle=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name-scripts/2_training.py,330,"y_pred_train = model.predict(x_train, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name-scripts/2_training.py,335,"y_pred_valid = model.predict(x_valid, return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name-scripts/4_demonstrator.py,119,model.predict(['test'])
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name-scripts/3_predict.py,77,"y_pred = model.predict(df[preprocess_col], return_proba=False)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/model_class.py,167,"predicted_proba = self.predict(x_test, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/model_class.py,190,"predicted_proba = self.predict(x_test, return_proba=True)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/model_aggregation.py,244,"model.fit(x_train, y_train, x_valid=x_valid, y_valid=y_valid, with_shuffle=True, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/model_aggregation.py,326,"array_predict = np.array([sub_model['model'].predict(x_test, alternative_version=alternative_version) for sub_model in self.sub_models])"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/model_aggregation.py,344,"preds_or_probas = model.predict(x_test, return_proba=return_proba, alternative_version=alternative_version)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/utils_models.py,253,"df = df.assign(**pd.DataFrame(mlb.fit_transform(df[y_col]), columns=mlb.classes_))"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/utils_models.py,312,"predictions = model.predict(content, inference_batch_size=inference_batch_size, alternative_version=alternative_version)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/utils_models.py,491,"model_tmp.fit(**{**kwargs_fit, **{'x_train': x_train, 'y_train': y_train, 'x_valid': x_valid, 'y_valid': y_valid}})"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/utils_models.py,493,y_pred = model_tmp.predict(x_valid)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_sklearn/model_pipeline.py,88,"self.pipeline.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_sklearn/model_pipeline.py,124,return np.array(self.pipeline.predict(x_test))
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_sklearn/model_tfidf_sgdc.py,101,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_sklearn/model_tfidf_sgdc.py,107,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_sklearn/model_tfidf_lgbm.py,102,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_sklearn/model_tfidf_svm.py,99,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_sklearn/model_tfidf_svm.py,105,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_sklearn/model_tfidf_gbt.py,100,preds = self.pipeline.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_tensorflow/model_tfidf_dense.py,75,self.tfidf.fit(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_tensorflow/model_tfidf_dense.py,77,return self.tfidf.transform(x_train).todense()
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_tensorflow/model_tfidf_dense.py,89,return self.tfidf.transform(x_test).todense()
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_tensorflow/model_keras.py,299,fit_history = self.model.fit(  # type: ignore
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_nlp/nlp_project/package_name/models_training/models_tensorflow/model_keras.py,407,"return self.model.predict(x_test, batch_size=inference_batch_size, verbose=1)  # type: ignore"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_api/api_project/package_name/routers/functional.py,59,prediction = model.predict(**body)
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_api/api_project/package_name/model/model_gabarit.py,120,"return utils_models.predict(content, model=self._model, model_conf=self._model_conf,"
/Users/cba/Desktop/github_datascience_code/download_code/OSS-Pole-Emploi_gabarit/gabarit/template_api/api_project/package_name/model/model_base.py,85,"return self._model.predict(*args, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,27,count_train = count_vectorizer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,30,count_test = count_vectorizer.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,44,tfidf_train = tfidf_vectorizer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,47,tfidf_test = tfidf_vectorizer.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,66,tfidf_train = tfidf_vectorizer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,69,tfidf_test = tfidf_vectorizer.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,112,"nb_classifier.fit(count_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,115,pred = nb_classifier.predict(count_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,133,"nb_classifier.fit(tfidf_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,136,pred = nb_classifier.predict(tfidf_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,158,"nb_classifier.fit(tfidf_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Natural Language Processing Fundamentals in Python/Chapter 4 - Building a  fake news classifier.py,160,pred = nb_classifier.predict(tfidf_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 4 - Learning from the experts.py,22,text_features.fit(text_vector)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 4 - Learning from the experts.py,119,hashed_text = hashing_vec.fit_transform(text_data)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 2 - Exploring the raw data.py,49,"clf.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 2 - Exploring the raw data.py,52,"print(""Accuracy: {}"".format(clf.score(X_test, y_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 2 - Exploring the raw data.py,60,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 2 - Exploring the raw data.py,106,vec_alphanumeric.fit(df.Position_Extra)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 2 - Exploring the raw data.py,152,vec_basic.fit_transform(text_vector)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 2 - Exploring the raw data.py,158,vec_alphanumeric.fit_transform(text_vector)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,26,"pl.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,29,"accuracy = pl.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,46,"pl.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,49,"accuracy = pl.score(X_test,y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,64,"pl.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,67,"accuracy = pl.score(X_test,y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,84,just_text_data = get_text_data.fit_transform(sample_df)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,87,just_numeric_data = get_numeric_data.fit_transform(sample_df)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,127,"pl.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,130,"accuracy = pl.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,176,"pl.fit(X_train,y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,179,"accuracy = pl.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,206,"pl.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,209,"accuracy = pl.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,238,"pl.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Machine Learning with Experts-School Budgets/Chapter 3 - Improving your model.py,241,"accuracy = pl.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 1 - Classification.py,21,"knn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 1 - Classification.py,37,"knn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 1 - Classification.py,40,y_pred = knn.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 1 - Classification.py,43,new_prediction = knn.predict(X_new)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 1 - Classification.py,88,"knn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 1 - Classification.py,91,"print(knn.score(X_test, y_test))"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 1 - Classification.py,110,"knn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 1 - Classification.py,113,"train_accuracy[i] = knn.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 1 - Classification.py,116,"test_accuracy[i] = knn.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 2 - Regression.py,20,"reg.fit(X_fertility, y)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 2 - Regression.py,23,y_pred = reg.predict(prediction_space)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 2 - Regression.py,26,"print(reg.score(X_fertility, y))"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 2 - Regression.py,47,"reg_all.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 2 - Regression.py,50,y_pred = reg_all.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 2 - Regression.py,53,"print(""R^2: {}"".format(reg_all.score(X_test, y_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 2 - Regression.py,110,"lasso.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,20,"knn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,23,y_pred = knn.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,42,"logreg.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,45,y_pred = logreg.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,114,"logreg_cv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,142,"tree_cv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,173,"logreg_cv.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,201,"gm_cv.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,204,y_pred = gm_cv.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 3 - Fine-tuning your model.py,205,"r2 = gm_cv.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,111,"pipeline.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,114,y_pred = pipeline.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,156,"knn_scaled = pipeline.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,159,"knn_unscaled = KNeighborsClassifier().fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,162,"print('Accuracy with Scaling: {}'.format(knn_scaled.score(X_test, y_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,163,"print('Accuracy without Scaling: {}'.format(knn_unscaled.score(X_test, y_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,186,"cv.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,189,y_pred = cv.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,192,"print(""Accuracy: {}"".format(cv.score(X_test, y_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,220,"gm_cv.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Supervised Learning with scikit-learn/Chapter 4 - Preprocessing and pipelines.py,223,"r2 = gm_cv.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 2 - Visualization with hierarchical clustering and t-SNE.py,102,tsne_features = model.fit_transform(samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 2 - Visualization with hierarchical clustering and t-SNE.py,127,tsne_features = model.fit_transform(normalized_movements)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 4 - Discovering interpretable features.py,14,model.fit(articles)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 4 - Discovering interpretable features.py,17,nmf_features = model.transform(articles)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 4 - Discovering interpretable features.py,82,features = model.fit_transform(samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 4 - Discovering interpretable features.py,107,features = model.fit_transform(samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 4 - Discovering interpretable features.py,155,norm_features = pipeline.fit_transform(artists)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 3 - Decorrelating your data and dimension reduction.py,42,pca_features = model.fit_transform(grains)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 3 - Decorrelating your data and dimension reduction.py,73,points=model.fit(grains)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 3 - Decorrelating your data and dimension reduction.py,106,pipeline.fit(samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 3 - Decorrelating your data and dimension reduction.py,127,pca.fit(scaled_samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 3 - Decorrelating your data and dimension reduction.py,130,pca_features = pca.transform(scaled_samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 3 - Decorrelating your data and dimension reduction.py,145,csr_mat = tfidf.fit_transform(documents)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 3 - Decorrelating your data and dimension reduction.py,182,pipeline.fit(articles)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 3 - Decorrelating your data and dimension reduction.py,185,labels = pipeline.predict(articles)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 1 - Clustering for dataset exploration.py,18,model.fit(points)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 1 - Clustering for dataset exploration.py,21,labels = model.predict(new_points)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 1 - Clustering for dataset exploration.py,69,model.fit(samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 1 - Clustering for dataset exploration.py,88,labels = model.fit_predict(samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 1 - Clustering for dataset exploration.py,126,pipeline.fit(samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 1 - Clustering for dataset exploration.py,129,labels = pipeline.predict(samples)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 1 - Clustering for dataset exploration.py,157,pipeline.fit(movements)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Unsupervised Learning in Python/Chapter 1 - Clustering for dataset exploration.py,166,labels = pipeline.predict(movements)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 4 - Fine-tuning keras models.py,32,"model.fit(predictors, target)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 4 - Fine-tuning keras models.py,50,"hist = model.fit(predictors, target, validation_split=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 4 - Fine-tuning keras models.py,75,"model.fit(predictors, target, epochs=30, validation_split=0.3, callbacks=[early_stopping_monitor])"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 4 - Fine-tuning keras models.py,99,"model_1_training = model_1.fit(predictors, target, epochs=15, validation_split=0.2, callbacks=[early_stopping_monitor], verbose=False)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 4 - Fine-tuning keras models.py,102,"model_2_training = model_2.fit(predictors, target, epochs=15, validation_split=0.2, callbacks=[early_stopping_monitor], verbose=False)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 4 - Fine-tuning keras models.py,131,"model_1_training = model_1.fit(predictors, target, epochs=20, validation_split=0.4, callbacks=[early_stopping_monitor], verbose=False)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 4 - Fine-tuning keras models.py,134,"model_2_training = model_2.fit(predictors, target, epochs=20, validation_split=0.4, callbacks=[early_stopping_monitor], verbose=False)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 4 - Fine-tuning keras models.py,163,"model.fit(X, y, validation_split=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 3 -Building deep learning models with keras.py,69,"model.fit(predictors,target)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 3 -Building deep learning models with keras.py,97,"model.fit(predictors, target)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 3 -Building deep learning models with keras.py,110,"model.fit(predictors, target)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Deep Learning in Python/Chapter 3 -Building deep learning models with keras.py,113,predictions = model.predict(pred_data)
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Manipulating DataFrames with pandas/Chapter 4 - Grouping data.py,102,"standardized = gapminder_2010.groupby('region')['life','fertility'].transform(zscore)"
/Users/cba/Desktop/github_datascience_code/download_code/AmoDinho_datacamp-python-data-science-track/Manipulating DataFrames with pandas/Chapter 4 - Grouping data.py,124,titanic.age = by_sex_class.age.transform(impute_median)
/Users/cba/Desktop/github_datascience_code/download_code/Appointat_Chat-with-Document-s-using-ChatGPT-API-and-Text-Embedding/TraceTalk/handle_multiprocessing.py,28,chain.predict(
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/misc/preprocessing.py,33,x_num = imp.fit_transform(num)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/core/heatmap.py,157,"std_data = pd.DataFrame(scaler.fit_transform(data), columns=data.columns)"
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/core/clustering.py,241,"scaled_data = pd.DataFrame(scaler.fit_transform(data), columns=data.columns)"
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/core/clustering.py,367,kmeans.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/core/clustering.py,368,cluster_labels = kmeans.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/core/clustering.py,391,clusters = hdb.fit_predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/core/importance.py,94,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/dimensionality_reduction/dimensionality_reduction.py,130,reduc = pca.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/dimensionality_reduction/dimensionality_reduction.py,147,reduc = ipca.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/dimensionality_reduction/dimensionality_reduction.py,167,reduc = tsne.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/dimensionality_reduction/dimensionality_reduction.py,185,reduc = t_svd.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/dimensionality_reduction/dimensionality_reduction.py,203,reduc = pca.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/dimensionality_reduction/dimensionality_reduction.py,221,reduc = ipca.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/dimensionality_reduction/dimensionality_reduction.py,242,reduc = tsne.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/dimensionality_reduction/dimensionality_reduction.py,261,reduc = t_svd.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/text/text_preprocessing.py,237,matrix = tfidf.fit_transform(text_docs).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/text/text_preprocessing.py,254,matrix = countvec.fit_transform(text_docs).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/text/topic_modeling.py,65,topicwidget.fit(
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/text/topic_modeling.py,209,lsa_model.fit(self._matrix)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/text/topic_modeling.py,397,nmf_model.fit(self._matrix)
/Users/cba/Desktop/github_datascience_code/download_code/data-describe_data-describe/data_describe/text/topic_modeling.py,487,return self._model.transform(self._matrix)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,72,"trained = pipeline1.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,73,_ = trained.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,76,"trained = pipeline2.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,77,_ = trained.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,87,"trained_optimizer = optimizer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,88,_ = trained_optimizer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,97,"trained_optimizer = optimizer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,98,_ = trained_optimizer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,111,"trained_optimizer = optimizer.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,112,_ = trained_optimizer.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,175,"trained = smote.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,176,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,191,"trained = pipeline.fit(self.X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,192,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,202,"trained = pipeline.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,203,_ = trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,220,"trained = pipeline.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,221,_ = trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,247,"trained = pipeline.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_interoperability.py,248,_ = trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,79,"trained = fproc.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,80,_ = trained.transform(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,83,"trained = fproc.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,84,fproc.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,93,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,94,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,100,"trained = hyperopt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,101,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,138,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,139,_ = trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,157,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,158,_ = trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,173,trained = trainable.fit(X1)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,174,transformed = trained.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,190,"trained = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,191,_ = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,203,"trained = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,204,_ = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,221,"trained = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,222,_ = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,226,"opt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,237,"trained = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,238,_ = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,242,"opt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,265,"trained = hyperopt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,266,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,273,"trained_ohe = fproc_ohe.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,274,transformed_X = trained_ohe.transform(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,279,"trained_oe = fproc_oe.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,280,transformed_X = trained_oe.transform(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,289,"trained_oe = fproc_oe.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,293,_ = trained_oe.transform(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,300,"trained_oe = fproc_oe.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,301,transformed_X = trained_oe.transform(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,318,"_ = enc_auto.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,322,"_ = enc_auto.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,334,"trained_cf = trainable_cf.fit(X=[A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,335,"transformed: Any = trained_cf.transform([A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,351,"trained_cf = trainable_cf.fit(X=[A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,352,"transformed = trained_cf.transform([A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,371,"trained_cf = trainable_cf.fit(X=[A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,372,"transformed = trained_cf.transform([A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,394,"trained_cf = trainable_cf.fit(X=[A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,395,"transformed = trained_cf.transform([A, B]).toPandas()"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,417,"trained_cf = trainable_cf.fit(X=[A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,418,"transformed = trained_cf.transform([A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,438,"trained_cf = trainable_cf.fit(X=[A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,439,"transformed = trained_cf.transform([A, B]).toPandas()"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,505,"trained = trainable.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,506,_ = trained.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,521,"clf.fit(iris_data.data, iris_data.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,522,clf.predict(iris_data.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,537,"clf.fit(iris_data.data, iris_data.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,538,clf.predict(iris_data.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,548,"trained_cf = trainable_cf.fit(X=[A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,549,"transformed = trained_cf.transform([A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,553,"trained_cf = trainable_cf.fit(X=[A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_transformers.py,554,"transformed = trained_cf.transform([A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,501,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,511,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,521,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,531,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,578,"trained_remi = trainable_remi.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,595,"trained_orig = trainable_orig.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,596,"trained_remi = trainable_remi.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1163,csep_X = encoder_separate.transform(orig_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1167,cand_X = encoder_and.transform(orig_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1189,conv_X = encoder.transform(orig_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1203,csep_X = encoder_separate.transform(orig_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1207,cand_X = encoder_and.transform(orig_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1324,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1354,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1364,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1378,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1469,"trained_remi = trainable_remi.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1526,"trained_remi = trainable_remi.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1527,_ = trained_remi.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360.py,1626,"trained_remi = trainable_remi.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,75,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,76,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,82,"_ = trained.score(self.X_test, self.y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,100,"trained = hyperopt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,101,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,120,"grid_search.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,123,"trained = clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,124,clf.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,131,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,132,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,183,"trained = trainable.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,184,_ = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,189,"trained = trainable.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,209,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,210,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,219,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,220,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,288,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,289,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,297,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,298,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,336,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,343,"clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,369,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,370,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,376,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,377,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,423,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,427,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,431,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,435,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,439,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,443,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,447,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,451,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,455,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,459,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,463,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,467,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,471,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,475,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,479,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,483,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,487,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,491,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,495,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,499,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,503,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,507,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,511,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,515,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,531,"trained = trainable.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,532,_ = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,537,"trained = trainable.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,578,trained_lr = trainable_lr.fit(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,581,_ = trained_lr.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,588,trained_lr = trainable_lr.fit(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,600,trained_lr = trainable_lr.fit(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,617,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,642,"random_search.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,651,"trained = lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,663,"trained = lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,682,"trained = trainable.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,683,predictions = trained.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,701,trained = clf.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,702,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,716,trained = hyperopt.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,717,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,731,trained = hyperopt.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,750,trained = hyperopt.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,757,trained = clf.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,767,clf.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,786,trained = clf.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,787,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,798,trained = hyperopt.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_classifiers.py,799,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_grammar.py,45,"gtrained = gtrainer.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_grammar.py,53,"strained = strainer.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_grammar.py,82,"gtrained = gtrainer.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_grammar.py,90,"strained = strainer.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,209,spark_transformed_df = trainable.transform(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,230,pandas_transformed_df = trainable.transform(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,241,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,259,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,278,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,296,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,314,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,322,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,330,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,338,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,346,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,354,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,362,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,371,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,392,filtered_df = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,403,_ = trainable.transform(transformed_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,413,transformed = trained.transform(self.go_sales)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,420,transformed = trained.transform(self.go_sales)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,428,_ = trained.transform(self.go_sales[3])
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,433,_ = trained.transform(self.go_sales)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,452,transformed_df = trainable.transform(go_products)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,475,transformed = trained.transform(go_products)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,484,transformed = trained.transform(go_products)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,495,transformed = trained.transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,502,transformed = trained.transform(go_products)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,511,transformed = trained.transform(go_daily_sales)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,527,grouped_df = trainable.transform(go_products)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,531,df = _ensure_pandas(aggregate.transform(grouped_df))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,539,grouped_df = trainable.transform(go_products)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,543,df = _ensure_pandas(aggregate.transform(grouped_df))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,567,result = pipeline.transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,588,result = pipeline.transform(datasets[2])
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,603,result = pipeline.transform(datasets[2])
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,628,result = pipeline.transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,657,result = pipeline.transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,680,result = pipeline.transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,701,result = pipeline.transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,725,result = pipeline.transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,754,result = pipeline.transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,772,"_ = pipeline.transform(self.tgt2datasets[""pandas""])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,781,"_ = pipeline.transform(self.tgt2datasets[""pandas""])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,786,"_ = trainable.transform(pd.Series([1, 2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,860,"transformed_df = trainable.transform([df1, df2, df3])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,876,"transformed_df = trainable.transform([df4, df2, df3])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,892,"transformed_df = trainable.transform([df1, df2, df3])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,916,"transformed_df = trainable.transform([df1, df5, df3, df6])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,941,"transformed_df = trainable.transform([df1, df5, df3, df6])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,987,"# _ = trainable.transform([self.df1, self.df5, self.df3, self.df6])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1020,"_ = trainable.transform([df5, df3])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1033,transformed_df = trainable.transform(go_sales)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1065,_ = trainable.transform(go_sales)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1079,"transformed_df = trainable.transform([df1, df2, df3])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1097,"transformed_df = trainable.transform([df1, df2, df3])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1173,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1174,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1184,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1185,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1201,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1202,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1214,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1215,_ = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1218,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1219,_ = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1222,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1223,_ = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1226,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1227,_ = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1238,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1239,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1254,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1255,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1272,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1273,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1283,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1284,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1299,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1300,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1317,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1318,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1330,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1331,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1349,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1350,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1358,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1359,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1375,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1376,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1385,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1386,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1399,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1400,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1415,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1416,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1433,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1434,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1445,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1446,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1461,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1462,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1481,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1482,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1493,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1494,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1509,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1510,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1529,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1530,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1541,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1542,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1557,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1558,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1577,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1578,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1605,"trained = opt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1612,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1614,_ = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1772,"opt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1778,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1779,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1788,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1789,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1798,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1800,_ = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1806,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1807,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1816,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1817,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1826,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1828,_ = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1851,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1852,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1894,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1895,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1942,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1943,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1964,"result = pipeline.transform(datasets[""go_sales""])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,1987,"result = pipeline.transform(datasets[""go_sales""])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2004,result = pipeline.fit(datasets).transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2015,result = pipeline.fit(datasets).transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2060,result = pipeline.fit(datasets).transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2085,result = pipeline.fit(datasets).transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2097,result = pipeline.fit(datasets).transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2113,trained = pipeline.fit(pd_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2126,result = pipeline.fit(datasets).transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2150,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2180,transformed_df = pretrained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2199,transformed_df = transformer.transform(SparkDataFrameWithIndex(df))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2237,"trained_relational = relational.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2238,_ = trained_relational.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2254,"_ = relational.fit([X_train], y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2273,"trained_relational = relational.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2275,_ = trained_relational.transform([X_test])
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2296,"trained_pipeline = pipeline.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2297,_ = trained_pipeline.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2328,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2329,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2339,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2340,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2350,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2351,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2359,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2360,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2368,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2369,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2388,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2389,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2419,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2420,_ = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2430,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2431,_ = trained.predict(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2511,transformed_df = transformer.transform(go_products)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2520,transformed_df = transformer.transform(go_products)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2529,transformed_df = transformer.transform(go_products)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2538,tranformed_df = transformer.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2576,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2577,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2593,trained = trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational.py,2594,transformed_df = trained.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,183,"res = opt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,184,_ = res.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,195,"res = opt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,207,"res = opt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,219,"res = opt.fit(X[:500, :], y[:500])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,232,"_ = opt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,256,"_ = opt.fit(X[:500, :], y[:500])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,272,"_ = opt.fit(features, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,359,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,360,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,361,predictions_1 = clf.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,374,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,375,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,376,predictions_1 = clf.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,396,"_ = hoc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,417,"hoc_fitted = hoc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,437,"_ = hor.fit(X[:500, :], y[:500])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,458,"hor_fitted = hor.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,474,"trained = clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,475,predictions = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,489,"trained = clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,490,predictions = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,510,"trained = clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,511,predictions = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,532,"_ = hyperopt_classifier.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,552,"_ = hyperopt_classifier.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,560,predictions = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,571,"trained = clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,572,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,573,predictions_1 = clf.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,581,"trained = hyperopt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,582,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,583,predictions_1 = hyperopt.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,605,trained_optimizer = optimizer.fit(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,608,trained_optimizer.predict(train_x)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,634,_ = optimizer.fit(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,659,_ = best_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,667,_ = best.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,682,_ = best_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,697,_ = best_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,714,_ = best_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,735,_ = best_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,750,_ = best_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,765,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,766,clf.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,784,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,805,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,825,"_ = hoc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,851,"_ = hor.fit(X[:500, :], y[:500])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,953,"clf.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1019,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1035,"trained = ensemble.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1036,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1044,"trained = ensemble.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1045,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1054,"trained = ensemble.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1075,"_ = trainable_16.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1077,"trained_15 = trainable_15.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1078,_ = trained_15.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1090,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1099,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1110,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1127,"_ = trainable_16.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1129,"trained_15 = trainable_15.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1130,_ = trained_15.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1143,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1152,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1163,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1180,"_ = trainable_okay.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1184,"_ = trainable_bad.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1197,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1206,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1216,"trained_operator = lr.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1226,"res_last = opt_last.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1227,predictions = res_last.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1228,predictions_1 = opt_last.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1242,"res = opt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1258,"res_last = opt_last.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1259,predictions = res_last.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1260,predictions_1 = opt_last.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1268,"trained_pipeline = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1277,"res_last = opt_last.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1280,"trained_pipeline2 = pipeline2.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1281,_ = trained_pipeline2.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1287,"res = opt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1288,predictions = res.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_optimizers.py,1289,predictions_1 = opt.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_sklearn_compat.py,94,"op1.fit(X=[1, 2], y=[1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_sklearn_compat.py,96,"fit2 = op2.fit(X=[3, 4], y=[3, 4])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,307,trained = trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,308,transformed = trained.transform(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,341,trained = trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,342,transformed = trained.transform(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,698,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,842,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,858,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,874,"trainable.fit(self.regression_X, self.regression_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,889,"trainable.fit(self.regression_X, self.regression_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,905,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,921,"trainable.fit(self.regression_X, self.regression_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,938,"trainable.fit(bad_X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,943,"trainable.fit(bad_X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,956,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,978,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1000,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1017,"trainable.fit(self.regression_X, self.regression_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1029,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1045,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1063,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1082,"trainable.fit(bad_X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1087,"trainable.fit(bad_X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1101,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1125,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1143,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1159,"trainable.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1175,"trainable.fit(self.regression_X, self.regression_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1195,"trainable.fit(bad_X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1200,"trainable.fit(bad_X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1215,"trainable.fit(bad_X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1220,"trainable.fit(bad_X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1236,"trainable.fit(bad_X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1241,"trainable.fit(bad_X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1262,"trainable.fit(bad_X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1267,"trainable.fit(bad_X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1282,"trainable.fit(bad_X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1287,"trainable.fit(bad_X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1302,"trainable.fit(bad_X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1307,"trainable.fit(bad_X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1403,"_ = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1420,"trained = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1464,trained_pca = abc.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1465,trained_pca.transform(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1496,trained_pca = abc.fit(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1497,trained_pca.transform(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1518,"trained_pipeline = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1519,trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1541,"trained_pipeline = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_type_checking.py,1542,trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/mock_module.py,34,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,174,sk_trained = sk_scaler.fit(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,180,rasl_trained = rasl_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,187,sk_trained = sk_scaler.fit(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,188,sk_transformed = sk_trained.transform(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,194,rasl_trained = rasl_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,195,rasl_transformed = rasl_trained.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,213,sk_trained = sk_scaler.fit(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,214,sk_transformed = sk_trained.transform(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,220,rasl_trained = rasl_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,221,rasl_transformed = rasl_trained.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,238,sk_trained = sk_scaler.fit(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,239,sk_transformed = sk_trained.transform(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,242,data = Convert(astype=tgt).transform(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,243,rasl_trained = rasl_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,244,rasl_transformed = rasl_trained.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,252,sk_trained = sk_scaler.fit(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,258,rasl_trained = rasl_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,265,sk_trained = sk_scaler.fit(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,266,sk_transformed = sk_trained.transform(pandas_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,272,rasl_trained = rasl_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,273,rasl_transformed = rasl_trained.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,300,sk_trained = sk_scaler.fit(data_so_far)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,332,"trained = pipeline.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,333,_ = trained.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,334,_ = trained.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,386,"sk_trained = sk_trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,390,"rasl_trained = rasl_trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,396,"sk_trained = sk_trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,397,sk_transformed = sk_trained.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,401,"rasl_trained = rasl_trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,402,rasl_transformed = rasl_trained.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,420,"sk_trained = sk_trainable.fit(X_so_far, y_so_far)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,468,"sk_trained = sk_trainable.fit(self.tgt2gosales[""pandas""])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,470,rasl_trained = rasl_trainable.fit(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,477,"pandas_data = prefix.transform(self.tgt2gosales[""pandas""])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,483,sk_op = SkOrdinalEncoder(**encoder_args).fit(data_so_far)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,506,"sk_trained = sk_trainable.fit(self.tgt2gosales[""pandas""])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,507,"sk_transformed = sk_trained.transform(self.tgt2gosales[""pandas""])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,509,rasl_trained = rasl_trainable.fit(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,511,rasl_transformed = rasl_trained.transform(datasets)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,532,"sk_trained = sk_trainable.fit(train_X_pd, train_y_pd)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,533,sk_predicted = sk_trained.predict(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,537,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,538,rasl_predicted = rasl_trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,579,sk_trained = sk_trainable.fit(train_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,582,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,594,sk_pipe = sk_pipe.fit(data_so_far)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,620,sk_trained = sk_trainable.fit(train_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,621,sk_transformed = sk_trained.transform(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,624,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,626,rasl_transformed = rasl_trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,651,"sk_trained = sk_trainable.fit(train_X_pd, train_y_pd)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,652,sk_predicted = sk_trained.predict(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,656,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,657,rasl_predicted = rasl_trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,706,sk_trained = sk_trainable.fit(train_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,710,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,719,sk_trained = sk_trainable.fit(train_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,720,sk_transformed = sk_trained.transform(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,723,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,725,rasl_transformed = rasl_trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,745,"sk_trained = sk_trainable.fit(train_X_pd, train_y_pd)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,746,sk_predicted = sk_trained.predict(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,750,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,751,rasl_predicted = rasl_trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,800,"sk_trained = sk_trainable.fit(train_X_pd, train_y_pd)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,807,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,823,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,854,"sk_trained = sk_trainable.fit(train_X_pd, train_y_pd)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,855,sk_transformed = sk_trained.transform(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,862,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,866,rasl_transformed = rasl_trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,897,"sk_trained = sk_trainable.fit(train_X_pd, train_y_pd)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,898,sk_predicted = sk_trained.predict(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,902,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,903,rasl_predicted = rasl_trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,985,"sk_trained = sk_trainable.fit(self.tgt2adult[""pandas""][0][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,986,"sk_transformed = sk_trained.transform(self.tgt2adult[""pandas""][1][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,990,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1005,rasl_transformed = rasl_trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1035,"sk_trained = sk_trainable.fit(self.tgt2adult[""pandas""][0][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1036,"sk_transformed = sk_trained.transform(self.tgt2adult[""pandas""][1][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1040,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1051,rasl_transformed = rasl_trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1073,"sk_trained = sk_trainable.fit(train_X_pd, train_y_pd)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1074,sk_predicted = sk_trained.predict(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1078,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1079,rasl_predicted = rasl_trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1086,"sk_trainable.fit(self.tgt2adult[""pandas""][0][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1094,_ = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1105,"sk_trained = sk_trainable.fit(self.tgt2adult[""pandas""][0][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1106,"sk_transformed = sk_trained.transform(self.tgt2adult[""pandas""][1][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1110,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1116,rasl_transformed = rasl_trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1137,"sk_trained = sk_trainable.fit(self.tgt2adult[""pandas""][0][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1141,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1147,rasl_transformed = rasl_trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1164,sk_trained = sk_trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1165,rasl_trained = rasl_trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1172,rasl_trained = rasl_trainable.fit(spark_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1193,sk_trained = sk_trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1194,rasl_trained = rasl_trainable.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1204,rasl_trained = rasl_trainable.fit(spark_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1224,"sk_trained = sk_trainable.fit(self.tgt2adult[""pandas""][0][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1225,"sk_transformed = sk_trained.transform(self.tgt2adult[""pandas""][1][0])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1259,rasl_transformed = rasl_trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1335,sk_trained = sk_trainable.fit(train_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1339,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1349,sk_op = sk_op.fit(data_so_far)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1365,sk_trained = sk_trainable.fit(train_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1366,sk_transformed = sk_trained.transform(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1370,rasl_trained = rasl_trainable.fit(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1372,rasl_transformed = rasl_trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1408,"sk_trained = sk_trainable.fit(train_X_pd, train_y_pd)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1409,sk_predicted = sk_trained.predict(test_X_pd)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1413,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1414,rasl_predicted = rasl_trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1461,X = Project(columns=categorical()).fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1499,"sk_trained = sk_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1501,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1513,"sk_trained = sk_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1795,"sk_trained = sk_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1797,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1815,"sk_trained = sk_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1972,"sk_trained = sk_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1974,"rasl_trained = rasl_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,1992,"sk_trained = sk_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2056,X = Project(columns=categorical()).fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2080,"sk_trained = sk_trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2192,"est = LogisticRegression().fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2193,y_pred = est.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2205,"est = LogisticRegression().fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2206,y_pred = est.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2218,"est = LogisticRegression().fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2219,y_pred = est.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2232,"est = LogisticRegression().fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2233,y_pred = est.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2291,"trained = pipeline.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2292,_ = trained.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2302,"trained = hyperopt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2303,_ = trained.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2323,"grid_search.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2326,"trained = clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2327,clf.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2353,predictions = rasl_trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2357,"sk_pipeline.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2358,predictions = sk_pipeline.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2385,_ = est.predict(bX)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2392,_ = est.predict(bX)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2401,_ = est.predict(bX)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_sklearn.py,2408,_ = est.predict(bX)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pgo.py,73,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pgo.py,102,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_halving_gridsearchcv.py,52,_ = best_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_halving_gridsearchcv.py,74,"_ = hoc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_halving_gridsearchcv.py,99,"_ = hor.fit(X[:500, :], y[:500])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_halving_gridsearchcv.py,123,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_halving_gridsearchcv.py,124,clf.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_halving_gridsearchcv.py,146,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_halving_gridsearchcv.py,171,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_halving_gridsearchcv.py,196,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_halving_gridsearchcv.py,224,_ = trained.predict(self.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,93,"pipeline.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,98,"pipeline.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,104,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,110,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,142,"op2 = op.fit(iris_data.data[10:], iris_data.target[10:])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,169,"op2 = op.fit(iris_data.data[10:], iris_data.target[10:])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,186,"trained = trainable.fit([[3, 4], [5, 6]], fit_version=5)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,187,"_ = trained.predict([3, 4], predict_version=6)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,197,"trained = trainable.fit([[3, 4], [5, 6]], y=[3], fit_version=5)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,198,"_ = trained.predict([3, 4], predict_version=6)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,234,"trained = trainable.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,235,_ = trained.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,257,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,258,_ = trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,268,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,269,_ = trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,280,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,281,_ = trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,292,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,293,_ = trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,308,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,309,_ = trained.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,322,"trained_lr = lr.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,323,_ = trained_lr.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,404,"trained = lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,416,"vclf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,429,"vclf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,435,"lr_trained = lr_trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,496,"op: Ops.TrainedIndividualOp = op1.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,510,"op: Ops.TrainedIndividualOp = op1.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1127,"LogisticRegression.score(self.X_test, self.y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1131,"_ = trainable.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1132,"trainable.score(self.X_test, self.y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1138,"trained_lr = trainable.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1139,"score = trained_lr.score(self.X_test, self.y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1140,predictions = trained_lr.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1148,"trained_lr = trainable.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1151,"score = trained_lr.score(self.X_test, self.y_test, sample_weight=iris_weights)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1152,predictions = trained_lr.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1164,"op.fit(self.X, [])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1175,"planned.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1187,"planned.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1204,"planned.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_misc.py,1223,"planned.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_category_encoders.py,41,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_category_encoders.py,42,_ = trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_category_encoders.py,51,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_category_encoders.py,52,_ = trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,619,"liquid_old = trainable.fit(X, y_old)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,620,"self.assertEqual(list(liquid_old.predict(X)), list(y_old))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,621,"liquid_new = liquid_old.fit(X, y_new)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,622,"self.assertEqual(list(liquid_new.predict(X)), list(y_new))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,623,"frozen_old = trainable.fit(X, y_old).freeze_trained()"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,626,"self.assertEqual(list(frozen_old.predict(X)), list(y_old))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,627,"frozen_new = frozen_old.fit(X, y_new)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,628,"self.assertEqual(list(frozen_new.predict(X)), list(y_old))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,636,"liquid = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,649,"liquid = trainable.fit(X, y_old)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_custom_schemas.py,666,"liquid = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_nlp_operators.py,38,"trained = encoder.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_nlp_operators.py,39,_ = trained.transform(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,34,"fit_result = clf.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,47,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,62,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,77,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,92,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,107,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,122,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,155,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,166,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,177,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_snapml.py,188,"trained = trainable.fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,69,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,70,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,78,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,82,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,89,"orig_trained = orig_trainable.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,94,predictions = pre_trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,103,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,104,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,108,"trained = cloned_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,109,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,118,"trained = trainable.fit(digits.data, digits.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,119,_ = trained.predict(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,126,"trained = trainable.fit(digits.data, digits.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,127,_ = trained.predict(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,135,"trained = trainable.fit(digits.data, digits.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,136,_ = trained.predict(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,144,"trained = trainable.fit(digits.data, digits.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,145,_ = trained.predict(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,168,"lr_trained = lr.fit(digits.data, digits.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,169,lr_trained.predict(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,171,"pipeline1_trained = pipeline1.fit(digits.data, digits.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,172,pipeline1_trained.predict(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,182,"trained = trainable.fit(digits.data, digits.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,183,predicted = trained.predict(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,190,"sklearn_pipeline.fit(digits.data, digits.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,191,predicted_sklearn = sklearn_pipeline.predict(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,213,"trained = pipeline1.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,214,predictions1 = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,216,"trained = pipeline2.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,217,predictions2 = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,462,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,476,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,504,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,529,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,546,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,562,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,574,"sklearn_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,579,lale_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,596,lale_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,600,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,606,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,613,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,618,"trained_lale_pipeline = lale_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,637,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,638,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,648,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,649,trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,659,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,670,"pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,682,"pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,684,_ = pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,691,"trained = trainable.fit(digits.data, digits.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,692,_ = trained.transform(digits.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,710,"trained = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,711,y_pred = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,722,"trained = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,795,"trained = trainable.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,796,predicted = trained.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,845,"_ = lr_trainable.fit(with_missing_X, all_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,856,"_ = lr_trainable.fit(with_missing_X, all_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,880,"_ = tfm.fit(X, y)  # type: ignore"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,902,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,903,"score = trained_pipeline.score(self.X_test, self.y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,904,predictions = trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,911,"trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,912,"score = trainable_pipeline.score(self.X_test, self.y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,913,predictions = trainable_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,921,"planned_pipeline.score(self.X_test, self.y_test)  # type: ignore"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,935,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,940,"trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,951,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,967,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,972,"trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,983,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,989,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1005,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1010,_ = new_trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1014,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1022,_ = new_trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1031,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1041,_ = new_trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1045,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1055,_ = new_trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1059,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1067,_ = new_trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1071,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1079,_ = new_trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1084,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1092,_ = new_trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1097,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1109,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1116,_ = new_trained_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_pipeline.py,1121,"trained_pipeline = trainable_pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,79,>>> print(scaler.fit(data))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,83,>>> print(scaler.transform(data))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,88,">>> print(scaler.transform([[2, 2]]))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,93,sk_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,94,sk_transformed_data = sk_scaler.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,96,sk_transformed_X = sk_scaler.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,99,data = Convert(astype=target).transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,101,rasl_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,103,rasl_transformed_data = rasl_scaler.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,105,X = Convert(astype=target).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,106,rasl_transformed_X = rasl_scaler.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,121,>>> enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,125,">>> enc.transform([['Female', 3], ['Male', 1]])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,131,sk_enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,133,sk_transformed = sk_enc.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,136,X = Convert(astype=target).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,137,rasl_enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,138,data = Convert(astype=target).transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,139,rasl_transformed = rasl_enc.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,148,>>> enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,155,sk_transformed = sk_enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,158,X = Convert(astype=target).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,159,rasl_transformed = rasl_enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,168,>>> enc.set_params(encoded_missing_value=-1).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,192,">>> X_new = SelectKBest(chi2, k=20).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,199,sk_X_new = sk_selectkbest.fit_transform(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,203,X = Convert(astype=target).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,204,y = Convert(astype=target).transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,206,"rasl_X_new = rasl_selectkbest.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,221,>>> enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,225,">>> enc.transform([['Female', 1], ['Male', 4]]).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,236,sk_enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,238,sk_transformed_data = sk_enc.transform(data).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,242,X = Convert(astype=target).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,243,data = Convert(astype=target).transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,245,rasl_enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,246,rasl_transformed_data = rasl_enc.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,256,>>> drop_enc = OneHotEncoder(drop='first').fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,259,">>> drop_enc.transform([['Female', 1], ['Male', 2]]).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,268,>>> drop_binary_enc = OneHotEncoder(drop='if_binary').fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,269,">>> drop_binary_enc.transform([['Female', 1], ['Male', 2]]).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,280,">>> ohe = OneHotEncoder(max_categories=3, sparse=False).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,283,">>> ohe.transform([[""a""], [""b""]])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,301,">>> imp_mean.fit([[7, 2, 3], [4, np.nan, 6], [10, 5, 9]])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,304,>>> print(imp_mean.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,311,sk_imp_mean.fit(training)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,314,sk_transformed = sk_imp_mean.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,316,training = Convert(astype=target).transform(training)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,317,X = Convert(astype=target).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,319,rasl_imp_mean.fit(training)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,320,rasl_transformed = rasl_imp_mean.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,336,>>> print(scaler.fit(data))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,340,>>> print(scaler.transform(data))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,345,">>> print(scaler.transform([[2, 2]]))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,350,sk_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,351,sk_transformed_data = sk_scaler.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,353,sk_transformed_data2 = sk_scaler.transform(data2)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,355,data = Convert(astype=target).transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,356,data2 = Convert(astype=target).transform(data2)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,358,rasl_scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,359,rasl_transformed_data = rasl_scaler.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,360,rasl_transformed_data2 = rasl_scaler.transform(data2)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,382,">>> enc = TargetEncoder(cols=['CentralAir', 'Heating'], min_samples_leaf=20, smoothing=10).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,383,>>> numeric_dataset = enc.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,399,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,400,sk_transformed = sk_enc.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,408,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,409,X2 = Convert(astype=target).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,410,rasl_transformed = rasl_enc.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,419,">>> enc = TargetEncoder(verbose=1, smoothing=2, min_samples_leaf=2, hierarchy=hierarchical_map, cols=['compass']).fit(X.loc[:,['compass']], y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,420,">>> hierarchy_dataset = enc.transform(X.loc[:,['compass']])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,428,">>> enc = TargetEncoder(verbose=1, smoothing=2, min_samples_leaf=2, hierarchy=X[HIER_cols], cols=['postcode']).fit(X['postcode'], y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_relational_from_sklearn_manual.py,429,>>> hierarchy_dataset = enc.transform(X['postcode'])
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,65,"trained = regr.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,66,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,69,"_ = trained.score(self.X_test, self.y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,72,"trained = regr.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,73,regr.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,80,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,81,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,89,"trained = hyperopt.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,90,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,142,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,146,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,150,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,154,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,158,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,194,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,218,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,240,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,246,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_core_regressors.py,252,"reg.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/mock_custom_operators.py,33,output_X = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/mock_custom_operators.py,137,"result._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/mock_custom_operators.py,142,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/mock_custom_operators.py,320,"self._wrapped_model = self.pipeline.fit(pd.read_csv(X, header=None), y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/mock_custom_operators.py,327,"return self._wrapped_model.predict(pd.read_csv(X, header=None))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,47,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,48,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,54,X_transformed = trained_prep.transform(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,65,predictions = trained_clf.predict(trained_prep.transform(self.X_test))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,77,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,78,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,84,X_transformed = trained_prep.transform(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,95,predictions = trained_clf.predict(trained_prep.transform(self.X_test))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,107,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,108,lale_transforms = trained.transform(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,112,X_transformed = trained_prep.transform(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,116,sklearn_transforms = trained_clf.transform(trained_prep.transform(self.X_test))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,128,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,129,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,133,"_ = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,144,"trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,145,predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,151,X_transformed = trained_prep.transform(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,162,predictions = trained_clf.predict(trained_prep.transform(self.X_test))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,171,"#     trained = pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,172,#     predictions = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,199,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,200,predicted = clf.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,218,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,219,predicted = clf.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,238,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,239,_ = clf.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,261,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,262,_ = clf.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,278,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,279,_ = clf.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,295,_ = trained.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,318,"pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,319,predictions_before = pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,321,predictions_after = lale_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,323,predictions_after_1 = sklearn_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,334,"pipeline.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,337,lale_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_pipeline.py,340,sklearn_pipeline.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_autogen_lib.py,34,"trained_pipeline = clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_autogen_lib.py,35,trained_pipeline.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360_ensembles.py,61,"trained = model.fit(cls.train_X, cls.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/test/test_aif360_ensembles.py,62,trained.predict(cls.test_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,1072,"trained = optimizer_obj.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,1161,"return self.fit(X, y, **fit_params).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,2310,"# This allows the user, for example, to check isinstance(LR().fit(...), LR)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,2484,"raise ValueError(f""{self.name()}.fit() y cannot be None"")"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,2845,"trained_impl = trainable_impl.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,2847,"trained_impl = trainable_impl.fit(X, y, **filtered_fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,2977,"return self._trained.transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,2993,return self._trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,3042,"return self._trained.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,3044,"return self._trained.score(X, y, **score_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,3225,"return super().fit(X, y, **filtered_fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,3254,"raw_result = self._impl_instance().transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,3256,raw_result = self._impl_instance().transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,3289,"raw_result = self._impl_instance().predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,3379,"result = self._impl_instance().score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,3381,"result = self._impl_instance().score(X, y, **score_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,4358,"trained = trainable.fit(input_X, input_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,4360,trained = trainable.fit(input_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,4370,"output = trained.transform(input_X), input_y"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,4418,"return self._trained.transform(X, y=y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,4434,"return self._trained.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,4482,"return self._trained.score(X, y, **score_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,4620,"transformed_output = trained_pipeline_prefix.transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,4756,"output = operator.transform(input_X), input_y"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,4927,"batch_output = trained.transform(inputs, batch_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/operators.py,5064,"transformed_output = pipeline_prefix.transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/helpers.py,312,"trained = estimator.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/helpers.py,360,"trained_estimator = estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/helpers.py,361,predicted_values = trained_estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/datasets/openml/openml_datasets.py,759,X = preprocessing.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/datasets/openml/openml_datasets.py,789,y = labelencoder.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_logistic_regression.py,40,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_logistic_regression.py,45,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_svm_classifier.py,46,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_svm_classifier.py,51,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_boosting_machine_regressor.py,39,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_boosting_machine_regressor.py,44,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_decision_tree_regressor.py,37,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_decision_tree_regressor.py,42,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/batched_tree_ensemble_classifier.py,48,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/batched_tree_ensemble_classifier.py,53,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_linear_regression.py,40,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_linear_regression.py,45,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_decision_tree_classifier.py,37,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_decision_tree_classifier.py,42,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/batched_tree_ensemble_regressor.py,48,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/batched_tree_ensemble_regressor.py,53,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_random_forest_regressor.py,47,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_random_forest_regressor.py,52,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_boosting_machine_classifier.py,47,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_boosting_machine_classifier.py,52,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_random_forest_classifier.py,47,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/snapml/snap_random_forest_classifier.py,52,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_classifier.py,93,trained_le = trainable_le.fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_classifier.py,96,numeric_y = self._label_encoder.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_classifier.py,97,"self._wrapped_model.fit(renamed_X, numeric_y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_classifier.py,105,"return self.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_classifier.py,111,"numeric_result = self._wrapped_model.predict(renamed_X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_classifier.py,121,y_pred = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_regressor.py,75,"self._wrapped_model.fit(renamed_X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_regressor.py,83,"return self.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_regressor.py,87,"result = self._wrapped_model.predict(renamed_X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/xgboost/xgb_regressor.py,93,y_pred = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/concat_features.py,93,d1 = Alias(name=n1).transform(d1)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/concat_features.py,96,d2 = Alias(name=n2).transform(d2)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/concat_features.py,109,"return transformer.transform([d1, d2])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/concat_features.py,114,result = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/concat_features.py,267,">>> ConcatFeatures.transform([A, B])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/metrics.py,96,"predicted_batches = ((y, estimator.predict(X), X) for X, y in batches)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/metrics.py,111,"return self.score_data(y_true=y, y_pred=estimator.predict(X), X=X)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/metrics.py,151,agg_df = self._pipeline.transform(input_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/metrics.py,200,agg_df = self._pipeline.transform(input_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/metrics.py,261,agg_df = self._pipeline.transform(input_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/metrics.py,322,agg_df = self._pipeline.transform(input_df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/target_encoder.py,88,return self._transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/target_encoder.py,142,y = Map(columns={y_name: it[get_columns(y)[0]]}).transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/target_encoder.py,151,y = ordinal_encoder.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/target_encoder.py,155,y_aggregated = lale.helpers._ensure_pandas(y_aggregator.transform(y))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/target_encoder.py,158,"Xy = ConcatFeatures.transform([X, y])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/target_encoder.py,171,aggregated = lale.helpers._ensure_pandas(pipeline.transform(Xy))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/batching.py,143,"return self.transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/hashing_encoder.py,64,return self._transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/batched_bagging_classifier.py,50,return self.classifiers_list[0].predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/batched_bagging_classifier.py,54,classifier.predict(X) for classifier in self.classifiers_list
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/batched_bagging_classifier.py,76,"trained_classifier = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/select_k_best.py,57,return self._transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/standard_scaler.py,34,return StandardScaler(**kwargs).fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/standard_scaler.py,74,return self._transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/standard_scaler.py,130,sum1_data = lale.helpers._ensure_pandas(sum1_op.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/standard_scaler.py,138,sum2_data = lale.helpers._ensure_pandas(sum2_op.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/convert.py,76,result_X = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/sort_index.py,50,result_X = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/ordinal_encoder.py,74,return self._transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/ordinal_encoder.py,122,agg_data = agg_op.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/split_xy.py,32,result = self._project_y.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/split_xy.py,40,return self._project_X.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/split_xy.py,43,"return self.transform(X), self._extract_y(X)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/min_max_scaler.py,83,X_new = self._transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/min_max_scaler.py,148,data_min_max = aggregate.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/simple_imputer.py,142,agg_sum = agg_op_sum.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/simple_imputer.py,145,agg_count = agg_op_count.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/simple_imputer.py,195,agg_data = agg_op.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/simple_imputer.py,223,return self._transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/task_graphs.py,1205,"output_X, output_y = trained.transform(input_X), input_y"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/task_graphs.py,1208,y_pred = trained.predict(input_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/task_graphs.py,1253,"task.trained = trainable.fit(input_X, input_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/scores.py,144,"Xy = ConcatFeatures().transform([X, y])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/scores.py,145,X_by_y = GroupBy(by=[it[get_columns(y)[0]]]).transform(Xy)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/scores.py,148,sums_samples = _ensure_pandas(agg_sum_cols.transform(X_by_y))
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/scores.py,151,).transform(X_by_y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/scores.py,153,"Aggregate(columns={""sum"": agg_sum(it[""n_samples_per_class""])}).transform("
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/scores.py,158,ss_alldata = _ensure_pandas((sqr_cols >> agg_sum_cols).transform(X)).loc[0]
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/scores.py,159,sums_alldata = _ensure_pandas(agg_sum_cols.transform(X)).loc[0].to_numpy()
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/one_hot_encoder.py,77,return self._transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/one_hot_encoder.py,117,agg_data = agg_op.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/project.py,259,result = m.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/project.py,305,self.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/rasl/project.py,495,>>> keep_numbers.fit(df).transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/select_k_best.py,29,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/select_k_best.py,38,result = self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/bagging_regressor.py,52,"self._wrapped_model.fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/bagging_regressor.py,57,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/bagging_regressor.py,60,"return self._wrapped_model.score(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ordinal_encoder.py,55,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ordinal_encoder.py,64,result = self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ordinal_encoder.py,70,result = self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/tfidf_vectorizer.py,34,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/tfidf_vectorizer.py,40,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ada_boost_regressor.py,63,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ada_boost_regressor.py,65,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ada_boost_regressor.py,69,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ada_boost_regressor.py,72,"return self._wrapped_model.score(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/simple_imputer.py,40,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/simple_imputer.py,44,").fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/simple_imputer.py,50,result = self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/pipeline.py,55,"self._pipeline = self._pipeline.fit(X, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/pipeline.py,57,"self._pipeline = self._pipeline.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/pipeline.py,63,"result = self._pipeline.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/pipeline.py,74,result = self._pipeline.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/pipeline.py,76,"result = self._pipeline.transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/stacking_classifier.py,28,"return super().predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/stacking_classifier.py,34,"return super().score(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/logistic_regression.py,440,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/logistic_regression.py,444,"message = f'Caught AttributeError(""{str(e)}"") during LogisticRegression.fit(..) call, scipy version {scipy.__version__}, sklearn version {lale.operators.sklearn_version}, solver {self._wrapped_model.solver}, max_iter {self._wrapped_model.max_iter}. Retrying with solver ""saga"".'"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/logistic_regression.py,448,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/logistic_regression.py,453,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/logistic_regression.py,465,"return self._wrapped_model.score(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/bagging_classifier.py,51,"self._wrapped_model.fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/bagging_classifier.py,56,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/bagging_classifier.py,68,"return self._wrapped_model.score(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/stacking_regressor.py,28,"return super().predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/stacking_regressor.py,31,"return super().score(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/one_hot_encoder.py,146,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/one_hot_encoder.py,152,result = self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/fit_spec_proxy.py,31,"return self._base.fit(X, y, sample_weight=sample_weight, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ada_boost_classifier.py,63,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ada_boost_classifier.py,65,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ada_boost_classifier.py,69,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/sklearn/ada_boost_classifier.py,81,"return self._wrapped_model.score(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/category_encoders/target_encoder.py,187,trained_le = trainable_le.fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/category_encoders/target_encoder.py,188,numeric_y = trained_le.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/category_encoders/target_encoder.py,189,"self._wrapped_model.fit(X, numeric_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/category_encoders/target_encoder.py,195,result = self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/category_encoders/hashing_encoder.py,135,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/category_encoders/hashing_encoder.py,141,result = self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lightgbm/lgbm_classifier.py,46,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lightgbm/lgbm_classifier.py,56,"return self.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lightgbm/lgbm_classifier.py,59,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lightgbm/lgbm_classifier.py,67,y_pred = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lightgbm/lgbm_regressor.py,44,"self._wrapped_model.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lightgbm/lgbm_regressor.py,54,"return self.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lightgbm/lgbm_regressor.py,57,"return self._wrapped_model.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lightgbm/lgbm_regressor.py,62,y_pred = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/additive_chi2_sampler.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/additive_chi2_sampler.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/additive_chi2_sampler.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/bernoulli_nb.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/bernoulli_nb.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/bernoulli_nb.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_cv.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_cv.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_cv.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/radius_neighbors_regressor.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/radius_neighbors_regressor.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/radius_neighbors_regressor.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/factor_analysis.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/factor_analysis.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/factor_analysis.py,23,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ridge_classifier_cv.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ridge_classifier_cv.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ridge_classifier_cv.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/elastic_net.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/elastic_net.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/elastic_net.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/perceptron.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/perceptron.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/perceptron.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/huber_regressor.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/huber_regressor.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/huber_regressor.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_elastic_net.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_elastic_net.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_elastic_net.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_lars_ic.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_lars_ic.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_lars_ic.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ridge_cv.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ridge_cv.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ridge_cv.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/plssvd.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/plssvd.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/plssvd.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/linear_discriminant_analysis.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/linear_discriminant_analysis.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/linear_discriminant_analysis.py,23,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/linear_discriminant_analysis.py,26,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_lars.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_lars.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_lars.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ard_regression.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ard_regression.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ard_regression.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/kernel_pca.py,16,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/kernel_pca.py,18,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/kernel_pca.py,22,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/gaussian_process_classifier.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/gaussian_process_classifier.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/gaussian_process_classifier.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/calibrated_classifier_cv.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/calibrated_classifier_cv.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/calibrated_classifier_cv.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_lars_cv.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_lars_cv.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso_lars_cv.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/bayesian_ridge.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/bayesian_ridge.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/bayesian_ridge.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/random_trees_embedding.py,19,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/random_trees_embedding.py,21,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/random_trees_embedding.py,25,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/rbf_sampler.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/rbf_sampler.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/rbf_sampler.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lars.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lars.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lars.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/fast_ica.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/fast_ica.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/fast_ica.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/incremental_pca.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/incremental_pca.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/incremental_pca.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_spreading.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_spreading.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_spreading.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/complement_nb.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/complement_nb.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/complement_nb.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/orthogonal_matching_pursuit.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/orthogonal_matching_pursuit.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/orthogonal_matching_pursuit.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/kernel_ridge.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/kernel_ridge.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/kernel_ridge.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/sparse_random_projection.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/sparse_random_projection.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/sparse_random_projection.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/nu_svr.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/nu_svr.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/nu_svr.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_binarizer.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_binarizer.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_binarizer.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/sparse_pca.py,16,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/sparse_pca.py,18,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/sparse_pca.py,22,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/orthogonal_matching_pursuit_cv.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/orthogonal_matching_pursuit_cv.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/orthogonal_matching_pursuit_cv.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/truncated_svd.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/truncated_svd.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/truncated_svd.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_lasso.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_lasso.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_lasso.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_encoder.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_encoder.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_encoder.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/dictionary_learning.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/dictionary_learning.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/dictionary_learning.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_label_binarizer.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_label_binarizer.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_label_binarizer.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/latent_dirichlet_allocation.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/latent_dirichlet_allocation.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/latent_dirichlet_allocation.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_sparse_pca.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_sparse_pca.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_sparse_pca.py,23,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/pls_regression.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/pls_regression.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/pls_regression.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/pls_regression.py,24,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/bernoulli_rbm.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/bernoulli_rbm.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/bernoulli_rbm.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/k_bins_discretizer.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/k_bins_discretizer.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/k_bins_discretizer.py,23,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_dictionary_learning.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_dictionary_learning.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_dictionary_learning.py,23,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/max_abs_scaler.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/max_abs_scaler.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/max_abs_scaler.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_elastic_net_cv.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_elastic_net_cv.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_elastic_net_cv.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/pls_canonical.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/pls_canonical.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/pls_canonical.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/pls_canonical.py,24,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/passive_aggressive_regressor.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/passive_aggressive_regressor.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/passive_aggressive_regressor.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/birch.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/birch.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/birch.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/birch.py,24,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ransac_regressor.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ransac_regressor.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/ransac_regressor.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/nearest_centroid.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/nearest_centroid.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/nearest_centroid.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/power_transformer.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/power_transformer.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/power_transformer.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/radius_neighbors_classifier.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/radius_neighbors_classifier.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/radius_neighbors_classifier.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_lasso_cv.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_lasso_cv.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/multi_task_lasso_cv.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/transformed_target_regressor.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/transformed_target_regressor.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/transformed_target_regressor.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lasso.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mlp_regressor.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mlp_regressor.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mlp_regressor.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/logistic_regression_cv.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/logistic_regression_cv.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/logistic_regression_cv.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/nu_svc.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/nu_svc.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/nu_svc.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/gaussian_process_regressor.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/gaussian_process_regressor.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/gaussian_process_regressor.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/skewed_chi2_sampler.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/skewed_chi2_sampler.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/skewed_chi2_sampler.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lars_cv.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lars_cv.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/lars_cv.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/theil_sen_regressor.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/theil_sen_regressor.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/theil_sen_regressor.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_propagation.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_propagation.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/label_propagation.py,21,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_k_means.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_k_means.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_k_means.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/mini_batch_k_means.py,24,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/cca.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/cca.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/cca.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/cca.py,24,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/binarizer.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/binarizer.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/binarizer.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/locally_linear_embedding.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/locally_linear_embedding.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/locally_linear_embedding.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/gaussian_random_projection.py,15,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/gaussian_random_projection.py,17,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/gaussian_random_projection.py,21,return self._wrapped_model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/elastic_net_cv.py,17,"self._wrapped_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/elastic_net_cv.py,19,self._wrapped_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/autogen/elastic_net_cv.py,23,return self._wrapped_model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/imblearn/base_resampler.py,34,"self.trained_operator = op.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/imblearn/base_resampler.py,41,"return self.trained_operator.transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/imblearn/base_resampler.py,45,"return self.trained_operator.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/imblearn/adasyn.py,52,"self.trained_operator = op.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/imblearn/smotenc.py,53,"return super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/hyperopt.py,185,"trained = trainable.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/hyperopt.py,316,"predictions = trained.predict(X_eval, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/hyperopt.py,420,"trained = trainable.fit(X_train_part, y_train_part, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/hyperopt.py,447,"trained = trainable.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/hyperopt.py,620,">>> trained = clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/hyperopt.py,621,>>> predictions = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/grid_search_cv.py,171,"self.grid.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/grid_search_cv.py,194,"self._best_estimator = be.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/grid_search_cv.py,199,"return self._best_estimator.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/topk_voting_classifier.py,58,"trained_optimizer1 = optimizer_instance.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/topk_voting_classifier.py,81,"trained_optimizer2 = optimizer_instance2.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/topk_voting_classifier.py,96,"predictions = trained.predict(X_eval, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/halving_grid_search_cv.py,189,"self.grid.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/halving_grid_search_cv.py,212,"self._best_estimator = be.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/halving_grid_search_cv.py,217,"return self._best_estimator.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/optimize_suffix.py,67,X_train_transformed = self._prefix.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/optimize_suffix.py,75,"self._optimizer = self._optimizer.fit(X_train_transformed, y_train, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/optimize_suffix.py,95,X_input = self._prefix.transform(X_eval)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/optimize_suffix.py,96,"return self._optimizer.predict(X_input, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/auto_pipeline.py,168,"self._pipelines[name] = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/auto_pipeline.py,243,"trained = trainable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/auto_pipeline.py,280,"result = best_pipeline.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/identity_wrapper.py,32,"return self.getOp().transform(X, y=y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/identity_wrapper.py,41,"return self.getOp().predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/identity_wrapper.py,47,"self._hyperparams[""op""] = self.getOp().fit(X, y=y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/optimize_last.py,66,"self._suffix_optimizer = self._suffix_optimizer.fit(X_train, y_train, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/optimize_last.py,70,"return self._suffix_optimizer.predict(X_eval, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/observing.py,79,"ret = self.getOp().transform(X, y=y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/observing.py,93,"return self.getOp().predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/observing.py,101,"self._hyperparams[""op""] = self.getOp().fit(X, y=y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/both.py,45,"return self.getPipeline().transform(X, y=y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/both.py,51,"return self.getPipeline().predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/both.py,57,"self._pipeline = self.getPipeline().fit(X, y=y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/smac.py,139,"trained = trainable.fit(X_train_part, y_train_part, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/smac.py,182,"trained = trainable.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/smac.py,204,"predictions = trained.predict(X_eval, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/smac.py,345,">>> trained = clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/lale/smac.py,346,>>> predictions = trained.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,76,reweighing_trained = reweighing_trainable.fit(encoded_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,77,reweighted_data = reweighing_trained.transform(encoded_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,81,self.redacting = redacting_trainable.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,84,redacted_X = self.redacting.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,89,"trained_prefix = trainable_prefix.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,90,transformed_X = trained_prefix.transform(redacted_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,91,trained_suffix = trainable_suffix.fit(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,96,self.estimator = self.estimator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,102,redacted_X = self.redacting.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/reweighing.py,103,"result = self.estimator.predict(redacted_X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/optim_preproc.py,103,self._wrapped_model.fit(encoded_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/optim_preproc.py,104,self._redacting = self._redacting.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/optim_preproc.py,109,remediated_data = self._wrapped_model.transform(encoded_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/optim_preproc.py,111,redacted_X = self._redacting.transform(remediated_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,441,"prepared_X = self.redact_and_prep.transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,475,"self.redact_and_prep = trainable_redact_and_prep.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,487,self.mitigator.fit(encoded_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,497,"result_data = self.mitigator.predict(encoded_data, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,505,result_data = self.mitigator.predict(encoded_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,554,"self.redact_and_estim = trainable_redact_and_estim.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,568,predicted_y = self.redact_and_estim.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,576,"self.mitigator = self.mitigator.fit(dataset_true, dataset_pred)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,585,predicted_y = self.redact_and_estim.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,592,dataset_out = self.mitigator.predict(dataset_pred)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,598,predicted_y = self.redact_and_estim.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,605,dataset_out = self.mitigator.predict(dataset_pred)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,862,"return self.score_data(y_true=y, y_pred=estimator.predict(X), X=X)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,926,"agg_df = _ensure_pandas(pipeline.transform([encoded_X, y_pred]))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,1009,"agg_df = _ensure_pandas(pipeline.transform([encoded_X, y_true, y_pred]))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/util.py,1652,"return self.score_data(y_true=y, y_pred=estimator.predict(X), X=X)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/lfr.py,66,"prepared_X = self.redact1_and_prep.transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/lfr.py,80,mitigated_data = self.mitigator.transform(encoded_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/lfr.py,94,"self.redact1_and_prep = trainable_redact1_and_prep.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/lfr.py,106,self.mitigator.fit(encoded_data)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/lfr.py,108,self.redact2 = redacting.fit(mitigated_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/lfr.py,114,redacted_X = self.redact2.transform(mitigated_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/disparate_impact_remover.py,59,"prepared_X = self.redact_and_prep.transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/disparate_impact_remover.py,95,"self.redact_and_prep = trainable_redact_and_prep.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/bagging_orbis_classifier.py,86,self.lab_enc = sklearn.preprocessing.LabelEncoder().fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/bagging_orbis_classifier.py,88,"self.lab_enc.transform(self.fairness_info[""favorable_labels""])"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/bagging_orbis_classifier.py,126,"encoded_y = pd.Series(self.lab_enc.transform(y), index=y.index)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/bagging_orbis_classifier.py,127,"self.trained_ensemble = trainable_ensemble.fit(X, encoded_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/bagging_orbis_classifier.py,134,"encoded_y = self.trained_ensemble.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/adversarial_debiasing.py,101,"super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/adversarial_debiasing.py,103,"super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,60,encoded_X = prot_attr_enc.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,61,lab_enc = sklearn.preprocessing.LabelEncoder().fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,62,"encoded_y = pd.Series(lab_enc.transform(y), index=y.index)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,68,"fav_set = set(lab_enc.transform(fairness_info[""favorable_labels""]))"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,208,self.redacting = Redacting(**self.fairness_info).fit(resampled_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,211,redacted_X = self.redacting.transform(resampled_X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,212,"self.estimator = self.estimator.fit(redacted_X, resampled_y)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,216,redacted_X = self.redacting.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,217,"result = self.estimator.predict(redacted_X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/IBM_lale/lale/lib/aif360/orbis.py,221,redacted_X = self.redacting.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/customers/customers.py,61,kmeans.fit(df[[metric_column]])
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/customers/customers.py,65,df[initial_cluster] = kmeans.predict(df[[metric_column]]) + 1
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/customers/customers.py,235,['order_date'].transform('min').dt.to_period(period))
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/customers/customers.py,431,"bgf.fit(df['frequency'], df['recency'], df['T'])"
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/customers/customers.py,460,"ggf.fit(df_returning['frequency'],"
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/customers/customers.py,499,"ggf.fit(df_returning['frequency'],"
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/customers/customers.py,503,"bgf.fit(df_returning['frequency'],"
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/products/products.py,98,"df['times_purchased'] = df.groupby(['sku', 'customer_id'])['order_id'].transform('count')"
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/products/products.py,102,groupby('sku')['order_id'].transform('count')
/Users/cba/Desktop/github_datascience_code/download_code/practical-data-science_ecommercetools/ecommercetools/products/products.py,107,groupby('sku')['order_id'].transform('count')
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends_server.py,514,pred_input_scaled = scaler.transform(pred_input)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends_server.py,519,prediction_result = model.predict(pred_input_scaled)[0]
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends_server.py,521,prediction_result = float(model.predict(pred_input_scaled)[0][0])
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,540,x_train_ = scale.fit_transform(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,543,x_train_ = scale.fit_transform(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,546,x_train_ = scale.fit_transform(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,549,x_train_ = scale.fit_transform(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,552,x_train_ = scale.fit_transform(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,555,x_train_ = scale.fit_transform(x_train)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,579,x_test_ = scale.transform(x_tests[j])
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,585,"history = model.fit(x_train_, dummy_y,"
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,627,x_test_ = scale.transform(x_tests[j])
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,631,"history = model.fit(x_train_, y_trains[j],"
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,636,predictions  = model.predict(x_test_)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,712,"model.fit(x_train_, dummy_y, epochs=epochs, batch_size=batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,742,"model.fit(x_train_, y_train, epochs=epochs, batch_size=batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,776,"model.fit(x_train_, y_train_)"
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,810,"model.fit(x_train_, y_train_)"
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,994,"model.fit(x_train_, y_train_)"
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,1123,"model.fit(x_train_, y_train_)"
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/ascends.py,1213,"history = model.fit(x_train, y_train,"
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/predict.py,69,data = scaler.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/predict.py,81,outcome = model.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/predict.py,91,outcome_prob = model.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/ornlpmcp_ASCENDS/predict.py,93,outcome = model.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/ildoonet_data-science-bowl-2018/kmeans_clustering.py,26,kmeans.fit(features)
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/tests/test_estimator.py,101,output = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/tests/test_estimator.py,106,output = model.predict()
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/heamy/feature.py,118,woe_vals = df.groupby(feature_name)[target_name].transform(group_woe)
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/heamy/feature.py,149,return df.groupby(feature_name)[target_name].transform(group_mean)
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/heamy/feature.py,161,"f_train = model.predict(xgb.DMatrix(X_train), pred_leaf=True)"
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/heamy/feature.py,162,"f_test = model.predict(xgb.DMatrix(X_test), pred_leaf=True)"
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/heamy/feature.py,164,enc.fit(f_train)
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/heamy/feature.py,165,"return enc.transform(f_train), enc.transform(f_test)"
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/heamy/pipeline.py,269,results.append(model.predict())
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/heamy/estimator.py,113,"estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/rushter_heamy/heamy/estimator.py,117,result = estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/SciTools_iris/lib/iris/_shapefiles.py,166,"trans_geometry = shapely.transform(trans_geometry, _trans_func)"
/Users/cba/Desktop/github_datascience_code/download_code/SciTools_iris/lib/iris/fileformats/rules.py,54,attributes = self.transform(final_cube)
/Users/cba/Desktop/github_datascience_code/download_code/thomhopmans_pythom/7_data_science_in_python/run_business_case_solver.py,113,logistic_regression_results = logit.fit()
/Users/cba/Desktop/github_datascience_code/download_code/thomhopmans_pythom/7_data_science_in_python/run_business_case_solver.py,121,y_hat = logistic_regression_results.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/thomhopmans_pythom/11_support_vector_machines/svm_2d.py,50,"clf.fit(df[features], df[""target""])"
/Users/cba/Desktop/github_datascience_code/download_code/thomhopmans_pythom/5_content_based_recommender/run.py,137,self.X_title = vectorizer.fit_transform(self.df['title'])
/Users/cba/Desktop/github_datascience_code/download_code/thomhopmans_pythom/5_content_based_recommender/run.py,152,self.X_content = vectorizer.fit_transform(self.df['content_text'])
/Users/cba/Desktop/github_datascience_code/download_code/thomhopmans_pythom/5_content_based_recommender/run.py,201,reducer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/thomhopmans_pythom/5_content_based_recommender/run.py,202,X = reducer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/thomhopmans_pythom/1_optimize_media_spend/run.py,162,ols_result = ols_model.fit()            # Fit model
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/groupby_model.py,37,"model.fit(X.loc[rows, columns], y[mask], **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/groupby_model.py,64,"y_pred[mask] = model.predict(X.loc[rows, columns])"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/lgbm_cv.py,69,y += model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/localized_ensemble.py,54,self.nn_.fit(self.X_val_)
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/localized_ensemble.py,57,"self.ensemble.fit(X_fit, y_fit)"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,40,lb = preprocessing.LabelBinarizer().fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,57,"model.fit(X_fit, y_fit, **fit_params.get(name, {}))"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,69,val_pred = model.predict(X_val)
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,87,"self.meta_model.fit(meta_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,91,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,106,meta_features = np.transpose([model.predict(X) for model in self.models.values()])
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,113,return self.meta_model.predict(meta_features)
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,175,lb = preprocessing.LabelBinarizer().fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,194,"instance = instance.fit(X_fit, y_fit, **fit_handler(X_fit, y_fit, X_val, y_val))"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,207,val_pred = instance.predict(X_val)
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,226,"self.meta_model  = self.meta_model.fit(meta_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,252,"np.mean([instance.predict(X) for instance in self.instances_[name]], 0)"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/ensemble/stacking.py,261,return self.meta_model.predict(meta_features)
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/linear_model/auc_regressor.py,17,"initial_coef = lr.fit(X, y).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/error_analysis/binary_classification.py,22,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/nlp/nb_svm.py,10,return super().predict(X.multiply(self.r_))
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/nlp/nb_svm.py,25,"return super().fit(X.multiply(self.r_), y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/preprocessing/groupby_transformer.py,40,"transformer.fit(X.loc[rows, columns], y[mask], **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/preprocessing/groupby_transformer.py,66,"X.loc[rows, columns] = transformer.transform(X.loc[rows, columns])"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/preprocessing/groupby_transformer.py,92,"X.loc[rows, columns] = transformer.fit_transform("
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/preprocessing/resampling.py,19,self.binner.fit(X[[self.column]])
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/preprocessing/resampling.py,21,"self.binner.fit(X[:, self.column].values.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/preprocessing/resampling.py,26,"bins = self.binner.transform(X[[self.column]])[:, 0]"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/preprocessing/resampling.py,28,"bins = self.binner.transform(X[:, self.column].values.reshape(-1, 1))[:, 0]"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/preprocessing/resampling.py,57,"#ewb.fit(test.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/MaxHalford_xam/xam/preprocessing/resampling.py,58,"#train_bins = ewb.transform(train.reshape(-1, 1))[:, 0]"
/Users/cba/Desktop/github_datascience_code/download_code/automl_CAAFE/caafe/caafe_evaluate.py,83,"method.fit(X=x, y=y.long())"
/Users/cba/Desktop/github_datascience_code/download_code/automl_CAAFE/caafe/sklearn_wrapper.py,76,return self.fit(
/Users/cba/Desktop/github_datascience_code/download_code/automl_CAAFE/caafe/sklearn_wrapper.py,163,"self.base_classifier.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/automl_CAAFE/caafe/sklearn_wrapper.py,204,return self.base_classifier.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/automl_CAAFE/caafe/feature_extension_baselines.py,68,df_train[col] = encoder.fit_transform(df_train[[col]]).ravel()
/Users/cba/Desktop/github_datascience_code/download_code/automl_CAAFE/caafe/feature_extension_baselines.py,69,df_test[col] = encoder.transform(df_test[[col]]).ravel()
/Users/cba/Desktop/github_datascience_code/download_code/automl_CAAFE/caafe/feature_extension_baselines.py,79,"df_train = classifier.fit_transform(df_train, target_train.astype(""int""))"
/Users/cba/Desktop/github_datascience_code/download_code/automl_CAAFE/caafe/feature_extension_baselines.py,80,df_test = classifier.transform(df_test)
/Users/cba/Desktop/github_datascience_code/download_code/microsoft_presidio-research/tests/test_crf_model.py,26,crf_model.fit(train)
/Users/cba/Desktop/github_datascience_code/download_code/microsoft_presidio-research/tests/test_presidio_analyzer_wrapper.py,53,prediction = model.predict(sample)
/Users/cba/Desktop/github_datascience_code/download_code/microsoft_presidio-research/presidio_evaluator/models/flair_train.py,155,tagger.predict(sentence)
/Users/cba/Desktop/github_datascience_code/download_code/microsoft_presidio-research/presidio_evaluator/models/flair_train.py,219,tagger.predict(sentence)
/Users/cba/Desktop/github_datascience_code/download_code/microsoft_presidio-research/presidio_evaluator/models/flair_model.py,54,self.model.predict(sentence)
/Users/cba/Desktop/github_datascience_code/download_code/microsoft_presidio-research/presidio_evaluator/models/crf_model.py,75,"self.model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/microsoft_presidio-research/presidio_evaluator/models/crf_model.py,100,return model.predict([features])[0]
/Users/cba/Desktop/github_datascience_code/download_code/microsoft_presidio-research/presidio_evaluator/evaluation/evaluator.py,166,prediction = self.model.predict(sample)
/Users/cba/Desktop/github_datascience_code/download_code/samuelschen_DSB2018/dataset.py,99,sample = self.transform(sample)
/Users/cba/Desktop/github_datascience_code/download_code/samuelschen_DSB2018/dataset.py,201,"image, label, label_c, label_m = [ElasticDistortion.transform(x, indices) for x in (image, label, label_c, label_m)]"
/Users/cba/Desktop/github_datascience_code/download_code/samuelschen_DSB2018/dataset.py,203,"pil_masks = [ElasticDistortion.transform(m, indices) for m in pil_masks]"
/Users/cba/Desktop/github_datascience_code/download_code/samuelschen_DSB2018/dataset.py,206,"label_gt = ElasticDistortion.transform(label_gt, indices, spline_order=0) # spline_order=0 to avoid polluting instance labels"
/Users/cba/Desktop/github_datascience_code/download_code/samuelschen_DSB2018/dataset.py,456,"return self.transform(img, indices)"
/Users/cba/Desktop/github_datascience_code/download_code/galaxyproject_galaxy/lib/galaxy/workflow/render.py,40,self.canvas.fit()
/Users/cba/Desktop/github_datascience_code/download_code/benanne_kaggle-ndsb/extract_features.py,161,# pca.fit(resized_imgs)
/Users/cba/Desktop/github_datascience_code/download_code/benanne_kaggle-ndsb/extract_features.py,162,# x_pca = pca.transform(resized_imgs)
/Users/cba/Desktop/github_datascience_code/download_code/benanne_kaggle-ndsb/extract_features.py,166,#     scaler = prep.StandardScaler().fit(x_pca)
/Users/cba/Desktop/github_datascience_code/download_code/benanne_kaggle-ndsb/extract_features.py,167,#     x_pca = scaler.transform(x_pca)
/Users/cba/Desktop/github_datascience_code/download_code/benanne_kaggle-ndsb/extract_features.py,173,scaler = prep.StandardScaler().fit(x)
/Users/cba/Desktop/github_datascience_code/download_code/benanne_kaggle-ndsb/extract_features.py,174,x = scaler.transform(x)
/Users/cba/Desktop/github_datascience_code/download_code/justmarkham_python-data-science-workshop/sklearn_machine_learning.py,20,"lm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/justmarkham_python-data-science-workshop/sklearn_machine_learning.py,32,preds = lm.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/justmarkham_python-data-science-workshop/sklearn_machine_learning.py,40,"lm.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/tests/test_workflowMulti.py,41,"model.fit(df_train.drop('y',axis=1), df_train['y'])"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/tests/test_workflow.py,69,"model.fit(df_train.drop('y',axis=1), df_train['y'])"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-tf.py,51,"model.fit(data['x'], data['y'], epochs=self.epochs)"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare2.py,52,"model.fit(df_trainX,df_trainY[cfg_col_Y])"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare2.py,65,"model.fit(df_trainX,df_trainY[cfg_col_Y])"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare2.py,85,df_train['target_ols'] = data['ols'].predict(df_trainX)
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare2.py,86,df_train['target_lgbm'] = data['lgbm'].predict(df_trainX)
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-onnx.py,26,"model.fit(df_trainX,df_trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-onnx.py,39,"model.fit(df_trainX,df_trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-onnx.py,57,"print(model_ols.score(df_trainX, df_trainY))"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-onnx.py,58,"print(model_gbm.score(df_trainX, df_trainY))"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare.py,38,"model.fit(df_train.drop('y',1), df_train['y'])"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare.py,40,"self.saveMeta({'score':model.score(df_train.drop('y',1), df_train['y'])})"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare.py,81,"print(models['ols'].score(data_train['ols'].drop('y',1), data_train['ols']['y']))"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare.py,83,"print(models['gbm'].score(data_train['gbm'].drop('y',1), data_train['gbm']['y']))"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example.py,37,"model.fit(df_train.drop('y',1), df_train['y'])"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example.py,39,"self.saveMeta({'score':model.score(df_train.drop('y',1), df_train['y'])})"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example.py,78,"print(models['ols'].score(data_train['ols'].drop('y',1), data_train['ols']['y']))"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example.py,80,"print(models['gbm'].score(data_train['gbm'].drop('y',1), data_train['gbm']['y']))"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare-short.py,31,"model.fit(df_trainX, df_trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/d6t_d6tflow/docs/example-ml-compare-short.py,33,"self.saveMeta({'score': model.score(df_trainX, df_trainY)})  # save model score"
/Users/cba/Desktop/github_datascience_code/download_code/JovianHQ_jovian-py/jovian/callbacks/keras.py,38,"model.fit(x_train, y_train, ...., callbacks=[jvn_cb])"
/Users/cba/Desktop/github_datascience_code/download_code/JovianHQ_jovian-py/jovian/tests/callbacks/test_keras.py,63,"model.fit(x_train, y_train,"
/Users/cba/Desktop/github_datascience_code/download_code/JovianHQ_jovian-py/jovian/tests/callbacks/test_keras.py,87,"model.fit(x_train, y_train,"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-7/taxi_model.py,5,"model = LinearRegression().fit(d, features['total_amount'])"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-7/taxi_model.py,14,"pred = model.predict(line.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-9/taxi_regression_model.py,29,model = mod.fit(data_run.data.train_data)
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-9/taxi_modules/regression.py,7,"model = LinearRegression().fit(d, train_data['baseline']['amount'])"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-9/taxi_modules/regression.py,14,pred = model.predict(d)
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-9/taxi_modules/model_grid.py,19,"model.fit(data,"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-9/taxi_modules/model_grid.py,30,pred = model.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-6/forecast2.py,26,forecaster.fit(self.pd_past5days)
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-6/forecast2.py,27,"self.pd_predictions = forecaster.predict(numpy.arange(1, 48))"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-3/classifier_train.py,22,"self.model.fit(self.train_data, self.train_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-3/classifier_train.py,30,"self.model.fit(self.train_data, self.train_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-3/classifier_train.py,37,"inp.model.score(inp.test_data, inp.test_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-3/classifier_predict.py,17,"print(""Predicted class"", self.model.predict([self.vector])[0])"
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-5/kmeans_flow_v2.py,23,kmeans.fit(self.mtx)
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-5/many_kmeans_flow.py,24,kmeans.fit(self.mtx)
/Users/cba/Desktop/github_datascience_code/download_code/outerbounds_dsbook/chapter-5/scale_data.py,15,mtx = vec.fit_transform(docs)
/Users/cba/Desktop/github_datascience_code/download_code/agilescientific_welly/welly/utils.py,175,limits = axes.yaxis._scale.get_transform().transform(axes.get_ylim())
/Users/cba/Desktop/github_datascience_code/download_code/agilescientific_welly/welly/utils.py,177,lim = ax.yaxis._scale.get_transform().inverted().transform(limits)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch12-ann/classification_example.py,30,"blobs = (scaler.fit_transform(blobs[0]), blobs[1])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch12-ann/classification_example.py,31,"circles = (scaler.fit_transform(circles[0]), circles[1])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch12-ann/classification_example.py,32,"moons = (scaler.fit_transform(moons[0]), moons[1])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch12-ann/classification_example.py,33,"blocks = (scaler.fit_transform(blocks[0]), blocks[1])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch12-ann/classification_example.py,67,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch12-ann/classification_example.py,76,"y = enc.fit_transform(y.reshape(-1, 1)).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch12-ann/classification_example.py,78,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/logit_space_trans.py,56,yline = model.predict(xline)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/logit_space_trans.py,59,residual = y - model.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/logit_space_trans.py,115,"model.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/logit_space_trans.py,118,"ols.fit(xx, yy)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/imbalanced_data.py,48,"model.fit(X, Y.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/imbalanced_data.py,49,pred = model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/imbalanced_data.py,119,"model.fit(X, Y.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/imbalanced_data.py,120,pred = model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/example/logit_example.py,83,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/example/logit_example.py,123,"testSet[""prob""] = re.predict(testSet)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/example/roc_curve.py,30,"model.fit(data[features], data[labels])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/example/multi_logit_example.py,38,"model.fit(data[features], data[labels])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch05-logit/example/multi_logit_example.py,45,pic = model.predict(area)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch13-deep_learning/cnn.py,216,ann.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch13-deep_learning/mlp.py,192,ann.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/dimension_reduction/kernel_pca.py,30,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/dimension_reduction/kernel_pca.py,39,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/dimension_reduction/kernel_pca.py,97,"x = model.transform(data)[:, 0]"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/dimension_reduction/kernel_pca.py,102,"x = model.transform(data)[:, 0]"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/dimension_reduction/kernel_pca.py,106,"visualizeKernelPCA(ax, model.transform(data), labels)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/dimension_reduction/pca.py,56,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/kmeans_choose_k.py,27,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/kmeans_choose_k.py,35,wdist = model.transform(data).min(axis=1)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/gmm.py,42,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/gmm.py,73,"visualize(ax, data, model.predict(data), model.means_)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/gmm.py,77,"visualize(ax, data, model.predict(data), model.means_)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/kmeans_limitations.py,59,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/kmeans.py,56,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/gmm_choose_k.py,29,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/gmm_choose_k.py,82,"visualizeResult(ax, data, bestGMM.predict(data), bestGMM.means_)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/spectral_clustering/gmm_vs_spectral.py,35,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/spectral_clustering/gmm_vs_spectral.py,45,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/spectral_clustering/gmm_vs_spectral.py,81,"visualize(ax, circles, model.predict(circles), model.means_)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/spectral_clustering/gmm_vs_spectral.py,84,"visualize(ax, moons, model.predict(moons), model.means_)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch10-unsupervised/clustering/spectral_clustering/spectral_embedding_.py,517,self.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/pr/binary_model_evaluation/evaluation_example_code.py,31,"model.fit(data[features], data[labels])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/pr/imbalanced_data/imbalanced_data.py,48,"model.fit(X, Y.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/pr/imbalanced_data/imbalanced_data.py,49,pred = model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/pr/imbalanced_data/imbalanced_data.py,119,"model.fit(X, Y.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/pr/imbalanced_data/imbalanced_data.py,120,pred = model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/model_persistence.py,34,"model.fit(data[[""x""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/model_persistence.py,43,"model.fit(data[[""x""]], data[[""y""]])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/model_persistence.py,67,"print(""保存的模型对1的预测值：%s"" % originalModel.predict([[1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/model_persistence.py,68,"print(""读取的模型对1的预测值：%s"" % model.predict([[1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_ml.py,38,(model.predict(testData[features]) - testData[labels]) ** 2)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_ml.py,40,"score = model.score(testData[features], testData[labels])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_ml.py,75,"ax.plot(data[features], model.predict(data[features]), color='r',"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_ml.py,79,"ax.plot(data[features], model.predict(data[features]), color='r',"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_ml.py,85,"ax.plot(data[features], model.predict(data[features]), color='r',"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_ml.py,89,"ax.plot(data[features], model.predict(data[features]), color='r',"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_ml.py,132,"model.fit(trainData[features], trainData[labels])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_illusion_CI.py,47,res = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_illusion_CI.py,90,res = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_illusion_CI.py,95,res1 = model1.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_illusion_reg.py,31,res = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_stat.py,70,"ax.plot(data[features], re.predict(data[features]), color='r',"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_stat.py,75,"ax.plot(data[features], re.predict(data[features]), color='r',"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_stat.py,89,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_overfitting.py,40,(model.predict(featurizer.fit_transform(testData[features])) - testData[labels]) ** 2)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_overfitting.py,42,"score = model.score(featurizer.fit_transform(testData[features]), testData[labels])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_overfitting.py,65,"model.fit(featurizer.fit_transform(trainData[features]), trainData[labels])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch04-linear/simple_example/linear_overfitting.py,92,"ax.plot(data[features], model.predict(featurizer.fit_transform(data[features])),"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/GBTs.py,34,"model.fit(data[[""x""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/simple_example.py,52,"Y = model[i].predict(np.c_[X1.ravel(), X2.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/simple_example.py,84,"model.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/decision_tree_logit.py,38,"logitModel.fit(trainData[features], trainData[label])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/decision_tree_logit.py,43,"dtModel.fit(trainData[features], trainData[label])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/decision_tree_logit.py,52,"_dt.fit(trainDT[features[:m]], trainDT[label])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/decision_tree_logit.py,55,coder.fit(leafNode)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/decision_tree_logit.py,57,"coder.transform(_dt.apply(trainLR[features[:m]]).reshape(-1, 1)).toarray(),"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/decision_tree_logit.py,60,"_logit.fit(newFeature[:, 1:], trainLR[label])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/decision_tree/decision_tree_logit.py,62,"coder.transform(_dt.apply(testData[features[:m]]).reshape(-1, 1)).toarray(),"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/scale_variant.py,36,"model.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/kernel.py,91,"model.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/kernel.py,103,"model.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/kernel.py,127,"print(""模型的预测结果为：%s"" % re.predict(data[[""x1"", ""x2""]]))"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/linear_separable_svm.py,42,"model.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/svm_vs_logit.py,88,"svmModel.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/svm_vs_logit.py,90,"logitModel.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/svm_vs_logit.py,99,"hardMargin.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/svm_vs_logit.py,101,"softMargin.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch08-supervised/svm/hard_soft_margin.py,37,"model.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/da/dimension_reduction.py,30,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/da/dimension_reduction.py,31,newX = model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/yahmm/segmentation_example.py,82,XX = vect.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/yahmm/segmentation_example.py,84,"model.fit(XX, y, lengths)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/yahmm/segmentation_example.py,109,"pred = model.predict(vect.transform(testX), testLengths)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/yahmm/segmentation_example.py,116,"printSegmentation(examplStr, model.predict(vect.transform(examplStr)))"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/yahmm/hmm/tests/test_multinomialHMM.py,13,"mh.fit(X, Y, [4])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/yahmm/hmm/tests/test_multinomialHMM.py,20,"mh.fit(X, Y, [2, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/yahmm/hmm/tests/test_multinomialHMM.py,26,"assert_array_almost_equal(mh.predict(X), mh.predict(X, lengths=[1, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,87,"Y = le.fit_transform(data[""label""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,88,"pipe.fit(data[""content""], Y)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,100,"Y = le.fit_transform(data[""label""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,101,"pipe.fit(data[""content""], Y)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,110,"X = vect.fit_transform(data[""content""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,112,"Y = le.fit_transform(data[""label""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,114,"model.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,133,pred = le.classes_[model.predict(vect.transform(testDocs))]
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,137,"le.transform(testData[""label""]),"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,138,"model.predict(vect.transform(testData[""content""])),"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,142,pred = le.classes_[pipe.predict(testDocs)]
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,146,"le.transform(testData[""label""]),"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,147,"pipe.predict(testData[""content""]),"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,151,pred = le.classes_[pipe.predict(testDocs)]
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,155,"le.transform(testData[""label""]),"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/text_classification.py,156,"pipe.predict(testData[""content""]),"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/naive_bayes/classification_example.py,32,"pipe.fit(data[[""x1"", ""x2""]], data[""y""])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/gaussian_hmm/stock_analysis.py,49,model.fit(data[cols])
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch09-generative_models/gaussian_hmm/stock_analysis.py,50,hiddenStatus = model.predict(data[cols])
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch11-spark/sparkml_vs_sklearn.py,59,"sklearnModel.fit(data[:, 1:], data[:, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch11-spark/sparkml_vs_sklearn.py,91,"ax.plot(x, sklearnModel.predict(x.reshape(-1, 1)), ""k"", linewidth=2,"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch11-spark/sparkml_vs_sklearn.py,93,"ax.plot(x, [mllibModel.predict(i) for i in x.reshape(-1, 1)], ""r-."", linewidth=2,"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch11-spark/sparkml_vs_sklearn_solution.py,64,"sklearnModel.fit(data[:, 1:], data[:, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch11-spark/sparkml_vs_sklearn_solution.py,99,"ax.plot(x, sklearnModel.predict(x.reshape(-1, 1)), ""k"", linewidth=2,"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch11-spark/sparkml_vs_sklearn_solution.py,101,"ax.plot(x, [mllibModel.predict(i) for i in x.reshape(-1, 1)], ""r-."", linewidth=2,"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch11-spark/hyperparameters_tuning.py,39,"gs.fit(data[features], data[label])"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/categorical_variable.py,57,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/categorical_variable.py,71,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/categorical_variable.py,81,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/categorical_variable.py,91,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/categorical_variable.py,103,"data[""prob""] = re.predict(data)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/multicollinearity.py,68,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/continuous_variable.py,110,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/continuous_variable.py,120,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/continuous_variable.py,132,"data[""prob""] = re.predict(data)"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,91,"re = sm.OLS.from_formula(""X1 ~ X2 + IV1"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,94,"re1 = sm.OLS.from_formula(""Y ~ X1 + X2 + X1_resid"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,105,re = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,118,"reTmp = sm.OLS.from_formula(""X1 ~ X2 + IV1"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,121,"re = sm.Logit.from_formula(""Y ~ X2 + X1 + X1_resid"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,131,"re = sm.OLS.from_formula(""Y ~ realX1 + X2"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,135,"re1 = sm.OLS.from_formula(""Y ~ X2 + X1"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,138,"re2 = sm.OLS.from_formula(""Y ~ X2 + X1 + IV1"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,149,"re = sm.Logit.from_formula(""Y ~ X1 + X2"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/endogeneity.py,152,"re1 = sm.Logit.from_formula(""Y ~ X1 + X2 + IV1"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/GenTang_intro_ds/ch07-econometrics/one_way_ANOVA.py,45,"re = sm.OLS.from_formula(""A ~ B"", data=data).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/dwhitena_dockerized-DS-python/api.py,40,"knn.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/dwhitena_dockerized-DS-python/api.py,42,predictInt = knn.predict(inputFeatures)
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/06_space_shuttle_challenger.py,22,"model.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/14_classification_report.py,19,"model.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/14_classification_report.py,20,prediction = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/task3.py,38,"y_predict = model.fit(?, ?)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/02_logistic_regression_sklearn.py,16,"model.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/task2.py,37,"model.fit(?, ?)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/task2.py,39,"result = model.score(?, ?)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/07_train_test_67_33_split.py,21,"model.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/07_train_test_67_33_split.py,22,"result = model.score(X_test, Y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/04_multiple_logistic_regression_sklearn.py,13,"fit = LogisticRegression().fit(inputs, output)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/04_multiple_logistic_regression_sklearn.py,20,print(fit.predict(inputs))
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/04_multiple_logistic_regression_sklearn.py,26,"prediction = fit.predict([[sex, age, promotions, years_employed]])"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/13_confusion_matrix.py,18,"model.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/13_confusion_matrix.py,19,prediction = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/15_imbalanced_criminality_dataset.py,19,"model.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/15_imbalanced_criminality_dataset.py,21,"result = model.score(X_test, Y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/15_imbalanced_criminality_dataset.py,27,"prediction = model.predict([[age, video_gamer, likes_ice_cream, minority]])"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/05_plot_logistic_regression.py,16,"model.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/06_logistic_regression/05_plot_logistic_regression.py,19,"print(""x = 3.5, y = {0}"".format(model.predict([[3.5]]).flatten()))"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/20_unit_vector_normalization.py,13,scaler = Normalizer().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/20_unit_vector_normalization.py,14,rescaled_X = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/14_r2_3fold.py,17,"model.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/14_r2_3fold.py,19,"result = model.score(X_test, Y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/03_charting_plotly.py,16,"fit = LinearRegression().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/03_charting_plotly.py,23,"print(""x = 3.5, y = {0}"".format(fit.predict([[3.5]]).flatten()))"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/03_charting_plotly.py,29,"y= fit.predict(np.arange(0, Y.max(axis=0),1).reshape(-1, 1)),"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/05_multiple_linear_regression_sklearn.py,14,"fit = LinearRegression().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/05_multiple_linear_regression_sklearn.py,22,"print(""x1 = 3.5, x2 = 4.5, y = {0}"".format(fit.predict([[3.5, 4.5]])))"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/task3.py,31,"model.fit(?, ?)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/task3.py,32,"result = model.score(?, ?)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/02_linear_regression_sklearn.py,15,"fit = LinearRegression().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/18_rescaling.py,14,rescaled_X = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/19_standardization.py,14,scaler = StandardScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/19_standardization.py,15,rescaled_X = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/06_train_test_split.py,24,"model.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/thomasnield_oreilly_math_fundamentals_data_science/extended/05_linear_regression/06_train_test_split.py,25,"result = model.score(X_test, Y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,49,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,70,realized.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,94,realized.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,118,estimated.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,141,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,156,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,183,estimated.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,202,calc.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,222,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,234,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,310,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,326,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,342,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,358,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,375,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,394,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,414,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,431,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,453,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,464,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,483,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,512,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,544,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,560,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,576,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/test_ranking.py,592,ranking.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,18,y_true = lb.fit_transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,41,y_true = lb.fit_transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,64,y_true = lb.fit_transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,65,y_pred = lb.transform(y_pred)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,85,y_true = lb.fit_transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,86,y_pred = lb.transform(y_pred)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,106,y_true = lb.fit_transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,107,y_pred = lb.transform(y_pred)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,127,y_true = lb.fit_transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,128,y_pred = lb.transform(y_pred)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,148,y_true = lb.fit_transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/sampling_error/test_multiclass_classification_sampling_error.py,149,y_pred = lb.transform(y_pred)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_missing.py,31,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_missing.py,48,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_missing.py,69,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_missing.py,102,_ = calc.fit(pd.DataFrame())
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_missing.py,119,).fit(reference_data=reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_missing.py,135,_ = calc.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_missing.py,152,).fit(reference_data=reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_missing.py,235,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,27,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,39,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,54,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,64,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,81,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,109,_ = calc.fit(pd.DataFrame())
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,121,).fit(reference_data=reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,137,_ = calc.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,149,).fit(reference_data=reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/data_quality/test_unseen.py,186,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,32,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,43,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,54,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,67,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,91,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,102,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,117,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,136,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,150,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,165,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,184,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,198,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,209,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/io/test_writers.py,222,).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,125,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,136,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,147,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,163,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,179,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,207,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,221,"calc = DataReconstructionDriftCalculator(column_names=['f1', 'f3'], timestamp_column_name='timestamp').fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,223,calc.fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,232,"# calc = DataReconstructionDriftCalculator(sample_drift_metadata, chunk_period='W').fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,235,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,358,"calc = DataReconstructionDriftCalculator(column_names=['f1', 'f2', 'f3', 'f4'], **calculator_opts).fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,366,"calc = DataReconstructionDriftCalculator(column_names=['f1', 'f2'], timestamp_column_name='timestamp').fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,375,"calc = DataReconstructionDriftCalculator(column_names=['f3', 'f4'], timestamp_column_name='timestamp').fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,437,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,450,"sut = DataReconstructionDriftCalculator(column_names=['f1', 'f2', 'f3', 'f4']).fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,480,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,495,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,524,"calc = DataReconstructionDriftCalculator(column_names=['f1', 'f2', 'f3', 'f4'], **calc_args).fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,537,"calc = DataReconstructionDriftCalculator(column_names=['f1', 'f2', 'f3', 'f4']).fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,545,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,558,"calc = DataReconstructionDriftCalculator(column_names=['f1', 'f2', 'f3', 'f4']).fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_pca.py,568,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_multiv_dc.py,42,calc.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_output_drift.py,120,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_output_drift.py,132,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_output_drift.py,145,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_output_drift.py,323,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_output_drift.py,548,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_output_drift.py,786,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_output_drift.py,833,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_output_drift.py,868,"calc = UnivariateDriftCalculator(column_names=['y_pred', 'y_pred_proba'], **calc_args).fit(reference)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_output_drift.py,902,"calc = UnivariateDriftCalculator(column_names=['y_pred'], **calc_args).fit(reference)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,26,js.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,36,js.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,46,js.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,56,js.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,65,infnorm.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,74,infnorm.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,83,infnorm.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,96,wass_dist = wass_dist.fit(reference).calculate(analysis)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,106,wass_dist = wass_dist.fit(reference).calculate(analysis)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,116,wass_dist = wass_dist.fit(reference).calculate(analysis)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,128,"hell_dist = HellingerDistance(chunker=chunker, threshold=threshold).fit(reference).calculate(analysis)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,137,"hell_dist = HellingerDistance(chunker=chunker, threshold=threshold).fit(reference).calculate(analysis)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,146,"hell_dist = HellingerDistance(chunker=chunker, threshold=threshold).fit(reference).calculate(analysis)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,156,hell_dist.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,166,hell_dist.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,184,method.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_univariate_drift_methods.py,201,method.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_target_distribution.py,127,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_target_distribution.py,136,calc = UnivariateDriftCalculator(column_names=['actual']).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_target_distribution.py,149,"calc = UnivariateDriftCalculator(column_names=['y_true'], timestamp_column_name='timestamp').fit(reference)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_target_distribution.py,324,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_target_distribution.py,489,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_target_distribution.py,661,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_target_distribution.py,711,"calc = UnivariateDriftCalculator(column_names=['y_true'], **calc_args).fit(reference)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_target_distribution.py,787,"calc = UnivariateDriftCalculator(column_names=['work_home_actual'], **calc_args).fit(reference)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_target_distribution.py,837,"calc = UnivariateDriftCalculator(column_names=['y_true'], **calc_args).fit(reference)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,130,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,249,).fit(sample_drift_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,264,).fit(sample_drift_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,281,).fit(sample_drift_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,386,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,403,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,424,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,445,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,530,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,552,calc.fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,564,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,580,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,597,sut.fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,710,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,759,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,778,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,801,"calc = DataReconstructionDriftCalculator(column_names=['f1', 'f2', 'f3', 'f4']).fit(ref_data)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,809,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,827,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/drift/test_drift.py,837,).fit(ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,57,).fit(reference_data=data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,119,_ = calc.fit(reference_data=data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,130,).fit(reference_data=data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,143,).fit(reference_data=data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,174,).fit(reference_data=ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,198,performance_calculator.fit(reference_data=ref_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,286,performance_calculator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,336,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,373,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/test_performance_calculator.py,406,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_binary_classification.py,64,calculator = performance_calculator().fit(binary_data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_binary_classification.py,84,).fit(binary_data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_binary_classification.py,103,).fit(binary_data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_binary_classification.py,110,calc = performance_calculator(timestamp_column_name=None).fit(binary_data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_binary_classification.py,120,calc = performance_calculator().fit(binary_data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_binary_classification.py,292,"metric.fit(reference, chunker=DefaultChunker())"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_binary_classification.py,316,"metric.fit(reference, chunker=DefaultChunker())"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_multiclass_classification.py,66,).fit(multiclass_data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_multiclass_classification.py,75,performance_calculator.fit(multiclass_data[0])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_multiclass_classification.py,189,"metric.fit(reference, chunker=DefaultChunker())"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_multiclass_classification.py,220,"metric.fit(reference, chunker=DefaultChunker())"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_regression.py,43,performance_calculator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_regression.py,60,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_calculation/metrics/test_regression.py,196,"metric.fit(reference, chunker=DefaultChunker())"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe_metrics.py,2615,).fit(ref_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe_metrics.py,3391,).fit(ref_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe_metrics.py,3457,metric.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_result.py,44,estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_result.py,133,estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_result.py,166,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_result.py,199,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,50,estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,78,sut.fit(ref_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,96,sut.fit(ref_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,112,estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,213,estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,262,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,285,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,308,estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,322,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,347,estimator.fit(reference_data=reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,380,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,406,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,456,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,489,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,522,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,559,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/CBPE/test_cbpe.py,579,sut.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/DLE/test_dle.py,71,direct_error_estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/DLE/test_dle.py,97,direct_error_estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/DLE/test_dle.py,134,direct_error_estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/DLE/test_dle.py,257,direct_error_estimator.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/DLE/test_dle.py,418,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/DLE/test_dle_metrics.py,312,).fit(ref_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/performance_estimation/DLE/test_dle_metrics.py,356,metric.fit(ref_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_std.py,26,#     ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_std.py,35,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_std.py,45,"calc = SummaryStatsStdCalculator(column_names=['car_value'], chunker=chunker).fit(reference)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_median.py,23,#     ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_median.py,32,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_median.py,44,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_count.py,23,#     ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_count.py,30,calc = SummaryStatsRowCountCalculator().fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_sum.py,23,#     ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_sum.py,32,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_avg.py,23,#     ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/stats/test_avg.py,32,).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/plots/comparison_plots.py,29,"calc = DataReconstructionDriftCalculator(column_names=column_names, chunker=chunker).fit(ref)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/plots/comparison_plots.py,39,"calc = UnivariateDriftCalculator(column_names=column_names, chunker=chunker).fit(ref)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/plots/comparison_plots.py,55,).fit(ref)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/plots/comparison_plots.py,71,).fit(ref)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/tests/plots/comparison_plots.py,110,).fit(ref)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/runner.py,190,calc.fit(reference_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/runner.py,200,calc.fit(reference_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/calibration.py,139,"self._regressor.fit(y_pred_proba, y_true)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/calibration.py,149,return self._regressor.predict(y_pred_proba)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/calibration.py,309,"calibrator.fit(y_pred_proba_train, y_true_train)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/data_quality/unseen/result.py,82,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/data_quality/unseen/calculator.py,76,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/data_quality/missing/result.py,80,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/data_quality/missing/calculator.py,78,... ).fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/distribution/continuous/calculator.py,85,"kde.fit(cut=cut, clip=clip)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/ranker.py,161,>>> univ_calc.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/ranker.py,218,>>> univ_calc.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/ranker.py,228,>>> realized_calc.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/ranker.py,232,>>> ranker2.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/domain_classifier/result.py,101,>>> calc.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/domain_classifier/calculator.py,167,>>> calc.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/domain_classifier/calculator.py,312,"model.fit(_trx, _try, categorical_feature=self.categorical_column_names)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/domain_classifier/calculator.py,360,automl.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/domain_classifier/calculator.py,384,X_cat = pd.DataFrame({col_name: enc.fit_transform(X[[col_name]]).ravel() for col_name in categorical_column_names})
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/result.py,100,>>> calc.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,98,>>> calc.fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,159,imputed_reference_data[self.categorical_column_names] = self._imputer_categorical.fit_transform(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,163,imputed_reference_data[self.continuous_column_names] = self._imputer_continuous.fit_transform(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,169,encoded_reference_data[self.column_names] = encoder.fit_transform(encoded_reference_data[self.column_names])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,173,"scaler.fit_transform(encoded_reference_data[self.column_names]), columns=self.column_names"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,177,pca.fit(scaled_reference_data[self.column_names])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,336,data[categorical_column_names] = imputer_categorical.transform(data[categorical_column_names])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,338,data[continuous_column_names] = imputer_continuous.transform(data[continuous_column_names])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,340,data[column_names] = encoder.transform(data[column_names])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,343,data[column_names] = scaler.transform(data[column_names])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/multivariate/data_reconstruction/calculator.py,346,reduced_data = pca.transform(data[column_names])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/univariate/methods.py,447,"super().fit(reference_data, timestamps)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/univariate/result.py,225,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/univariate/calculator.py,191,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/univariate/calculator.py,288,).fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/drift/univariate/calculator.py,307,).fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/result.py,144,>>> calc.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/calculator.py,33,>>> calc.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/calculator.py,194,>>> calc.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/calculator.py,279,"metric.fit(reference_data=reference_data, chunker=self.chunker)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/calculator.py,311,'Please ensure you run ``calculator.fit()`` '
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,198,binarized_y_true = list(label_binarizer.fit_transform(reference_data[self.y_true]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,199,binarized_y_pred = list(label_binarizer.transform(reference_data[self.y_pred]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,293,binarized_y_true = list(label_binarizer.fit_transform(reference_data[self.y_true]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,294,binarized_y_pred = list(label_binarizer.transform(reference_data[self.y_pred]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,388,binarized_y_true = list(label_binarizer.fit_transform(reference_data[self.y_true]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,389,binarized_y_pred = list(label_binarizer.transform(reference_data[self.y_pred]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,483,binarized_y_true = list(label_binarizer.fit_transform(reference_data[self.y_true]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,484,binarized_y_pred = list(label_binarizer.transform(reference_data[self.y_pred]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,582,binarized_y_true = label_binarizer.fit_transform(reference_data[self.y_true])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_calculation/metrics/multiclass_classification.py,583,binarized_y_pred = label_binarizer.transform(reference_data[self.y_pred])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2182,binarized_y_true = list(label_binarizer.fit_transform(reference_data[self.y_true]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2183,binarized_y_pred = list(label_binarizer.transform(reference_data[self.y_pred]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2252,binarized_y_true = list(label_binarizer.fit_transform(reference_data[self.y_true]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2253,binarized_y_pred = list(label_binarizer.transform(reference_data[self.y_pred]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2322,binarized_y_true = list(label_binarizer.fit_transform(reference_data[self.y_true]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2323,binarized_y_pred = list(label_binarizer.transform(reference_data[self.y_pred]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2392,binarized_y_true = list(label_binarizer.fit_transform(reference_data[self.y_true]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2393,binarized_y_pred = list(label_binarizer.transform(reference_data[self.y_pred]).T)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2466,binarized_y_true = label_binarizer.fit_transform(reference_data[self.y_true])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/metrics.py,2467,binarized_y_pred = label_binarizer.transform(reference_data[self.y_pred])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/results.py,188,>>> estimator.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/cbpe.py,202,>>> estimator.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/cbpe.py,225,>>> estimator.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/cbpe.py,425,metric.fit(reference_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/cbpe.py,436,self.calibrator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/cbpe.py,459,metric.fit(reference_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/confidence_based/cbpe.py,525,"calibrator.fit(y_pred_proba, y_true)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,297,"model.fit(X_train, y_train, categorical_feature=categorical_column_names)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,307,"automl.fit(X_train, y_train, **hyperparameter_tuning_config, categorical_feature=categorical_column_names)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,310,"model.fit(X_train, y_train, categorical_feature=categorical_column_names)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,316,"model.fit(X_train, y_train, categorical_feature=categorical_column_names)"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,465,observation_level_estimates = self._dee_model.predict(X=data[self.feature_column_names + [self.y_pred]])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,585,observation_level_estimates = self._dee_model.predict(X=data[self.feature_column_names + [self.y_pred]])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,704,observation_level_estimates = self._dee_model.predict(X=data[self.feature_column_names + [self.y_pred]])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,826,observation_level_estimates = self._dee_model.predict(X=data[self.feature_column_names + [self.y_pred]])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,953,observation_level_estimates = self._dee_model.predict(X=data[self.feature_column_names + [self.y_pred]])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/metrics.py,1076,observation_level_estimates = self._dee_model.predict(X=data[self.feature_column_names + [self.y_pred]])
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/dle.py,176,>>> estimator.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/dle.py,206,>>> estimator.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/dle.py,287,reference_data[categorical_feature_column] = self._categorical_imputer.fit_transform(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/dle.py,292,"].fit_transform(reference_data[categorical_feature_column].values.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/dle.py,303,metric.fit(reference_data)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/dle.py,320,data[categorical_feature_column] = self._categorical_imputer.transform(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/dle.py,323,data[categorical_feature_column] = self._categorical_encoders[categorical_feature_column].transform(
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/performance_estimation/direct_loss_estimation/result.py,151,>>> estimator.fit(reference_df)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/avg/result.py,81,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/avg/calculator.py,69,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/median/result.py,81,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/median/calculator.py,73,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/count/result.py,80,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/count/calculator.py,62,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/std/result.py,79,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/std/calculator.py,73,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/sum/result.py,81,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/stats/sum/calculator.py,69,... ).fit(reference)
/Users/cba/Desktop/github_datascience_code/download_code/NannyML_nannyml/nannyml/plots/components/joy_plot.py,23,"kde.fit(cut=cut, clip=clip)"
/Users/cba/Desktop/github_datascience_code/download_code/Apress_practical-web-scraping-for-data-science/captcha-cracking/train.py,39,lb = LabelBinarizer().fit(Y_train)
/Users/cba/Desktop/github_datascience_code/download_code/Apress_practical-web-scraping-for-data-science/captcha-cracking/train.py,40,Y_train = lb.transform(Y_train)
/Users/cba/Desktop/github_datascience_code/download_code/Apress_practical-web-scraping-for-data-science/captcha-cracking/train.py,41,Y_test = lb.transform(Y_test)
/Users/cba/Desktop/github_datascience_code/download_code/Apress_practical-web-scraping-for-data-science/captcha-cracking/train.py,60,"model.fit(X_train, Y_train, validation_data=(X_test, Y_test),"
/Users/cba/Desktop/github_datascience_code/download_code/Apress_practical-web-scraping-for-data-science/captcha-cracking/apply.py,31,prediction = model.predict(letter)
/Users/cba/Desktop/github_datascience_code/download_code/Apress_practical-web-scraping-for-data-science/fashion-clustering/analysis.py,36,X_tsne = tsne.fit_transform(image_np)
/Users/cba/Desktop/github_datascience_code/download_code/rifleak74_MarketDataScience/行銷人轉職爬蟲王實戰｜5大社群＋2大電商/8-3.市場大小預估分析/8-3.市場大小預估分析.py,54,clf.fit(KmeansData[['c'+str(x) for x in range(count)]].values.tolist())#開始訓練
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docker/feature_importance.py,84,">>> rf.fit(X,y)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docker/feature_importance.py,115,original_predictions = model_instance.predict(inputs)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docker/feature_importance.py,277,">>> rf.fit(X,y)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_clustering.py,125,self.clusterer.fit(self.input_df)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_common.py,161,X = self.X.copy() if self.prep is None else self.prep.transform(self.X.copy())
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_prophet.py,272,"self.model.fit(self.input_df, **self.fit_kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_prophet.py,766,self.forecast = self.model.predict(self.future_df)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_prophet.py,934,return predictor.predict()
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_prophet.py,958,forecast = predictor.predict()
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,564,self.model.target_transformer = self.model.target_transformer.fit(self.y_train)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,567,self.y_train = self.model.target_transformer.transform(self.y_train)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,666,"self.model.pipe.fit(self.X_train, y)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,668,"self.model.pipe.fit(self.X_train, self.y_train.values.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,704,"self.model.pipe.fit(self.X_train, y)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,706,"self.model.pipe.fit(self.X_train, self.y_train.values.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,838,self.y = self.model.pipe.fit_transform(self.X)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,845,self.y = self.model.pipe.fit_predict(self.X)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,905,self.y_test = self.model.target_transformer.transform(self.y_test)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,937,self.y_pred = self.model.pipe.predict(self.X_test)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,1138,self.y = self.model.pipe.predict(self.X)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,1206,y = self.model.target_transformer.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,1275,pred = self.model.pipe.predict(batch_X)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,1292,"pred = self.model.pipe.predict(batch_X.iloc[[-1],:])"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,1310,predictions = self.model.pipe.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_sklearn.py,2042,X_transform = prep.fit_transform(self.X_train)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,530,"scale_df = pd.DataFrame(self.scaler_instance.transform(scale_df), index=scale_df.index, columns=scale_df.columns)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,569,"return self.fit(X, y, features, retrain).transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,693,"hashed = fh.fit_transform(unique.loc[:, col])"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,711,"vectorized = v.fit_transform(unique.loc[:, col])"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,734,"encoded = pd.DataFrame(mlb.fit_transform(encoded[col]),columns=mlb.classes_, index=encoded.index).add_prefix(col+""_"")"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,847,y_transform_scaled = self.scaler_instance.transform(y_transform)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,863,return self.fit(y).transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,1024,"return self.fit(X, y).transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,1100,"history = super().fit(x, y, sample_weight, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_machine_learning.py,1170,"history = super().fit(x, y, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,345,forecast = predictor.predict()
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,426,forecast = predictor.predict()
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,497,response = model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,503,response = model.predict(load_script=False)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,506,"response = model.predict(load_script=False, variant=""predict_proba"")"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,515,response = model.fit_transform(load_script=False)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,528,response = model.predict(load_script=True)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,531,"response = model.predict(load_script=True, variant=""predict_proba"")"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,534,response = model.fit_transform(load_script=True)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,587,response = model.fit_transform(load_script=True)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,709,response = handle.predict(load_script=False)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/__main__.py,714,response = handle.predict(load_script=True)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_utils.py,127,return s.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/core/_utils.py,144,"df = pd.DataFrame(s.fit_transform(df), index=df.index, columns=df.columns)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/preprocessor.py,180,"self.scale_df = pd.DataFrame(self.scaler_instance.transform(self.scale_df), index=self.scale_df.index, columns=self.scale_df.columns)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/preprocessor.py,212,"return self.fit(X, y, features, retrain).transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/preprocessor.py,223,"hashed = fh.fit_transform(unique.loc[:, col])"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/preprocessor.py,262,return s.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,73,"pipe.fit(X_train, y_train.values.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,77,"sys.stdout.write('\n%s pipeline train accuracy: %.3f\n' % (pipe_dict[idx], val.score(X_train, y_train)))"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,78,"sys.stdout.write('%s pipeline test accuracy: %.3f\n' % (pipe_dict[idx], val.score(X_test, y_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,85,"if val.score(X_test, y_test) > best_acc:"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,86,"best_acc = val.score(X_test, y_test.values.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,104,X_train_transformed = best_pipe.named_steps['prep'].transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,107,le = LabelEncoder().fit(y_train.values.ravel())
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,108,y_train_encoded = le.transform(y_train.values.ravel())
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,120,"model.fit(X_train_transformed, y_train_encoded, epochs=50, batch_size=8, class_weight={0:0.1, 1:2.0}, verbose=0)"
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,123,X_test_transformed = best_pipe.named_steps['prep'].transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/nabeel-oz_qlik-py-tools/docs/sample-scripts/__main__.py,125,y_test_encoded = le.transform(y_test.values.ravel())
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/explanations/mlx_interface.py,139,exp.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/explanations/mlx_interface.py,215,exp.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/explanations/mlx_interface.py,285,"exp.fit(est, X_train, y=y_train, target_names=class_names)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/explanations/mlx_interface.py,342,"exp.fit(est, X_train, y=y_train, target_names=class_names)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/explanations/mlx_interface.py,378,exp.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/evaluations/statistical_metrics.py,309,encoded_labels = lb.fit_transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/evaluations/__init__.py,75,">>> est = DecisionTreeClassifier().fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/evaluations/evaluator.py,133,">>> est = DecisionTreeClassifier().fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/evaluations/evaluator.py,307,self._le = LabelEncoder().fit(self.y)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/evaluations/evaluator.py,317,"y_true, y_pred = self._le.transform(self.y), self._le.transform(y_pred)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/evaluations/evaluator.py,318,classes = self._le.transform(self.classes)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/evaluations/evaluator.py,321,pos_class = self._le.transform([self.positive_class])[0]
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/evaluations/evaluator.py,398,"zip([str(x) for x in self._le.transform(self.classes)], self.classes)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/evaluations/evaluator.py,1310,y_pred = est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/cmds.py,485,return ModelDeploymentBackend(p.config).predict()
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/cmds.py,488,return LocalModelDeploymentBackend(p.config).predict()
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/backend/ads_model_deployment.py,197,model_deployment.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/utils.py,43,le = DataFrameLabelEncoder().fit(df_to_encode)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/utils.py,44,"return le, le.transform(df)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/base_model.py,729,fcst = model.predict(data)[fcst_col_name]
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/prophet.py,52,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/prophet.py,101,forecast = model.predict(future)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/automlx.py,117,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/automlx.py,130,"fitted_values = model.predict(data_i.drop(target, axis=1))["
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/automlx.py,326,row_i = model.predict(X=row).values[0][0]
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/autots.py,146,model = model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/autots.py,158,self.outputs = model.predict(future_regressor=regr_fcst)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/neuralprophet.py,76,m.fit(df=data)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/neuralprophet.py,155,forecast = model.predict(future)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/neuralprophet.py,274,test_forecast_i = m.predict(df=df_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/arima.py,86,"yhat, conf_int = model.predict("
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/forecast/model/arima.py,247,"return model.predict(X=data, n_periods=len(data))"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/anomaly/model/base_model.py,326,"est.fit(df[target].values.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/anomaly/model/base_model.py,328,"est.predict(df[target].values.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/anomaly/model/automlx.py,40,est.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/anomaly/model/automlx.py,53,y_pred = est.predict(df)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/anomaly/model/tods.py,70,"#             model.fit(np.array(df[self.spec.target_column]).reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/anomaly/model/tods.py,73,#             predictions_train[target] = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/common/transformations.py,133,".transform(lambda x: x.interpolate(limit_direction=""both""))"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/common/transformations.py,174,.transform(lambda x: (x - x.mean()) / x.std())
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/opctl/operator/lowcode/common/transformations.py,180,.transform(lambda x: x.mean())
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/feature_selection.py,62,feature_scores = extracter.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/label_encoder.py,31,>>> le.fit_transform(X=df)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/label_encoder.py,58,self.label_encoders[column].fit(X[column])
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/label_encoder.py,88,return self.label_encoders[name].transform(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/dataset.py,602,df = le.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/dataset.py,1219,).fit(result)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/recommendation_transformer.py,281,self.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/recommendation_transformer.py,282,"return self.transform(X, fit_transform=True, update_transformer_log=True)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/dask_series.py,111,).fit(result)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/dataset_with_target.py,355,"tf[1].transform(self.df), tf[1].transform(self.sampled_df), transformers=tf"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/dataset_with_target.py,567,).fit(self.sampled_df)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/dataset_with_target.py,735,").fit(self.sampled_df),"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/dataset_with_target.py,928,sampled_df = step[1].fit_transform(sampled_df)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/dataset_with_target.py,929,"df = step[1].transform(df, progress=progress, fit_transform=True)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/dataset_with_target.py,966,").fit(self.sampled_df),"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/sampled_dataset.py,120,X = DataFrameLabelEncoder().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/sampled_dataset.py,121,X = MinMaxScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/sampled_dataset.py,126,X = imp_most_freq.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/sampled_dataset.py,129,"est.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/classification_dataset.py,131,").fit(self.sampled_df),"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/dataset/feature_engineering_transformer.py,30,"return self.fit(X, y=y).transform(X, fit_transform=True)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/automl/provider.py,173,X = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/automl/provider.py,174,return self.est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/automl/provider.py,191,X = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/automl/provider.py,212,"self.est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/automl/provider.py,291,"self.est.fit(self.X_train, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/automl/provider.py,561,self.est.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model_export_util.py,175,">>> lrmodel = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model_export_util.py,187,>>> assert len(modelartifact.predict(X[:5])['prediction']) == 5 #Test the generated score.py works. This may require customization.
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,191,X = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,195,"return self.est.predict(self.client, self.booster, X).persist()"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,197,return self.est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,216,X = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,246,X = self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,256,"return self.est.score(self.client, self.booster, X, y_true).persist()"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,258,"return self.est.score(X, y_true)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,310,X = transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,373,return self.onnx_data_preprocessor.transform(X=X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/common/model.py,376,return self.onnx_data_preprocessor.fit_transform(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,337,>>> model.predict(2)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,797,X = self.onnx_data_preprocessor.transform(X=X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,800,X = self.onnx_data_preprocessor.fit_transform(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,1293,prediction = self.model_artifact.predict(request_body)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,2873,>>> prediction = model.predict(image=uri)['prediction']
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,2876,>>> prediction = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,2931,prediction = self.model_deployment.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,3467,>>> prediction = model.predict(image=uri)['prediction']
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,3470,>>> prediction = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/generic_model.py,3504,return super().predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/pytorch_model.py,115,>>> torch_model.predict(...)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/xgboost_model.py,110,">>> xgboost_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/xgboost_model.py,118,>>> xgboost_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/xgboost_model.py,178,">>> xgboost_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/xgboost_model.py,184,>>> xgboost_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/huggingface_model.py,129,>>> vision_model.predict(image)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/huggingface_model.py,130,>>> vision_model.predict(image_bytes)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/huggingface_model.py,173,>>> segmentation_model.predict(image)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/huggingface_model.py,174,>>> segmentation_model.predict(image_bytes)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/huggingface_model.py,223,>>> zero_shot_image_classification_model.predict(image)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/huggingface_model.py,224,>>> zero_shot_image_classification_model.predict(body)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/huggingface_model.py,314,>>> zero_shot_image_classification_model.predict(image)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/huggingface_model.py,315,>>> zero_shot_image_classification_model.predict(body)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/tensorflow_model.py,118,">>> tf_estimator.fit(x_train, y_train, epochs=1)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/tensorflow_model.py,128,>>> tf_model.predict(x_test[:1])
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/lightgbm_model.py,120,>>> lightgbm_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/lightgbm_model.py,187,>>> lightgbm_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/spark_model.py,118,>>> pipeline_model = pipeline.fit(training)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/spark_model.py,125,>>> spark_model.predict(training)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/spark_model.py,190,>>> pipeline_model = pipeline.fit(training)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/spark_model.py,197,>>> spark_model.predict(training)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/sklearn_model.py,105,">>> sklearn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/sklearn_model.py,115,>>> sklearn_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/sklearn_model.py,169,">>> sklearn_estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/framework/sklearn_model.py,176,>>> sklearn_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/transformer/onnx_transformer.py,29,">>> train_transformed = onnx_data_transformer.fit_transform(train.X, {""column_name1"": ""impute_value1"", ""column_name2"": ""impute_value2""}})"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/transformer/onnx_transformer.py,30,>>> test_transformed = onnx_data_transformer.transform(test.X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/transformer/onnx_transformer.py,244,"return self.fit(X, impute_values).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/deployment/model_deployment.py,852,>>> prediction = model_deployment.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/model/model_artifact_boilerplate/score.py,60,pred = model.predict(data).tolist()
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/type_discovery/typed_feature.py,348,X1 = v1.fit_transform(DocumentTypedFeature.corpus_processor(series))
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/ads/type_discovery/typed_feature.py,365,X2 = v2.fit_transform(DocumentTypedFeature.corpus_processor(series))
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/feature_types/test_statistical_metrics.py,318,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model_deployment/test_model_deployment.py,42,"test_result = self.test_model_deployment.predict(json_input=""test"")"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model_deployment/test_model_deployment.py,52,"self.test_model_deployment.predict(data=np.array([1, 2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model_deployment/test_model_deployment.py,64,self.test_model_deployment.predict(data=byte_data)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model_deployment/test_model_deployment.py,84,test_result = self.test_model_deployment.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/common/test_common_utils.py,225,"clf = RandomForestClassifier().fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_model_artifact.py,35,"clf = RandomForestClassifier().fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_model_artifact.py,182,est_pred = model.predict(self.X_sample)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_model_artifact.py,183,"art_pred = model_artifact.predict(self.X_sample)[""prediction""]"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_onnx_transformer.py,72,"X_t = data_transformer.fit_transform(train.X, {""C"": ""cat2"", ""D"": ""dog1""})"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_onnx_transformer.py,74,X_t_test = data_transformer.transform(test.X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_onnx_transformer.py,93,X_t_test2 = data_transformer2.transform(test.X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_onnx_transformer.py,103,X_t = data_transformer.fit_transform(train2.X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_onnx_transformer.py,105,X_t_test = data_transformer.transform(test2.X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_onnx_transformer.py,124,X_t_test2 = data_transformer2.transform(test2.X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_artifact_populate_metadata.py,62,"clf = RandomForestClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_artifact_populate_metadata.py,106,"gamma_reg_model.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_artifact_populate_metadata.py,107,"gamma_reg_model.score(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_artifact_populate_metadata.py,109,gamma_reg_model.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/default_setup/model/test_files/model_artifacts/score.py,115,"return {""prediction"": post_inference(model.predict(data))}"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/evaluator/test_evaluator.py,37,"est = LGBMClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/evaluator/test_evaluator.py,97,"est = est_class().fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/evaluator/test_evaluations_evaluator.py,41,"clf = model_type.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/evaluator/test_evaluations_evaluator.py,109,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/evaluator/test_evaluations_evaluator.py,110,"rf_clf = RandomForestClassifier(n_estimators=10).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/evaluator/test_evaluations_evaluator.py,157,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/evaluator/test_evaluations_evaluator.py,159,"rf_clf = RandomForestClassifier(n_estimators=10, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/evaluator/test_evaluations_evaluator.py,162,"svc_clf = SVC(kernel=""linear"", C=1.0, random_state=0, probability=True).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/evaluator/test_evaluations_evaluator.py,219,"tree_mod = tree.DecisionTreeClassifier(max_depth=3).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/opctl/test_opctl_local_model_deployment_backend.py,122,backend.predict()
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/opctl/test_opctl_local_model_deployment_backend.py,157,backend.predict()
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/opctl/test_opctl_local_model_deployment_backend.py,204,backend.predict()
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/opctl/test_opctl_model_deployment_backend.py,166,backend.predict()
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/dataset/test_dataset_target.py,84,rt.fit(employees)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/dataset/test_dataset_target.py,104,rt.fit(employees)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/dataset/test_dataset_target.py,111,rt.fit(employees)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,57,"model.fit(cls.X_train_iris, cls.y_train_iris)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,165,"clf.fit(cls.X_train, cls.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,179,"cls.xgb.fit(cls.X_iris, cls.y_iris)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,186,"cls.lgb.fit(cls.X_iris, cls.y_iris)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,195,"cls.lgb_reg.fit(cls.X_reg, y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,227,pred_skl = self.sklearn_model.estimator.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,249,pred_joblib = loaded_model.predict(self.X_test_iris.astype(np.float32))
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,250,pred_skl = self.sklearn_model.estimator.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,326,assert len(loaded_model.predict(self.X_test)) != 0
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,346,pred_xgboost = self.xgb.predict(self.X_iris)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,366,assert len(loaded_model.predict(self.X_iris)) != 0
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,386,pred_lgb = self.lgb.predict(self.X_iris)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,406,assert len(loaded_model.predict(self.X_iris)) != 0
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,426,pred_lgb = self.lgb_reg.predict(self.X_reg)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_sklearn_model.py,446,assert len(loaded_model.predict(self.X_reg)) != 0
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_generic_model.py,221,"cls.clr.fit(cls.X_train, cls.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_generic_model.py,733,"test_result = self.generic_model.predict(data=input_data, local=True)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_generic_model.py,734,expected_result = self.generic_model.estimator.predict(input_data).tolist()
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_generic_model.py,740,self.generic_model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_generic_model.py,758,"self.generic_model.predict(data=""test"")"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_generic_model.py,769,"self.generic_model.predict(data=""test"")"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_generic_model.py,791,test_result = self.generic_model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_generic_model.py,816,"test_result = self.generic_model.predict(data=""test"")"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_generic_model.py,945,test_result = self.generic_model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_tensorflow_model.py,74,"model.fit(self.x_train, self.y_train, epochs=1)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_info_extractor.py,69,"rf_clf = RandomForestRegressor(n_estimators=10).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_info_extractor.py,70,"rf_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_info_extractor.py,77,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_info_extractor.py,91,"clf.fit(digits.data[:-1], digits.target[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_info_extractor.py,104,"clf.fit(X_digits[:1000], y_digits[:1000])"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_info_extractor.py,120,rf_clf = RandomForestClassifier(n_estimators=10).fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_info_extractor.py,154,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_info_extractor.py,188,"model.fit(x_train, y_train, epochs=10, batch_size=1024)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_spark_pipeline_model.py,66,model = pipeline.fit(training)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_spark_pipeline_model.py,67,"prediction = model.transform(test).toPandas()[""prediction""].to_list()"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_spark_pipeline_model.py,88,model = pipeline.fit(training)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_spark_pipeline_model.py,89,"prediction = model.transform(test).toPandas()[""prediction""].to_list()"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_artifact.py,191,"clr.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_xgboost_model.py,94,cls.model_sklearn.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_xgboost_model.py,115,pred_xgboost = self.model_xgb_classification.predict(self.test_classification)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_xgboost_model.py,116,pred_json = loaded_model.predict(self.test_classification)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_xgboost_model.py,129,pred_xgboost = self.model_xgb_regression.predict(self.test_regression)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_xgboost_model.py,130,pred_json = loaded_model.predict(self.test_regression)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_xgboost_model.py,150,pred_xgboost = self.model_xgb_classification.predict(self.test_classification)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_xgboost_model.py,166,pred_sklearn = self.model_sklearn.predict(self.X_test_classification)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_xgboost_model.py,167,pred_json = loaded_model.predict(self.X_test_classification)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_xgboost_model.py,185,pred_xgboost = self.model_sklearn.predict(self.X_test_classification)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_metadata_mixin.py,44,"cls.rgr = regr.fit(cls.diabetes_X_train, cls.diabetes_y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_metadata_mixin.py,45,"cls.xgb_rgr = xgb_regr.fit(cls.diabetes_X_train, cls.diabetes_y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_lightgbm_model.py,48,"cls.LGBMClassifier.fit(cls.X_LGBMClassifier, y_LGBMClassifier)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_lightgbm_model.py,56,"cls.LGBMRegressor.fit(cls.X_LGBMRegressor, y_LGBMRegressor)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_lightgbm_model.py,69,assert all(loaded_model.predict(self.data) == self.bst.predict(self.data))
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_lightgbm_model.py,82,pred_lgbm = self.bst.predict(self.data)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_lightgbm_model.py,99,pred_lgbm = self.LGBMClassifier.predict(self.X_LGBMClassifier)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_lightgbm_model.py,122,loaded_model.predict(self.X_LGBMClassifier)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_lightgbm_model.py,123,== self.LGBMClassifier.predict(self.X_LGBMClassifier)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_lightgbm_model.py,139,loaded_model.predict(self.X_LGBMRegressor)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_model_framework_lightgbm_model.py,140,== self.LGBMRegressor.predict(self.X_LGBMRegressor)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/score.py,97,"return {""prediction"": model.predict(data.values).tolist()}"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_files/invalid_nested_model_artifacts/score.py,120,"return {""prediction"": post_inference(model.predict(data))}"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_files/nested_model_artifacts/artifacts/score.py,120,"return {""prediction"": post_inference(model.predict(data))}"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/model/test_files/valid_model_artifacts/score.py,120,"return {""prediction"": post_inference(model.predict(data))}"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/unitary/with_extras/hpo/test_hpo_search_cv.py,234,y = preprocessing.LabelEncoder().fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/opctl/opctl_tests_files/spark_test/gbt.py,42,oracle_attrition = vec_assembler.transform(oracle_attrition)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/opctl/opctl_tests_files/spark_test/gbt.py,47,model = gbt_model.fit(train)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/opctl/opctl_tests_files/spark_test/gbt.py,48,predictions = model.transform(test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/opctl/opctl_tests_files/linear_reg_test/main.py,25,"regr.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/opctl/opctl_tests_files/linear_reg_test/main.py,28,diabetes_y_pred = regr.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/model_deployment/test_model_deployment_v2.py,121,"result = model_deployment.predict(data={""line"": ""12""})"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_generic_model.py,125,"# result = sklearn_model.predict(data={""line"": ""12""}, auto_serialize_data=False)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_generic_model.py,134,# result_from_deployment = model_from_deploy.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_generic_model.py,197,"# result = sklearn_model.predict(data={""line"": ""12""}, auto_serialize_data=False)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_generic_model.py,206,# result_from_deployment = model_from_deploy.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_generic_model.py,271,"# result = sklearn_model.predict(data={""line"": ""12""}, auto_serialize_data=False)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_generic_model.py,280,# result_from_deployment = model_from_deploy.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_generic_model.py,345,"# result = sklearn_model.predict(data={""line"": ""12""}, auto_serialize_data=False)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_generic_model.py,354,# result_from_deployment = model_from_deploy.predict(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_prepare_artifact.py,43,df_transformed = le.fit_transform(self.df)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_prepare_artifact.py,48,"self.clf.fit(self.X, self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_prepare_artifact.py,239,self.train_X = le.fit_transform(self.train.X)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_prepare_artifact.py,242,"self.clf = XGBRegressor(n_estimators=10).fit(self.train_X, self.train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/test_oci_logging.py,191,"model_deployment.predict([1, 2, 3])"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model_deployment_test_files/container_default/api.py,62,prediction_lda = clf_lda.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model_deployment_test_files/container_all/api.py,62,prediction_lda = clf_lda.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/test_pipeline.py,278,deployment_pred = deployed_model.predict(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/spark_pipeline_local_score.py,172,"yhat = post_inference(model.transform(input), input_cols)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,54,label_encoder = label_encoder.fit(Y_clas)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,55,label_encoded_y = label_encoder.transform(Y_clas)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,80,lgb_origin = model_lgb.predict(X_test_reg[:100])
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,101,model_sklearn_reg.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,110,sklearn_reg_origin = model_sklearn_reg.predict(X_test_reg[:100])
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,130,"model_sklearn_clas.fit(X_train_clas, y_train_clas)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,131,sklearn_clas_origin = model_sklearn_clas.predict(X_test_clas)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,162,model_xgb_origin = model_xgb.predict(test_reg)[:100]
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,184,model_sklearn_reg.fit(
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,193,sklearn_reg_origin = model_sklearn_reg.predict(X_test_reg[:100])
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,214,"model_sklearn_clas.fit(X_train_clas, y_train_clas)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/lightgbm_and_xgboost.py,215,sklearn_clas_origin = model_sklearn_clas.predict(X_test_clas)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/tensorflow.py,30,"model.fit(self.x_train, self.y_train, epochs=1)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/spark_pipeline.py,52,model = pipeline.fit(training)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/spark_pipeline.py,53,"prediction = model.transform(test).toPandas()[""prediction""].to_list()"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/spark_pipeline.py,94,model = pipeline.fit(training)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/spark_pipeline.py,95,"prediction = model.transform(test).toPandas()[""prediction""].to_list()"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,38,imp_mean_X.fit(X_reg)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,39,X_train_imp = imp_mean_X.transform(X_train_reg)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,40,X_test_imp = imp_mean_X.transform(X_test_reg)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,57,y_train_clas = le.fit_transform(y_train_clas)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,58,y_test_clas = le.transform(y_test_clas)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,68,"model_reg.fit(X_train_imp, y_train_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,69,origin = model_reg.predict(X_test_imp[:100])
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,119,"model_sklearn_pipeline.fit(X_train_clas, y_train_clas)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,120,sklearn_pipeline_origin = model_sklearn_pipeline.predict(X_test_clas)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,172,"model_sklearn_pipeline.fit(X_train_clas, y_train_clas)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,173,sklearn_pipeline_origin = model_sklearn_pipeline.predict(X_test_clas)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,225,"model_sklearn_pipeline.fit(X_train_clas, y_train_clas)"
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/sklearn.py,226,sklearn_pipeline_origin = model_sklearn_pipeline.predict(X_test_clas)
/Users/cba/Desktop/github_datascience_code/download_code/oracle_accelerated-data-science/tests/integration/other/model/scripts/time_series_model.py,18,res_pre = mod_pre.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform_v1beta1/services/prediction_service/client.py,741,response = client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform_v1beta1/services/prediction_service/async_client.py,309,response = await client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/models.py,1580,prediction_response = self._prediction_client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/models.py,1644,prediction_response = await self._prediction_async_client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/models.py,2007,"""""""HTTP path to send prediction requests to, used when calling `PrivateEndpoint.predict()`"""""""
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/models.py,2254,response = my_private_endpoint.predict(instances=[...])
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/models.py,2677,(`Endpoint.predict()` or `Endpoint.explain()`). Such a Model can serve
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/models.py,2695,by using `Endpoint.predict()` or `Endpoint.explain()`.
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/models.py,2716,by using `Endpoint.predict()` or `Endpoint.explain()`.
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/explain/lit.py,154,prediction_object = self._endpoint.predict(instances)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/prediction/predictor.py,35,predictor.postprocess(predictor.predict(predictor.preprocess(prediction_input)))
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/prediction/handler.py,119,self._predictor.predict(self._predictor.preprocess(prediction_input))
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/prediction/local_model.py,432,predict_response = local_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/prediction/local_model.py,453,predict_response = local_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/prediction/xgboost/predictor.py,95,return self._booster.predict(instances)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/prediction/sklearn/predictor.py,80,return self._model.predict(instances)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/preview/vertex_ray/predict/xgboost/register.py,60,result = trainer.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/preview/vertex_ray/predict/torch/register.py,37,result = TorchTrainer.fit(...)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/preview/vertex_ray/predict/sklearn/register.py,60,result = trainer.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/preview/vertex_ray/predict/tensorflow/register.py,59,result = trainer.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/metadata/experiment_run_resource.py,1194,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/metadata/metadata.py,683,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/metadata/_models.py,382,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform/metadata/schema/google/artifact_schema.py,768,pred_y = model.predict(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform_v1/services/prediction_service/client.py,741,response = client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/google/cloud/aiplatform_v1/services/prediction_service/async_client.py,309,response = await client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,1204,response = client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,1229,client.predict()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,1259,response = await client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,1293,client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,1325,await client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,1348,client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,1365,await client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,3349,response = client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,3425,response = client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,3494,client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,3527,client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,3563,client.predict(**mock_args)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1beta1/test_prediction_service.py,3585,client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,1204,response = client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,1229,client.predict()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,1259,response = await client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,1293,client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,1325,await client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,1348,client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,1365,await client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,3352,response = client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,3428,response = client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,3497,client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,3530,client.predict(request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,3566,client.predict(**mock_args)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/gapic/aiplatform_v1/test_prediction_service.py,3588,client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_endpoints.py,1960,test_prediction = test_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_endpoints.py,2063,test_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_endpoints.py,2078,test_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_endpoints.py,2351,test_prediction = test_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2603,response = endpoint.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2626,"response = endpoint.predict(request=request, headers=headers)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2652,response = endpoint.predict(request_file=request_file)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2681,"response = endpoint.predict(request_file=request_file, headers=headers)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2704,endpoint.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2729,"endpoint.predict(request=request, request_file=request_file)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2748,endpoint.predict()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2768,endpoint.predict(request_file=request_file)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2790,endpoint.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_prediction.py,2816,"endpoint.predict(request=request, verbose=False)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_metadata.py,1711,"model.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_metadata_models.py,120,"model.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_metadata_models.py,156,"model.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_metadata_models.py,354,"model.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_metadata_models.py,406,"model.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_metadata_models.py,519,"xgb_model.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_metadata_models.py,576,"model.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_end_to_end.py,207,test_prediction = created_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,1678,response = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,1767,response = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,1801,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,1838,response = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,1906,response = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,3911,response = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,3939,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,3950,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,3982,response = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,4064,response = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,4080,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,4089,model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_language_models.py,4450,response = model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_autologging.py,619,"model.fit(X, y, epochs=5)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_autologging.py,897,# a subsequent model.fit() call should create another ExperimentRun
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_autologging.py,905,# the above model.fit() calls should not result in any data being written locally
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_explain_saved_model_metadata_builder_tf2_test.py,107,"subclassed_model.fit(x_train, y_train, batch_size=1, epochs=1)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/aiplatform/test_explain_saved_model_metadata_builder_tf2_test.py,175,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertex_ray/test_ray_prediction.py,200,"values = model.predict([[1, 1, 1, 1]])"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertex_ray/test_ray_prediction.py,302,"y_pred = estimator.predict([[10, 11]])"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertex_ray/test_ray_prediction.py,408,"y_pred = model.predict(xgboost.DMatrix(np.array([[1, 2]])))"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertex_ray/test_prediction_utils.py,26,"model.fit(train_x, train_y, epochs=1)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertex_ray/test_prediction_utils.py,41,"estimator.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertex_ray/test_prediction_utils.py,48,"return xgboost.XGBClassifier().fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_serializers.py,347,"sklearn_estimator.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_serializers.py,369,"sklearn_estimator.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_serializers.py,393,"sklearn_estimator.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_serializers.py,409,"sklearn_estimator.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_serializers.py,434,"sklearn_estimator.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_container_training.py,324,test_trainer.fit(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_container_training.py,398,test_trainer.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_container_training.py,428,test_trainer.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_container_training.py,456,test_trainer.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_container_training.py,522,test_trainer.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_container_training.py,586,test_trainer.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_tabnet_trainer.py,123,"test_tabnet_trainer.fit(training_data=_TEST_DATA, validation_data=_TEST_DATA)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_tabnet_trainer.py,320,"test_tabnet_trainer.fit(training_data=_TEST_DATA, validation_data=_TEST_DATA)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_tabnet_trainer.py,515,"test_tabnet_trainer.fit(training_data=_TEST_DATA, validation_data=_TEST_DATA)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_tabnet_trainer.py,625,test_predict_results = test_tabnet_trainer.predict(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_tabnet_trainer.py,679,test_predict_results = test_tabnet_trainer.predict(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_tabnet_trainer.py,738,test_predict_results = test_tabnet_trainer.predict(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_tabnet_trainer.py,782,test_tabnet_trainer.predict(pd.DataFrame())
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_tabnet_trainer.py,786,test_tabnet_trainer.predict(pd.DataFrame())
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_tabnet_trainer.py,799,test_tabnet_trainer.predict(pd.DataFrame())
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_developer_mark.py,253,@vertexai.preview.developer.mark.predict()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_developer_mark.py,267,@vertexai.preview.developer.mark.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_prediction.py,82,model.predict(_X_TEST)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_prediction.py,119,model.predict(_X_TEST)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,585,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,601,"returned_model = model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,615,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,672,"returned_history = model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,798,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,841,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,862,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,905,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,926,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,969,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1002,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1055,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1087,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1137,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1170,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1266,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1289,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1361,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1437,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1513,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1595,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1685,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1730,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1771,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1819,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1879,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1924,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,1977,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,2025,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,2074,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,2102,"model.fit(_X_TRAIN, _Y_TRAIN)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_remote_training.py,2145,"model.score(_X_TEST, _Y_TEST)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_vizier_hyperparameter_tuner.py,1210,@vertexai.preview.developer.mark.predict()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_vizier_hyperparameter_tuner.py,1404,"test_tuner.fit(x=_TEST_X_TEST, y=_TEST_Y_TEST_CLASSIFICATION_BINARY)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_vizier_hyperparameter_tuner.py,1456,test_tuner.fit(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_vizier_hyperparameter_tuner.py,1504,test_tuner.fit(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_vizier_hyperparameter_tuner.py,1543,test_tuner.fit(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/unit/vertexai/test_vizier_hyperparameter_tuner.py,1631,test_tuner.fit(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_e2e_tabular.py,161,"custom_prediction = custom_endpoint.predict([_INSTANCE], timeout=180.0)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_e2e_tabular.py,166,automl_prediction = automl_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_e2e_tabular.py,173,custom_endpoint.predict([_INSTANCE])
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_language_models.py,61,assert model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_language_models.py,141,assert model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_language_models.py,430,response1 = tuned_model1.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_language_models.py,446,tuned_model_response = tuned_model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_autologging.py,83,"model.fit(X, y, epochs=5)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_autologging.py,93,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_autologging.py,103,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_autologging.py,105,"model.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_autologging.py,117,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_model_monitoring.py,247,"self.endpoint.predict([DEFAULT_INPUT], use_raw_predict=True)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_prediction_cpr.py,69,local_predict_response = local_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_prediction_cpr.py,79,interactive_local_predict_response = interactive_local_endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_prediction_cpr.py,109,predict_response = endpoint.predict(instances=_PREDICTION_INPUT)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_model_interactions.py,41,prediction_response = self.endpoint.predict(instances=[_PREDICTION_INSTANCE])
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_model_interactions.py,45,prediction_with_raw_predict = self.endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiments.py,220,"model.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiment_model.py,56,"model.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiment_model.py,77,preds = loaded_model.predict(train_x)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiment_model.py,134,preds = loaded_model.predict(xgb.DMatrix(data=train_x))
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiment_model.py,162,"xgb_model.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiment_model.py,188,preds = loaded_model.predict(train_x)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiment_model.py,222,"model.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiment_model.py,251,preds = loaded_model.predict(train_x)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiment_model.py,344,"pred = endpoint.predict([[1, 2]])"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_experiment_model.py,365,"pred = endpoint.predict([[1, 2]])"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_resources/custom_job_script.py,28,"model = LinearRegression().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_resources/custom_job_script.py,29,"model.score(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_resources/california_housing_training_script.py,60,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/aiplatform/test_resources/cpr_user_code/predictor.py,54,outputs = self._model.predict(inputs)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_bigframes_tensorflow.py,104,"model.fit(train, epochs=10)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_bigframes_sklearn.py,104,X_train = transformer.fit_transform(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_bigframes_sklearn.py,135,X_test = transformer.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_bigframes_sklearn.py,164,"model.fit(train_X, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_tensorflow.py,84,X_train = transformer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_tensorflow.py,85,X_test = transformer.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_tensorflow.py,86,X_retrain = transformer.transform(X_retrain)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_tensorflow.py,108,"model.fit(tf_train_dataset, epochs=10)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_tensorflow.py,135,model.predict(tf_remote_prediction_test_data)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_tensorflow.py,157,"pulled_model.fit(tf_retrain_dataset, epochs=10)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_pytorch.py,89,@vertexai.preview.developer.mark.predict()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_pytorch.py,114,X_train = transformer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_pytorch.py,115,X_test = transformer.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_pytorch.py,116,X_retrain = transformer.transform(X_retrain)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_pytorch.py,172,model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_sklearn.py,90,X_train = transformer.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_sklearn.py,114,X_test = transformer.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_sklearn.py,131,X_retrain = transformer.transform(X_retrain)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_sklearn.py,143,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_sklearn.py,167,model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/tests/system/vertexai/test_sklearn.py,185,"pulled_model.fit(X_retrain_df, y_retrain_df)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/snippets/prediction_service/predict_text_classification_single_label_sample.py,43,response = client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/snippets/prediction_service/predict_tabular_regression_sample.py,44,response = client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/snippets/prediction_service/predict_sample.py,43,response = client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/snippets/prediction_service/predict_text_sentiment_analysis_sample.py,43,response = client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/snippets/prediction_service/predict_image_classification_sample.py,51,response = client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/snippets/prediction_service/predict_custom_trained_model_sample.py,49,response = client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/snippets/prediction_service/predict_image_object_detection_sample.py,51,response = client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/snippets/prediction_service/predict_tabular_classification_sample.py,44,response = client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/snippets/prediction_service/predict_text_entity_extraction_sample.py,44,response = client.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/generated_samples/aiplatform_generated_aiplatform_v1beta1_prediction_service_predict_async.py,44,response = await client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/generated_samples/aiplatform_generated_aiplatform_v1beta1_prediction_service_predict_sync.py,44,response = client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/generated_samples/aiplatform_v1beta1_generated_prediction_service_predict_async.py,51,response = await client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/generated_samples/aiplatform_generated_aiplatform_v1_prediction_service_predict_sync.py,44,response = client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/generated_samples/aiplatform_v1_generated_prediction_service_predict_async.py,51,response = await client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/generated_samples/aiplatform_generated_aiplatform_v1_prediction_service_predict_async.py,44,response = await client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/generated_samples/aiplatform_v1beta1_generated_prediction_service_predict_sync.py,51,response = client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/generated_samples/aiplatform_v1_generated_prediction_service_predict_sync.py,51,response = client.predict(request=request)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/model-builder/predict_text_classification_single_label_sample.py,27,"response = endpoint.predict(instances=[{""content"": content}], parameters={})"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/model-builder/predict_tabular_regression_sample.py,31,response = endpoint.predict(instances=instances)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/model-builder/predict_text_sentiment_analysis_sample.py,26,"response = endpoint.predict(instances=[{""content"": content}], parameters={})"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/model-builder/predict_image_classification_sample.py,48,response = endpoint.predict(instances=instances)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/model-builder/endpoint_predict_sample.py,27,prediction = endpoint.predict(instances=instances)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/model-builder/predict_tabular_classification_sample.py,40,response = endpoint.predict(instances=instances)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/samples/model-builder/predict_text_entity_extraction_sample.py,26,"response = endpoint.predict(instances=[{""content"": content}], parameters={})"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/language_models/_language_models.py,1264,"model.predict(""What is life?"")"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/language_models/_language_models.py,1343,prediction_response = self._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/language_models/_language_models.py,1861,"model.predict(""What is life?"")"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/language_models/_language_models.py,1948,response_obj = self._model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/language_models/_language_models.py,2097,prediction_response = self._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/language_models/_language_models.py,2655,prediction_response = self._model._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/language_models/_language_models.py,3135,print(generation_model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/language_models/_language_models.py,3140,print(completion_model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/language_models/_language_models.py,3228,prediction_response = self._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/vision_models/_vision_models.py,537,response = self._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/vision_models/_vision_models.py,816,response = self._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/vision_models/_vision_models.py,995,response = self._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/vision_models/_vision_models.py,1054,response = self._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/vision_models/_vision_models.py,1159,response = self._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/vision_models/_vision_models.py,1275,response = self._endpoint.predict(
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/developer/mark.py,167,@vertexai.preview.developer.mark.predict()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/tabular_models/tabnet_trainer.py,330,tabnet_trainer.fit(...)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/hyperparameter_tuning/vizier_hyperparameter_tuner.py,402,"return custom_metric(y_true=y_test, y_pred=self.predict(x_test))"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/hyperparameter_tuning/vizier_hyperparameter_tuner.py,441,"metric_value = model.score(x_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/hyperparameter_tuning/vizier_hyperparameter_tuner.py,444,predictions = model.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/hyperparameter_tuning/vizier_hyperparameter_tuner.py,878,# num_epochs will be passed to ExampleModel.fit()
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/hyperparameter_tuning/vizier_hyperparameter_tuner.py,879,"# (ex: ExampleModel.fit(x, y, num_epochs=5))"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/hyperparameter_tuning/vizier_hyperparameter_tuner.py,880,"tuner.fit(x, y, num_epochs=5)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/_workflow/driver/remote.py,67,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/_workflow/driver/__init__.py,58,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/googleapis_python-aiplatform/vertexai/preview/_workflow/shared/supported_frameworks.py,273,"# is sklearn's Transformer.fit_transform() method, whose output is always"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_ftrl.py,31,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_ftrl.py,35,p = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_automl.py,35,"model.fit(X_trn, y_trn)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_automl.py,36,p = model.predict(X_tst)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_automl.py,43,"model.fit(X_trn, y_trn)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_automl.py,44,p = model.predict(X_tst)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_automl.py,67,"model.fit(X_trn, y_trn)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_automl.py,68,p = model.predict(X_tst)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_automl.py,74,"model.fit(X_trn, y_trn)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_automl.py,75,p = model.predict(X_tst)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/model/test_classification_tree.py,27,y_pred = learner.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,30,X = dae.fit_transform(df[feature_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,51,"X = dae.fit_transform(trn[feature_cols], validation_data=[val[feature_cols]])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,71,X = dae.fit_transform(df[feature_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,89,"X = dae.fit_transform(df[feature_cols], df[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,95,X = dae.fit_transform(
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,110,"X = dae.fit_transform(df[feature_cols], df[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,132,"_ = sdae.fit_transform(trn[feature_cols], trn[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,142,_ = dae.fit_transform(df[feature_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,156,"_ = sdae2.fit_transform(trn[feature_cols], trn[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,169,"X_cat = te.fit_transform(df[cat_cols], df[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,176,"X_cat = te.fit_transform(df[cat_cols], df[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,182,"te.fit(df[cat_cols], df[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,183,X_cat = te.transform(df[cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,200,"X_emb = ee.fit_transform(X=df[feature_cols], y=df[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,210,"X_emb = ee.fit_transform(X=df[feature_cols], y=df[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,219,"X_emb = ee.fit_transform(X=df[feature_cols], y=df[TARGET_COL])"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,229,X_cat = te.fit_transform(df[cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,236,X_cat = te.fit_transform(df[cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,242,te.fit(df[cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_encoders.py,243,X_cat = te.transform(df[cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_lbe.py,20,lbe.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_lbe.py,21,_ = lbe.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_ohe.py,20,ohe.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/tests/preprocessing/test_ohe.py,21,X_new = ohe.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/model/automl.py,349,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/model/automl.py,379,"self.model.fit(X=X[self.features], y=y, eval_metric=""mae"", verbose=False)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/model/automl.py,383,return self.model.predict(X[self.features])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/model/automl.py,582,"return self.model.predict(X[self.features], num_iteration=self.n_best)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/categorical.py,210,self.label_encoder.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/categorical.py,253,self.label_encoder.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/categorical.py,255,return self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/categorical.py,544,X_cat = self.lbe.fit_transform(X[self.cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/categorical.py,595,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/categorical.py,638,model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/categorical.py,662,X_cat = self.lbe.transform(X[self.cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/categorical.py,671,"self.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/categorical.py,672,return self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/numerical.py,68,"self.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/numerical.py,70,return self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,421,X[self.cat_cols] = self.lbe.transform(X[self.cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,423,X[self.cat_cols] = self.lbe.fit_transform(X[self.cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,427,X_val[self.cat_cols] = self.lbe.transform(X_val[self.cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,429,X_val[self.cat_cols] = self.lbe.fit_transform(X_val[self.cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,455,self.model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,464,self.model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,484,X[self.cat_cols] = self.lbe.transform(X[self.cat_cols])
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,490,return self.encoder.predict(features)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,503,"self.fit(X, y, validation_data)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,504,return self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/preprocessing/autoencoder.py,610,"super().fit(X, y, validation_data)"
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/online_model/classification_tree.py,85,return self.right.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/jeongyoonlee_Kaggler/kaggler/online_model/classification_tree.py,87,return self.left.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/main.py,41,"pipeline_manager.predict(pipeline_name, dev_mode)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/main.py,51,"pipeline_manager.predict(pipeline_name, dev_mode)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/main.py,69,"pipeline_manager.predict(pipeline_name, dev_mode)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/callbacks.py,186,output = pipeline.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/preparation.py,227,kmeans.fit(features)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/pipeline_manager.py,105,pipeline.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/pipeline_manager.py,141,output = pipeline.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/pipeline_manager.py,172,output = pipeline.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/misc.py,38,prediction = self.estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,106,step_inputs[input_step.name] = input_step.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,121,step_output_data = self.transformer.transform(**step_inputs)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,124,step_output_data = self.transformer.fit_transform(**step_inputs)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,129,step_output_data = self.transformer.transform(**step_inputs)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,159,step_inputs[input_step.name] = input_step.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,174,step_output_data = self.transformer.transform(**step_inputs)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,179,step_output_data = self.transformer.transform(**step_inputs)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,264,"self.fit(*args, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,265,"return self.transform(*args, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,282,"self.fit(*args, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/base.py,283,"return self.transform(*args, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/sklearn/models.py,22,"self.estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/sklearn/models.py,35,"self.estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/sklearn/models.py,39,prediction = self.estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/sklearn/models.py,48,"self.estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/sklearn/models.py,52,transformed = self.estimator.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/sklearn/models.py,61,"self.estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/sklearn/models.py,65,transformed = self.estimator.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/sklearn/models.py,98,prediction = self.estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/sklearn/models.py,120,"estimator.fit(X, y[:, i])"
/Users/cba/Desktop/github_datascience_code/download_code/minerva-ml_open-solution-data-science-bowl-2018/src/steppy/pytorch/utils.py,133,return self.transform(*args)
/Users/cba/Desktop/github_datascience_code/download_code/codeperfectplus_machine-learning-web-applications/Regression Project/autompg/tests.py,10,result = model.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/codeperfectplus_machine-learning-web-applications/Regression Project/autompg/views.py,21,result = model.predict(data)[0]
/Users/cba/Desktop/github_datascience_code/download_code/codeperfectplus_machine-learning-web-applications/Classification Project/server/tests.py,8,print(model.predict(arr))
/Users/cba/Desktop/github_datascience_code/download_code/codeperfectplus_machine-learning-web-applications/Classification Project/server/views.py,17,result = model.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_xgboost.py,147,"kmeans = MiniBatchKMeans(n_clusters=100, batch_size=10000).fit(coords[sample_ind])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_xgboost.py,149,"train.loc[:, 'pickup_cluster'] = kmeans.predict(train[['pickup_latitude', 'pickup_longitude']])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_xgboost.py,150,"train.loc[:, 'dropoff_cluster'] = kmeans.predict(train[['dropoff_latitude', 'dropoff_longitude']])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_xgboost.py,151,"test.loc[:, 'pickup_cluster'] = kmeans.predict(test[['pickup_latitude', 'pickup_longitude']])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_xgboost.py,152,"test.loc[:, 'dropoff_cluster'] = kmeans.predict(test[['dropoff_latitude', 'dropoff_longitude']])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_xgboost.py,440,pred = model.predict(dtest)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_xgboost.py,444,pred = model.predict(dtest)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,43,encoder.fit(self.X[i])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,49,self.binarized_cols = self.binarizers[0].transform(self.X[self.cols_list[0]])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,52,binarized_col = self.binarizers[i].transform(self.X[self.cols_list[i]])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,144,#X_train_clean = full_pipeline.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,145,#X_test_clean = full_pipeline.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,187,"self.opt_XGBoost_reg.fit(self.X ,self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,188,"self.opt_forest_reg.fit(self.X ,self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,189,"self.opt_svm_reg.fit(self.X ,self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,192,self.y_xgb = opt_XGBoost_reg.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,193,self.y_rf = opt_forest_reg.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/ml_munging_functions.py,194,self.y_svm =opt_svm_reg.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/original_iceberg_tensorflow_cnn.py,68,datagen.fit(fudge_X_train)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,34,"alg.fit(dtrain[predictors], dtrain['Disbursed'],eval_metric='auc')"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,37,dtrain_predictions = alg.predict(dtrain[predictors])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,105,"gsearch1.fit(train[predictors],train[target])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,121,"gsearch2.fit(train[predictors],train[target])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,140,"gsearch2b.fit(train[predictors],train[target])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,165,"gsearch3.fit(train[predictors],train[target])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,210,"gsearch4.fit(train[predictors],train[target])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,225,"gsearch5.fit(train[predictors],train[target])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,243,"gsearch6.fit(train[predictors],train[target])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tuning_XGBoost_params.py,258,"gsearch7.fit(train[predictors],train[target])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tensorflow_cnn_from_scratch.py,223,predictions = list(model.predict(input_fn=predict_input_fn))
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/zillow_rf_model.py,35,lbl.fit(list(properties[c].values))
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/zillow_rf_model.py,36,properties[c] = lbl.transform(list(properties[c].values))
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/zillow_rf_model.py,55,"z_rf.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/zillow_rf_model.py,57,rf_y_test = z_rf.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/zillow_rf_model.py,68,"grid.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_explore.py,72,"knn_grid.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_explore.py,96,"ada_grid.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_explore.py,118,"gb_grid.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_explore.py,149,"knn_opt.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_explore.py,163,"ada_opt.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_explore.py,185,"gb_opt.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/iceberg_tensorflow_cnn.py,68,datagen.fit(fudge_X_train)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,99,"kmeans = MiniBatchKMeans(n_clusters=100, batch_size=10000).fit(coords[sample_ind])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,100,"cl_pickup = kmeans.predict(df[['pickup_longitude', 'pickup_latitude']])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,101,"cl_dropoff = kmeans.predict(df[['dropoff_longitude', 'dropoff_latitude']])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,149,pca = PCA().fit(coords) # define 2 main axis
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,150,"df['pickup_pca0'] = pca.transform(df[['pickup_longitude', 'pickup_latitude']])[:,0]"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,151,"df['pickup_pca1'] = pca.transform(df[['pickup_longitude', 'pickup_latitude']])[:,1]"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,152,"df['dropoff_pca0'] = pca.transform(df[['dropoff_longitude', 'dropoff_latitude']])[:,0]"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,153,"df['dropoff_pca1'] = pca.transform(df[['dropoff_longitude', 'dropoff_latitude']])[:,1]"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,361,y_train_pred = model_lgb.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,364,y_valid_pred = model_lgb.predict(X_valid)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM.py,418,y_test_pred = model_lgb.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,99,"kmeans = MiniBatchKMeans(n_clusters=100, batch_size=10000).fit(coords[sample_ind])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,100,"cl_pickup = kmeans.predict(df[['pickup_longitude', 'pickup_latitude']])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,101,"cl_dropoff = kmeans.predict(df[['dropoff_longitude', 'dropoff_latitude']])"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,149,pca = PCA().fit(coords) # define 2 main axis
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,150,"df['pickup_pca0'] = pca.transform(df[['pickup_longitude', 'pickup_latitude']])[:,0]"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,151,"df['pickup_pca1'] = pca.transform(df[['pickup_longitude', 'pickup_latitude']])[:,1]"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,152,"df['dropoff_pca0'] = pca.transform(df[['dropoff_longitude', 'dropoff_latitude']])[:,0]"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,153,"df['dropoff_pca1'] = pca.transform(df[['dropoff_longitude', 'dropoff_latitude']])[:,1]"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,361,y_train_pred = model_lgb.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,364,y_valid_pred = model_lgb.predict(X_valid)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/taxi_lightGBM_weather.py,418,y_test_pred = model_lgb.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_tensorflow_dnn.py,42,scaled_numerics = scaler.fit_transform(merged_dat[numeric_features])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_tensorflow_dnn.py,85,"dnn_clf.fit(train_x, train_y, batch_size=50, steps=50000)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/tf_nn_classification.py,55,scaled_numerics = scaler.fit_transform(merged_dat[numeric_features])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/model_template.py,19,test_y = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/predict_spending_rough.py,228,cat_train_1hot = encoder.fit_transform(train[col])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/predict_spending_rough.py,230,cat_test_1hot = encoder.transform(test[col])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/predict_spending_rough.py,348,test_y = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/predict_spending_rough.py,392,gsearch1.fit(dtrain)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/xgb_predict_valid_pca.py,60,PC_X_train = dim_red.fit_transform(X_train_changed)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/xgb_predict_valid_pca.py,61,PC_X_test = dim_red.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/xgb_predict_valid_pca.py,110,test_y = xbg_model1.predict(PC_X_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/xgb_predict_valid_set.py,50,test_y = xbg_model1.predict(xgb_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/nn_predict.py,80,dnn_y_pred = dnn_clf.predict(input_fn=output_function)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/xgb_predict_valid_reduce.py,72,test_y = xbg_model1.predict(xgb_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/clean_to_np_matrix.py,244,cat_train_1hot = encoder.fit_transform(train[col])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/clean_to_np_matrix.py,246,cat_test_1hot = encoder.transform(test[col])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/google_analytics/light_gbm_valid_set.py,46,"test_y = lgb_model1.predict(X_test, num_iteration = lgb_model1.best_iteration)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,104,x =encoder.fit_transform(train_x['Nat'])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,108,class_test.fit_transform(train_x[cat_attribs])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,110,class_test.transform()
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,126,encoder.fit(self.X[i])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,132,self.binarized_cols = self.binarizers[0].transform(self.X[self.cols_list[0]])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,135,binarized_col = self.binarizers[i].transform(self.X[self.cols_list[i]])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,161,train_num_processed = num_pipeline.fit_transform(train_x)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,162,train_cat_processed = cat_pipeline.fit_transform(train_x)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,169,test_num_processed = num_pipeline.transform(test_x)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,170,test_cat_processed = cat_pipeline.transform(test_x)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,199,"svm_grid_search.fit(train_x_clean, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,227,"rf_grid_search.fit(train_x_clean, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,260,"xgb_grid_search.fit(train_x_clean, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,285,"opt_svm_reg.fit(train_x_clean, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,293,"opt_forest_reg.fit(train_x_clean, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,309,"opt_XGBoost_reg.fit(train_x_clean, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,313,y1 = opt_XGBoost_reg.predict(test_x_clean)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,314,y2 = opt_svm_reg.predict(test_x_clean)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,315,y3 = opt_forest_reg.predict(test_x_clean)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,358,"self.opt_XGBoost_reg.fit(self.X ,self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,359,"self.opt_forest_reg.fit(self.X ,self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,360,"self.opt_svm_reg.fit(self.X ,self.y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,363,self.y_xgb = self.opt_XGBoost_reg.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,364,self.y_rf = self.opt_forest_reg.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,365,self.y_svm = self.opt_svm_reg.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,410,"opt_model.fit(train_x_clean, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/hockey_dat/hockey_front_to_back.py,411,final_predictions = opt_model.predict(test_x_clean)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/comments_toxicity/comments_xgb_final.py,28,"_gsearch.fit(x_vals, y_vals)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/comments_toxicity/comments_xgb_final.py,87,"xgb_final.fit(train_sparse, train[col].values, eval_metric='auc')"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/comments_toxicity/comments_xgb_final.py,89,optimal_predictions = xgb_final.predict(test_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/comments_toxicity/train_and_test_to_matrix.py,49,trn_term_doc = vec.fit_transform(train[COMMENT])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/comments_toxicity/train_and_test_to_matrix.py,50,test_term_doc = vec.transform(test[COMMENT])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/comments_toxicity/train_and_test_to_matrix.py,55,train_sparse = vec.fit_transform(train['comment_text'])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/comments_toxicity/train_and_test_to_matrix.py,56,test_sparse = vec.transform(test['comment_text'])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_classification/tf_nn_classification_bad.py,61,scaled_numerics = scaler.fit_transform(merged_dat[numeric_features])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_classification/insurance_explore.py,72,"knn_grid.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_classification/insurance_explore.py,96,"ada_grid.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_classification/insurance_explore.py,118,"gb_grid.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_classification/insurance_explore.py,149,"knn_opt.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_classification/insurance_explore.py,163,"ada_opt.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_classification/insurance_explore.py,185,"gb_opt.fit(train_x, train_y)"
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_classification/insurance_tf_nn_classification_downsample.py,69,scaled_numerics = scaler.fit_transform(merged_dat[numeric_features])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/insurance_classification/insurance_tf_nn_classification_upsample.py,72,scaled_numerics = scaler.fit_transform(merged_dat[numeric_features])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/california_housing/feature_engineering.py,341,encoded_ocean_train_1hot = encoder1.fit_transform(X_train['ocean_proximity'])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/california_housing/feature_engineering.py,344,encoded_ocean_test_1hot = encoder1.transform(X_test['ocean_proximity'])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/california_housing/feature_engineering.py,348,encoded_train_close_city = encoder2.fit_transform(X_train['close_city_name'])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/california_housing/feature_engineering.py,349,encoded_test_close_city = encoder2.transform(X_test['close_city_name'])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/california_housing/feature_engineering.py,354,encoded_train_big_city = encoder3.fit_transform(X_train['big_city_name'])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/california_housing/feature_engineering.py,355,encoded_test_big_city = encoder3.transform(X_test['big_city_name'])
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/california_housing/feature_engineering.py,382,X_train = scaler.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/california_housing/feature_engineering.py,383,X_test = scaler.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/CNuge_kaggle-code/california_housing/feature_engineering.py,453,xgb_pred = model.predict(dtest)
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Getting-started-with-Streamlit-for-Data-Science/Chapter05/penguin_ml/penguins_streamlit.py,67,"rfc.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Getting-started-with-Streamlit-for-Data-Science/Chapter05/penguin_ml/penguins_streamlit.py,69,y_pred = rfc.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Getting-started-with-Streamlit-for-Data-Science/Chapter05/penguin_ml/penguins_streamlit.py,111,"new_prediction = rfc.predict([[bill_length, bill_depth, flipper_length,"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Getting-started-with-Streamlit-for-Data-Science/Chapter04/penguin_ml/penguins_streamlit.py,67,"rfc.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Getting-started-with-Streamlit-for-Data-Science/Chapter04/penguin_ml/penguins_streamlit.py,69,y_pred = rfc.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Getting-started-with-Streamlit-for-Data-Science/Chapter04/penguin_ml/penguins_streamlit.py,111,"new_prediction = rfc.predict([[bill_length, bill_depth, flipper_length,"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Getting-started-with-Streamlit-for-Data-Science/Chapter08/penguin_ml/penguins_streamlit.py,67,"rfc.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Getting-started-with-Streamlit-for-Data-Science/Chapter08/penguin_ml/penguins_streamlit.py,69,y_pred = rfc.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/PacktPublishing_Getting-started-with-Streamlit-for-Data-Science/Chapter08/penguin_ml/penguins_streamlit.py,111,"new_prediction = rfc.predict([[bill_length, bill_depth, flipper_length,"
/Users/cba/Desktop/github_datascience_code/download_code/hackalog_easydata/{{ cookiecutter.repo_name }}/{{ cookiecutter.module_name }}/data/transformer_functions.py,144,"new_data = transformer.fit_transform(dset.data[subselect_column], **opts)"
/Users/cba/Desktop/github_datascience_code/download_code/hackalog_easydata/{{ cookiecutter.repo_name }}/{{ cookiecutter.module_name }}/data/transformer_functions.py,146,"new_data = transformer.fit_transform(dset.data, **opts)"
/Users/cba/Desktop/github_datascience_code/download_code/jocicmarko_kaggle-dsb2-keras/submission.py,69,"pred_systole = model_systole.predict(X, batch_size=batch_size, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jocicmarko_kaggle-dsb2-keras/submission.py,70,"pred_diastole = model_diastole.predict(X, batch_size=batch_size, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jocicmarko_kaggle-dsb2-keras/train.py,88,"hist_systole = model_systole.fit(X_train_aug, y_train[:, 0], shuffle=True, nb_epoch=epochs_per_iter,"
/Users/cba/Desktop/github_datascience_code/download_code/jocicmarko_kaggle-dsb2-keras/train.py,92,"hist_diastole = model_diastole.fit(X_train_aug, y_train[:, 1], shuffle=True, nb_epoch=epochs_per_iter,"
/Users/cba/Desktop/github_datascience_code/download_code/jocicmarko_kaggle-dsb2-keras/train.py,103,"pred_systole = model_systole.predict(X_train, batch_size=batch_size, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jocicmarko_kaggle-dsb2-keras/train.py,104,"pred_diastole = model_diastole.predict(X_train, batch_size=batch_size, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jocicmarko_kaggle-dsb2-keras/train.py,105,"val_pred_systole = model_systole.predict(X_test, batch_size=batch_size, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jocicmarko_kaggle-dsb2-keras/train.py,106,"val_pred_diastole = model_diastole.predict(X_test, batch_size=batch_size, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/mirzaevinom_data_science_bowl_2018/codes/model.py,2484,"self.keras_model.predict([molded_images, image_metas], verbose=0)"
/Users/cba/Desktop/github_datascience_code/download_code/thuijskens_production-tools/pipeline/dags/train_model.py,35,y = LabelBinarizer().fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/thuijskens_production-tools/pipeline/dags/train_model.py,54,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/thuijskens_production-tools/pipeline/dags/train_model.py,75,model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/thuijskens_production-tools/pipeline/tests/model_tests.py,20,y_pred = model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/FLung_nodule_models/create_nodules_from_modelv29.py,179,"preds = model.predict(voxels, batch_size=batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/FLung_nodule_models/score_ident_model_v1.py,210,"preds = model.predict(voxels, batch_size=batch_size).ravel()"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/FLung_nodule_models/nodule_clf_v1.py,233,"preds.append(model.predict(Xbatch, batch_size=batch_size).ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/aws/score_ident_model_v1_stage2.py,210,"preds = model.predict(voxels, batch_size=batch_size).ravel()"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/aws/score_ensemble2_final.py,47,"dbs = DBSCAN(eps=60, min_samples=2, metric='precomputed', leaf_size=2).fit(dist_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/aws/score_ensemble2_final.py,79,"preds.append( np.concatenate(model.predict( voxels, batch_size=64), axis=1))"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/aws/score_ensemble2_final.py,85,"preds.append( np.concatenate(model.predict( random_perturb(voxels,i < 4), batch_size=64), axis=1))"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/FLung_descriptor models/score_ensemble1_from_v29_candidates.py,50,"dbs = DBSCAN(eps=60, min_samples=2, metric='precomputed', leaf_size=2).fit(dist_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/FLung_descriptor models/score_ensemble1_from_v29_candidates.py,93,"Yhats.append(model.predict(random_perturb(voxels), batch_size=32))"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/training_code/FLung_descriptor models/score_ensemble1_from_v29_candidates.py,108,"Yhats_single.append(model.predict(random_perturb(voxels),batch_size=32))"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/score_ident_model_v1_stage2.py,210,"preds = model.predict(voxels, batch_size=batch_size).ravel()"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_nodules_from_modelv29.py,179,"preds = model.predict(voxels, batch_size=batch_size)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/score_ensemble1_from_v29_candidates.py,50,"dbs = DBSCAN(eps=60, min_samples=2, metric='precomputed', leaf_size=2).fit(dist_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/score_ensemble1_from_v29_candidates.py,93,"Yhats.append(model.predict(random_perturb(voxels), batch_size=32))"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/score_ensemble1_from_v29_candidates.py,108,"Yhats_single.append(model.predict(random_perturb(voxels),batch_size=32))"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/combine_solutions.py,36,"r.fit(Xmeta, Ymeta)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_preds_from_model_outputs.py,17,"lr.fit(X,y)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_preds_from_model_outputs.py,18,"#CalibratedClassifierCV(LogisticRegression(**lr_params), method='sigmoid', cv=15).fit(X,y)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_preds_from_model_outputs.py,19,"xtr = XTR(n_estimators=500, min_samples_leaf=20, max_features=.8).fit(X, y - lr_preds)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_preds_from_model_outputs.py,27,"base[:,1] += self.step_size * self.xtr.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_preds_from_model_outputs.py,69,"lr.fit(X,Y)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_preds_from_model_outputs.py,118,"ens1_lr.fit(X,Y)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_preds_from_model_outputs.py,194,"xt_fs.fit(Xfs, Yfs)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_preds_from_model_outputs.py,209,"xt_dsb1.fit(Xdsb1, Ydsb1)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/create_preds_from_model_outputs.py,224,"xt_dsb2.fit(Xdsb2, Ydsb2)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/score_ensemble2_final.py,47,"dbs = DBSCAN(eps=60, min_samples=2, metric='precomputed', leaf_size=2).fit(dist_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/score_ensemble2_final.py,79,"preds.append( np.concatenate(model.predict( voxels, batch_size=64), axis=1))"
/Users/cba/Desktop/github_datascience_code/download_code/dhammack_DSB2017/scoring_code/score_ensemble2_final.py,85,"preds.append( np.concatenate(model.predict( random_perturb(voxels,i < 4), batch_size=64), axis=1))"
/Users/cba/Desktop/github_datascience_code/download_code/learningOrchestra_mlToolKits/microservices/builder_image/builder.py,118,model = classifier.fit(features_training)
/Users/cba/Desktop/github_datascience_code/download_code/learningOrchestra_mlToolKits/microservices/builder_image/builder.py,125,evaluation_prediction = model.transform(features_evaluation)
/Users/cba/Desktop/github_datascience_code/download_code/learningOrchestra_mlToolKits/microservices/builder_image/builder.py,144,testing_prediction = model.transform(features_testing)
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/algorithm_comparison_praat.py,61,"model.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/algorithm_comparison_praat.py,62,predictions = model.predict(X_validation)
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/rescaled_data_algorithm_comparison.py,28,scaled = scaler.fit_transform(array)
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/rescaled_data_algorithm_comparison.py,65,"model.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/rescaled_data_algorithm_comparison.py,66,predictions = model.predict(X_validation)
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/algorithm_comparison.py,61,"model.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/algorithm_comparison.py,62,predictions = model.predict(X_validation)
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/knn.py,21,scaled = scaler.fit_transform(array)
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/knn.py,43,"clf.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Aastha2104_Parkinson-Disease-Prediction/knn.py,44,predictions = clf.predict(X_validation)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 24 - K-Means Clustering/data_preprocessing_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 24 - K-Means Clustering/data_preprocessing_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 24 - K-Means Clustering/data_preprocessing_template.py,23,"y_train = sc_y.fit_transform(y_train.reshape(-1,1))"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 24 - K-Means Clustering/kmeans.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 24 - K-Means Clustering/kmeans.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 24 - K-Means Clustering/kmeans.py,23,"y_train = sc_y.fit_transform(y_train.reshape(-1,1))"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 24 - K-Means Clustering/kmeans.py,30,kmeans.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 24 - K-Means Clustering/kmeans.py,40,y_kmeans = kmeans.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 25 - Hierarchical Clustering/data_preprocessing_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 25 - Hierarchical Clustering/data_preprocessing_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 25 - Hierarchical Clustering/data_preprocessing_template.py,23,"y_train = sc_y.fit_transform(y_train.reshape(-1,1))"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 25 - Hierarchical Clustering/hc.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 25 - Hierarchical Clustering/hc.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 25 - Hierarchical Clustering/hc.py,23,"y_train = sc_y.fit_transform(y_train.reshape(-1,1))"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 4 - Clustering/Section 25 - Hierarchical Clustering/hc.py,36,y_hc = hc.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/random_forest_classification.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/random_forest_classification.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/random_forest_classification.py,26,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/random_forest_classification.py,29,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/random_forest_classification.py,40,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/random_forest_classification.py,58,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/classification_template.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/classification_template.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/classification_template.py,27,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/classification_template.py,38,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 20 - Random Forest Classification/classification_template.py,56,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/kernel_svm.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/kernel_svm.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/kernel_svm.py,26,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/kernel_svm.py,29,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/kernel_svm.py,40,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/kernel_svm.py,58,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/classification_template.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/classification_template.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/classification_template.py,27,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/classification_template.py,38,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 17 - Kernel SVM/classification_template.py,56,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/classification_template.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/classification_template.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/classification_template.py,27,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/classification_template.py,38,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/classification_template.py,56,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/knn.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/knn.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/knn.py,26,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/knn.py,29,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/knn.py,40,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)/knn.py,58,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/decision_tree_classification-2.py,30,"clf = clf.fit(X,y)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/classification_template.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/classification_template.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/classification_template.py,27,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/classification_template.py,38,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/classification_template.py,56,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/decision_tree_classification.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/decision_tree_classification.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/decision_tree_classification.py,26,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/decision_tree_classification.py,29,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/decision_tree_classification.py,40,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 19 - Decision Tree Classification/decision_tree_classification.py,58,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/classification_template.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/classification_template.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/classification_template.py,27,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/classification_template.py,38,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/classification_template.py,56,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/svm.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/svm.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/svm.py,26,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/svm.py,29,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/svm.py,40,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)/svm.py,58,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 14 - Logistic Regression/logistic_regression.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 14 - Logistic Regression/logistic_regression.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 14 - Logistic Regression/logistic_regression.py,26,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 14 - Logistic Regression/logistic_regression.py,29,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 14 - Logistic Regression/logistic_regression.py,40,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 14 - Logistic Regression/logistic_regression.py,58,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/classification_template.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/classification_template.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/classification_template.py,27,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/classification_template.py,38,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/classification_template.py,56,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/naive_bayes.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/naive_bayes.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/naive_bayes.py,26,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/naive_bayes.py,29,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/naive_bayes.py,40,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 3 - Classification/Section 18 - Naive Bayes/naive_bayes.py,58,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 45 - Kernel PCA/kernel_pca.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 45 - Kernel PCA/kernel_pca.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 45 - Kernel PCA/kernel_pca.py,26,X_train = kpca.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 45 - Kernel PCA/kernel_pca.py,27,X_test = kpca.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 45 - Kernel PCA/kernel_pca.py,32,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 45 - Kernel PCA/kernel_pca.py,35,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 45 - Kernel PCA/kernel_pca.py,46,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 45 - Kernel PCA/kernel_pca.py,64,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 44 - Linear Discriminant Analysis (LDA)/lda.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 44 - Linear Discriminant Analysis (LDA)/lda.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 44 - Linear Discriminant Analysis (LDA)/lda.py,26,"X_train = lda.fit_transform(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 44 - Linear Discriminant Analysis (LDA)/lda.py,27,X_test = lda.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 44 - Linear Discriminant Analysis (LDA)/lda.py,32,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 44 - Linear Discriminant Analysis (LDA)/lda.py,35,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 44 - Linear Discriminant Analysis (LDA)/lda.py,46,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 44 - Linear Discriminant Analysis (LDA)/lda.py,64,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 43 - Principal Component Analysis (PCA)/pca.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 43 - Principal Component Analysis (PCA)/pca.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 43 - Principal Component Analysis (PCA)/pca.py,26,X_train = pca.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 43 - Principal Component Analysis (PCA)/pca.py,27,X_test = pca.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 43 - Principal Component Analysis (PCA)/pca.py,33,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 43 - Principal Component Analysis (PCA)/pca.py,36,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 43 - Principal Component Analysis (PCA)/pca.py,47,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 9 - Dimensionality Reduction/Section 43 - Principal Component Analysis (PCA)/pca.py,65,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing_Decision_Tree.py,30,X = cv.fit_transform(corpus).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing_Decision_Tree.py,40,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing_Decision_Tree.py,43,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing_RANDOM_FOREST.py,30,X = cv.fit_transform(corpus).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing_RANDOM_FOREST.py,40,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing_RANDOM_FOREST.py,43,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing.py,30,X = cv.fit_transform(corpus).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing.py,40,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing.py,43,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing/natural_language_processing_Max_entropy.py,41,#X = cv.fit_transform(corpus).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/keras-fire-detection/predict_fire.py,41,"preds = model.predict(np.expand_dims(image, axis=0))[0]"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/keras-fire-detection/train.py,133,"predictions = model.predict(testX, batch_size=config.BATCH_SIZE)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/keras-fire-detection/pyimagesearch/learningratefinder.py,148,self.model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/categorical_data.py,16,"imputer = imputer.fit(X[:, 1:3])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/categorical_data.py,17,"X[:, 1:3] = imputer.transform(X[:, 1:3])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/categorical_data.py,23,"X[:, 0] = labelencoder_X.fit_transform(X[:, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/categorical_data.py,25,X = onehotencoder.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/categorical_data.py,28,y = labelencoder_y.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/data_preprocessing_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/data_preprocessing_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/data_preprocessing_template.py,23,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/missing_data.py,16,"imputer = imputer.fit(X[:,1:3])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 1 - Data Preprocessing/missing_data.py,17,"X[:, 1:3] = imputer.transform(X[:, 1:3])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Tensorflow/Keras.py,43,"history = model.fit(train_images, train_labels,"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Tensorflow/Keras.py,57,predicted_cat = model.predict(test_image).argmax()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Tensorflow/keras_CNN.py,72,"history = model.fit(train_images, train_labels,"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Tensorflow/keras_RNN.py,30,"model.fit(x_train, y_train,"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 49 - XGBoost/xg_boost.py,19,"X[:, 1] = labelencoder_X_1.fit_transform(X[:, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 49 - XGBoost/xg_boost.py,21,"X[:, 2] = labelencoder_X_2.fit_transform(X[:, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 49 - XGBoost/xg_boost.py,23,X = onehotencoder.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 49 - XGBoost/xg_boost.py,33,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 49 - XGBoost/xg_boost.py,36,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/k_fold_cross_validation.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/k_fold_cross_validation.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/k_fold_cross_validation.py,26,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/k_fold_cross_validation.py,29,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/k_fold_cross_validation.py,46,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/k_fold_cross_validation.py,64,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/grid_search.py,20,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/grid_search.py,21,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/grid_search.py,26,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/grid_search.py,29,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/grid_search.py,50,"grid_search = grid_search.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/grid_search.py,59,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 10 - Model Selection & Boosting/Section 48 - Model Selection/grid_search.py,77,"plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 8 - Deep Learning/Section 41 - Recurrent Neural Network (RNN)/keras_RNN.py,30,"model.fit(x_train, y_train,"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 8 - Deep Learning/Section 39 - Artificial Neural Networks (ANN)/ann.py,21,"X[:, 1] = labelencoder_X_1.fit_transform(X[:, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 8 - Deep Learning/Section 39 - Artificial Neural Networks (ANN)/ann.py,23,"X[:, 2] = labelencoder_X_2.fit_transform(X[:, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 8 - Deep Learning/Section 39 - Artificial Neural Networks (ANN)/ann.py,25,X = onehotencoder.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 8 - Deep Learning/Section 39 - Artificial Neural Networks (ANN)/ann.py,35,X_train = sc.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 8 - Deep Learning/Section 39 - Artificial Neural Networks (ANN)/ann.py,36,X_test = sc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 8 - Deep Learning/Section 39 - Artificial Neural Networks (ANN)/ann.py,61,"classifier.fit(X_train, y_train, batch_size = 10, epochs = 100)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 8 - Deep Learning/Section 39 - Artificial Neural Networks (ANN)/ann.py,66,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/data_preprocessing_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/data_preprocessing_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/data_preprocessing_template.py,23,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/simple_linear_regression.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/simple_linear_regression.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/simple_linear_regression.py,23,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/simple_linear_regression.py,28,"regressor.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/simple_linear_regression.py,31,y_pred = regressor.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/simple_linear_regression.py,35,"plt.plot(X_train, regressor.predict(X_train), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression/simple_linear_regression.py,43,"plt.plot(X_train, regressor.predict(X_train), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/multiple_linear_regression.py,16,"X[:, 3] = labelencoder.fit_transform(X[:, 3])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/multiple_linear_regression.py,18,X = onehotencoder.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/multiple_linear_regression.py,30,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/multiple_linear_regression.py,31,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/multiple_linear_regression.py,33,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/multiple_linear_regression.py,38,"regressor.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/multiple_linear_regression.py,41,y_pred = regressor.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/data_preprocessing_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/data_preprocessing_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/data_preprocessing_template.py,23,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,16,"X[:, 3] = labelencoder.fit_transform(X[:, 3])"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,18,X = onehotencoder.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,30,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,31,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,33,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,38,"regressor.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,41,y_pred = regressor.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,48,"regressor_OLS = sm.OLS(endog=y, exog=X_opt).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,51,"regressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,54,"regressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,57,"regressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/multiple_linear_regression.py,60,"regressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/data_preprocessing_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/data_preprocessing_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Homework_Solutions/data_preprocessing_template.py,23,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/regression_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/regression_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/regression_template.py,23,"y_train = sc_y.fit_transform(y_train.reshape(-1,1))"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/regression_template.py,29,y_pred = regressor.predict(6.5)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/regression_template.py,33,"plt.plot(X, regressor.predict(X), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/regression_template.py,43,"plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/decision_tree_regression.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/decision_tree_regression.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/decision_tree_regression.py,23,"y_train = sc_y.fit_transform(y_train.reshape(-1,1))"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/decision_tree_regression.py,28,"regressor.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/decision_tree_regression.py,31,y_pred = regressor.predict([[6.5]])
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression/decision_tree_regression.py,37,"plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Regression_Template/regression_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Regression_Template/regression_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Regression_Template/regression_template.py,23,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Regression_Template/regression_template.py,29,y_pred = regressor.predict([[6.5]])
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Regression_Template/regression_template.py,33,"plt.plot(X, regressor.predict(X), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Regression_Template/regression_template.py,43,"plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,21,"X_test = sc_X.transform(X_test)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,26,"lin_reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,31,X_poly = poly_reg.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,32,"poly_reg.fit(X_poly, y)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,34,"lin_reg_2.fit(X_poly, y)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,38,"plt.plot(X, lin_reg.predict(X), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,46,"plt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,56,"plt.plot(X_grid, lin_reg_2.predict(poly_reg.fit_transform(X_grid)), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,63,lin_reg.predict([[6.5]])
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.py,66,lin_reg_2.predict(poly_reg.fit_transform([[6.5]]))
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/data_preprocessing_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/data_preprocessing_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/data_preprocessing_template.py,23,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/svr.py,21,X = sc_X.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/svr.py,22,"y = np.squeeze(sc_y.fit_transform(y.reshape(-1, 1)))"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/svr.py,27,"regressor.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/svr.py,30,y_pred = regressor.predict([[6.5]])
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/svr.py,35,"plt.plot(X, regressor.predict(X), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/svr.py,45,"plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/regression_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/regression_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/regression_template.py,23,"y_train = sc_y.fit_transform(y_train)"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/regression_template.py,29,y_pred = regressor.predict(6.5)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/regression_template.py,33,"plt.plot(X, regressor.predict(X), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/regression_template.py,43,"plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/regression_template.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/regression_template.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/regression_template.py,23,"y_train = sc_y.fit_transform(y_train.reshape(-1,1))"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/regression_template.py,29,y_pred = regressor.predict(6.5)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/regression_template.py,33,"plt.plot(X, regressor.predict(X), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/regression_template.py,43,"plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/random_forest_regression.py,20,X_train = sc_X.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/random_forest_regression.py,21,X_test = sc_X.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/random_forest_regression.py,23,"y_train = sc_y.fit_transform(y_train.reshape(-1,1))"""""""
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/random_forest_regression.py,28,"regressor.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/random_forest_regression.py,31,y_pred = regressor.predict([[6.5]])
/Users/cba/Desktop/github_datascience_code/download_code/Ashleshk_Machine-Learning-A-Z-hands-on-Python-And-R-in-data-Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression/random_forest_regression.py,37,"plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/classification/raindrop/model.py,318,"result_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/classification/brits/model.py,302,"result_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/classification/grud/model.py,273,"result_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/clustering/vader/model.py,207,# leverage the below loop to automatically fix the exception ValueError raised by gmm.fit()
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/clustering/vader/model.py,221,gmm.fit(samples)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/clustering/vader/model.py,537,"result_dict = self.predict(X, file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/clustering/crli/model.py,437,clustering = self.model.kmeans.fit_predict(clustering_latent)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/clustering/crli/model.py,483,"result_dict = self.predict(X, file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/cli/tuning.py,238,"model.fit(train_set=train_set, val_set=val_set)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/mean/model.py,142,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/timesnet/model.py,328,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/median/model.py,143,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/transformer/model.py,341,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/mrnn/model.py,294,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/brits/model.py,296,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/saits/model.py,410,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/csdi/model.py,474,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/gpvae/model.py,492,results_dict = self.predict(
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/locf/model.py,155,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/imputation/usgan/model.py,482,"results_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/forecasting/bttf/model.py,174,"result_dict = self.predict(X, file_type=file_type)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/data/generating.py,284,train_X = scaler.fit_transform(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/data/generating.py,285,val_X = scaler.transform(val_X)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/data/generating.py,286,test_X = scaler.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/data/generating.py,372,train_X = scaler.fit_transform(train_X)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/data/generating.py,373,val_X = scaler.transform(val_X)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/pypots/data/generating.py,374,test_X = scaler.transform(test_X)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/raindrop.py,59,"self.raindrop.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/raindrop.py,109,"self.raindrop.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/raindrop.py,110,results = self.raindrop.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/grud.py,56,"self.grud.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/grud.py,104,"self.grud.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/grud.py,105,results = self.grud.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/brits.py,57,"self.brits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/brits.py,61,results = self.brits.predict(TEST_SET)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/brits.py,107,"self.brits.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/classification/brits.py,108,results = self.brits.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/vader.py,63,"self.vader.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/vader.py,68,"clustering_results = self.vader.predict(TEST_SET, return_latent_vars=True)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/vader.py,116,"self.vader.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/vader.py,117,clustering_results = self.vader.predict(
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/crli.py,79,"self.crli_gru.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/crli.py,81,"self.crli_lstm.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/crli.py,128,"clustering_results = self.crli_gru.predict(TEST_SET, return_latent_vars=True)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/crli.py,139,"clustering_results = self.crli_lstm.predict(TEST_SET, return_latent_vars=True)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/crli.py,168,"self.crli_gru.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/clustering/crli.py,169,clustering_results = self.crli_gru.predict(
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/rmsprop.py,44,"self.saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/lr_schedulers.py,72,"saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/lr_schedulers.py,100,"saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/lr_schedulers.py,128,"saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/lr_schedulers.py,156,"saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/lr_schedulers.py,185,"saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/lr_schedulers.py,213,"saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/lr_schedulers.py,241,"saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/sgd.py,44,"self.saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/adagrad.py,44,"self.saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/adamw.py,44,"self.saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/adam.py,44,"self.saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/optim/adadelta.py,44,"self.saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/utils/visual.py,19,imputed_test_set = locf.predict(TEST_SET)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/timesnet.py,62,"self.timesnet.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/timesnet.py,66,imputation_results = self.timesnet.predict(TEST_SET)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/timesnet.py,113,"self.timesnet.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/timesnet.py,114,imputation_results = self.timesnet.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,38,"test_X_imputed_zero = self.locf_zero.predict(TEST_SET)[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,47,"test_X_imputed_backward = self.locf_backward.predict(TEST_SET)[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,58,"test_X_imputed_median = self.locf_median.predict(TEST_SET)[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,69,"test_X_imputed_nan = self.locf_nan.predict(TEST_SET)[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,81,"test_X_imputed_zero = self.locf_zero.predict({""X"": X})[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,88,"test_X_imputed_backward = self.locf_backward.predict({""X"": X})[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,99,"test_X_imputed_median = self.locf_median.predict({""X"": X})[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,110,"test_X_imputed_nan = self.locf_nan.predict({""X"": X})[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,117,"self.locf_backward.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/locf.py,118,imputation_results = self.locf_backward.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/gpvae.py,57,"self.gp_vae.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/gpvae.py,61,"imputed_X = self.gp_vae.predict(TEST_SET, n_sampling_times=2)[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/gpvae.py,104,"self.gp_vae.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/gpvae.py,105,"imputed_X = self.gp_vae.predict(H5_TEST_SET_PATH, n_sampling_times=2)["
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/csdi.py,62,"self.csdi.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/csdi.py,66,"imputed_X = self.csdi.predict(TEST_SET, n_sampling_times=2)[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/csdi.py,112,"self.csdi.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/csdi.py,113,imputation_results = self.csdi.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/mean.py,34,"test_X_imputed = self.mean.predict(TEST_SET)[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/mean.py,50,"test_X_imputed = self.mean.predict({""X"": X})[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/mean.py,59,"self.mean.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/mean.py,60,imputation_results = self.mean.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/transformer.py,63,"self.transformer.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/transformer.py,112,"self.transformer.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/transformer.py,113,imputation_results = self.transformer.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/mrnn.py,57,"self.mrnn.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/mrnn.py,103,"self.mrnn.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/mrnn.py,104,imputation_results = self.mrnn.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/median.py,34,"test_X_imputed = self.median.predict(TEST_SET)[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/median.py,50,"test_X_imputed = self.median.predict({""X"": X})[""imputation""]"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/median.py,59,"self.median.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/median.py,60,imputation_results = self.median.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/saits.py,63,"self.saits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/saits.py,67,"imputation_results = self.saits.predict(TEST_SET, return_latent_vars=True)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/saits.py,115,"self.saits.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/saits.py,116,imputation_results = self.saits.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/usgan.py,59,"self.usgan.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/usgan.py,106,"self.usgan.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/usgan.py,107,imputation_results = self.usgan.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/brits.py,57,"self.brits.fit(TRAIN_SET, VAL_SET)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/brits.py,103,"self.brits.fit(H5_TRAIN_SET_PATH, H5_VAL_SET_PATH)"
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/imputation/brits.py,104,imputation_results = self.brits.predict(H5_TEST_SET_PATH)
/Users/cba/Desktop/github_datascience_code/download_code/WenjieDu_PyPOTS/tests/forecasting/bttf.py,39,"predictions = self.bttf.predict(TEST_SET)[""forecasting""]"
/Users/cba/Desktop/github_datascience_code/download_code/scikit-beam_scikit-beam/skbeam/core/fitting/xrf_model.py,1102,"result = self.mod.fit(spectrum, pars, x=channel_number, weights=weights, method=method, fit_kws=kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/scikit-beam_scikit-beam/skbeam/core/fitting/tests/test_lineshapes.py,463,"result = elastic_model.fit(out, x=x, coherent_sct_amplitude=10)"
/Users/cba/Desktop/github_datascience_code/download_code/scikit-beam_scikit-beam/skbeam/core/fitting/tests/test_lineshapes.py,528,"result = cm.fit(out, x=x, params=p, compton_amplitude=20, coherent_sct_energy=10)"
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter08_classifiers/example.py,26,"model.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter17_time_series/page_views.py,29,"linear.fit(X, ss)"
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter17_time_series/page_views.py,82,linear.fit(
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter17_time_series/page_views.py,85,test_preds_array = linear.predict(
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter11_regression/diabetes.py,14,"linear.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter11_regression/diabetes.py,15,preds_linear = linear.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter11_regression/diabetes.py,30,"lasso.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter11_regression/diabetes.py,31,preds_lasso = lasso.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter10_clustering_dim_reduction/eigenfaces.py,17,model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter10_clustering_dim_reduction/eigenfaces.py,25,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter10_clustering_dim_reduction/eigenfaces.py,26,X_reduced = pca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter10_clustering_dim_reduction/eigenfaces.py,28,model_reduced.fit(X_reduced)
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter24_advanced_classifiers/recurrent_net.py,20,"model.fit(X_train.reshape((54,11,1)), Y_train, nb_epoch=5)"
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter24_advanced_classifiers/perceptron.py,20,"model.fit(X_train, Y_train, nb_epoch=5)"
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter24_advanced_classifiers/convolutional_net.py,60,"model.fit(X_train, Y_train, nb_epoch=10)"
/Users/cba/Desktop/github_datascience_code/download_code/field-cady_the_data_science_handbook/chapter24_advanced_classifiers/convolutional_net.py,62,preds = model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/prodmodel_prodmodel/example/build.py,16,education_scores = rules.transform(
/Users/cba/Desktop/github_datascience_code/download_code/prodmodel_prodmodel/example/build.py,84,model = rules.transform(
/Users/cba/Desktop/github_datascience_code/download_code/prodmodel_prodmodel/example/build.py,107,test_predictions = rules.transform(
/Users/cba/Desktop/github_datascience_code/download_code/prodmodel_prodmodel/example/build.py,121,evaluate = rules.transform(
/Users/cba/Desktop/github_datascience_code/download_code/prodmodel_prodmodel/example/predict.py,2,return model.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/prodmodel_prodmodel/example/train.py,6,"clf = clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/prodmodel_prodmodel/tests/prodmodel/rules/test_rules.py,31,"target = undertest.transform(file='/home/abc/x.py', fn='tf', streams={'s': self._data_stream()})"
/Users/cba/Desktop/github_datascience_code/download_code/prodmodel_prodmodel/integration-tests/example/build.py,84,average_age = rules.transform(
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Build_3.py,51,"model.fit(predictors, target)"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Build_3.py,72,"model.fit(predictors, target)"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Build_3.py,78,predictions = model.predict(pred_data)
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Build_3.py,107,"model.fit(predictors, target)"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Build_3.py,126,"hist = model.fit(predictors, target, validation_split=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Build_3.py,151,"model.fit(predictors, target, epochs=30, validation_split=0.3,"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Build_3.py,174,"model_1_training = model_1.fit(predictors, target, epochs=15,"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Build_3.py,180,"model_2_training = model_2.fit(predictors, target, epochs=15,"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Customer Segmentation_Code_Spyder.py,32,matrix['cluster'] = cluster.fit_predict(matrix[matrix.columns[2:]])
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Customer Segmentation_Code_Spyder.py,38,"matrix['x'] = pca.fit_transform(matrix[x_cols])[:,0]"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Customer Segmentation_Code_Spyder.py,39,"matrix['y'] = pca.fit_transform(matrix[x_cols])[:,1]"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Customer Segmentation_Code_Spyder.py,61,cluster_centers = pca.transform(cluster.cluster_centers_)
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Optimise_4.py,33,"model.fit(predictors, target)"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Optimise_4.py,53,"hist = model.fit(predictors, target, validation_split=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Optimise_4.py,78,"model.fit(predictors, target, epochs=30, validation_split=0.3,"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Optimise_4.py,102,"model_1_training = model_1.fit(predictors, target, epochs=15,"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Optimise_4.py,108,"model_2_training = model_2.fit(predictors, target, epochs=15,"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Optimise_4.py,142,"model_1_training = model_1.fit(predictors, target, epochs=20,"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Optimise_4.py,148,"model_2_training = model_2.fit(predictors, target, epochs=20,"
/Users/cba/Desktop/github_datascience_code/download_code/qalhata_Python-Scripts-Repo-on-Data-Science/Deep_Learning_KerasModel_Optimise_4.py,180,"model.fit(X, y, validation_split=0.3)"
/Users/cba/Desktop/github_datascience_code/download_code/CenterForOpenScience_SHARE/tests/share/transformers/test_oai_dc.py,54,res = transformer.transform(datum)
/Users/cba/Desktop/github_datascience_code/download_code/CenterForOpenScience_SHARE/tests/share/transformers/test_swbiodiversity_transformer.py,53,graph = transformer.transform(raw_datum)
/Users/cba/Desktop/github_datascience_code/download_code/CenterForOpenScience_SHARE/tests/share/transformers/test_socialscienceregistry_transformer.py,58,graph = transformer.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/CenterForOpenScience_SHARE/trove/extract/legacy_sharev2.py,21,_sharev2graph = _transformer.transform(input_document)
/Users/cba/Desktop/github_datascience_code/download_code/CenterForOpenScience_SHARE/share/transform/chain/transformer.py,51,ret = super().transform(datum)
/Users/cba/Desktop/github_datascience_code/download_code/UpstageAI_dataverse/dataverse/etl/quality/language.py,64,"labels, scores = model.predict(text, k=top_k)"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/models/seq2seq_class.py,193,"result = self.model.predict(x=[batch_inputs[:,:,i,:], batch_ruitu[:,:,i,:], batch_ids[:,:,i], batch_times])"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/models/seq2seq_class.py,297,"assert self.pred_result is not None, 'You must run self.predict(batch_inputs, batch_ruitu) firstly!!'"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/models/competition_model_class.py,139,"result = self.model.predict(x=[batch_ruitu[:,:,i,:]])"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/models/competition_model_class.py,153,"print('You must run self.predict(batch_inputs, batch_ruitu) firstly!!')"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/models/competition_model_class.py,403,"result = self.model.predict(x=[batch_inputs[:,:,i,:], batch_ruitu[:,:,i,:]])"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/models/competition_model_class.py,420,"assert self.pred_result is not None, 'You must run self.predict(batch_inputs, batch_ruitu) firstly!!'"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/models/competition_model_class.py,702,"result = self.model.predict(x=[batch_inputs[:,:,i,:], batch_ruitu[:,:,i,:], batch_ids[:,:,i], batch_times])"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/models/competition_model_class.py,892,"assert self.pred_result is not None, 'You must run self.predict(batch_inputs, batch_ruitu) firstly!!'"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/models/competition_model_class.py,1132,"result = self.model.predict(x=[batch_inputs[:,:,i,:], batch_ruitu[:,:,i,:], batch_ids[:,:,i]])"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/run/Train_from_scratch.py,56,"enc_dec.fit(train_dict['input_obs'], train_dict['input_ruitu'], train_dict['ground_truth'],"
/Users/cba/Desktop/github_datascience_code/download_code/BruceBinBoxing_Deep_Learning_Weather_Forecasting/src/data/helper.py,357,"result = model.predict(x=[batch_inputs[:,:,i,:], batch_ruitu[:,:,i,:], batch_ids[:,:,i], batch_times])"
/Users/cba/Desktop/github_datascience_code/download_code/llSourcell_gender_classification_challenge/demo.py,20,"clf = clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/llSourcell_gender_classification_challenge/demo.py,22,"prediction = clf.predict([[190, 70, 43]])"
/Users/cba/Desktop/github_datascience_code/download_code/chrisclark_PythonForDataScience/crossValidate.py,14,new_train_data = imp.fit_transform(train)
/Users/cba/Desktop/github_datascience_code/download_code/chrisclark_PythonForDataScience/crossValidate.py,26,"probas = cfr.fit(new_train_data[traincv], target[traincv]).predict_proba(new_train_data[testcv])"
/Users/cba/Desktop/github_datascience_code/download_code/chrisclark_PythonForDataScience/makeSubmission.py,17,"rf.fit(train, target)"
/Users/cba/Desktop/github_datascience_code/download_code/hmcuesta_PDA_Book/Chapter8/PCA-SVM.py,13,"z = pca.transform(x, k=2)"
/Users/cba/Desktop/github_datascience_code/download_code/jacobkie_2018DSB/script_final/predict_test.py,95,"preds = model.keras_model.predict(X_nb, batch_size = 1, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jacobkie_2018DSB/script_final/predict_test.py,102,"y_preds = model.keras_model.predict(X, batch_size = 1, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jacobkie_2018DSB/script_final/predict_test.py,154,"y_preds = model.keras_model.predict(inputs, batch_size = 1, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jacobkie_2018DSB/script_final/predict_test.py,203,"y_preds = model.keras_model.predict(inputs, batch_size = 1, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jacobkie_2018DSB/script_final/predict_test.py,293,"preds = model.keras_model.predict(X_nb, batch_size = 1, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jacobkie_2018DSB/script_final/predict_test.py,301,"y_preds = model.keras_model.predict(X, batch_size = 1, verbose=1)"
/Users/cba/Desktop/github_datascience_code/download_code/jacobkie_2018DSB/script_final/model_rcnn_weight.py,557,"self.keras_model.predict([molded_images, image_metas], verbose=0)"
/Users/cba/Desktop/github_datascience_code/download_code/jacobkie_2018DSB/script_final/eda.py,43,train_df['shape_id'] = LabelEncoder().fit_transform(train_df['shape'])
/Users/cba/Desktop/github_datascience_code/download_code/Macuyiko_webscrapingfordatascience/python-examples/captcha-cracking/train.py,39,lb = LabelBinarizer().fit(Y_train)
/Users/cba/Desktop/github_datascience_code/download_code/Macuyiko_webscrapingfordatascience/python-examples/captcha-cracking/train.py,40,Y_train = lb.transform(Y_train)
/Users/cba/Desktop/github_datascience_code/download_code/Macuyiko_webscrapingfordatascience/python-examples/captcha-cracking/train.py,41,Y_test = lb.transform(Y_test)
/Users/cba/Desktop/github_datascience_code/download_code/Macuyiko_webscrapingfordatascience/python-examples/captcha-cracking/train.py,60,"model.fit(X_train, Y_train, validation_data=(X_test, Y_test),"
/Users/cba/Desktop/github_datascience_code/download_code/Macuyiko_webscrapingfordatascience/python-examples/captcha-cracking/apply.py,31,prediction = model.predict(letter)
/Users/cba/Desktop/github_datascience_code/download_code/Macuyiko_webscrapingfordatascience/python-examples/fashion-clustering/analysis.py,40,X_tsne = tsne.fit_transform(image_np)
/Users/cba/Desktop/github_datascience_code/download_code/PratyushTripathy_Landsat-Classification-Using-Neural-Network/190826_TF2_builtupNeuralNetwork_tutorial_PT.py,72,"model.fit(xTrain, yTrain, epochs=2)"
/Users/cba/Desktop/github_datascience_code/download_code/PratyushTripathy_Landsat-Classification-Using-Neural-Network/190826_TF2_builtupNeuralNetwork_tutorial_PT.py,75,yTestPredicted = model.predict(xTest)
/Users/cba/Desktop/github_datascience_code/download_code/PratyushTripathy_Landsat-Classification-Using-Neural-Network/190826_TF2_builtupNeuralNetwork_tutorial_PT.py,87,predicted = model.predict(featuresHyderabad)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/text.py,557,"model.fit(train_data, padded_sents)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/app/chunkparser_app.py,743,"self._eval_score.score(gold, guess)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/classify/scikitlearn.py,80,X = self._vectorizer.transform(featuresets)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/classify/scikitlearn.py,82,return [classes[i] for i in self._clf.predict(X)]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/classify/scikitlearn.py,91,X = self._vectorizer.transform(featuresets)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/classify/scikitlearn.py,112,X = self._vectorizer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/classify/scikitlearn.py,113,y = self._encoder.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/classify/scikitlearn.py,114,"self._clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/chunk/util.py,68,"...     chunkscore.score(correct, guess)              # doctest: +SKIP"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/chunk/api.py,50,"chunkscore.score(correct, self.parse(correct.leaves()))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/chunk/regexp.py,1333,"chunkscore.score(gold, test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/chunk/named_entity.py,333,"chunkscore.score(correct, guess)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,48,model.fit(bigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,68,"assert pytest.approx(mle_bigram_model.score(word, context), 1e-4) == expected_score"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,131,model.fit(trigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,153,"assert pytest.approx(mle_trigram_model.score(word, context), 1e-4) == expected_score"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,159,model.fit(bigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,189,"pytest.approx(lidstone_bigram_model.score(word, context), 1e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,222,model.fit(trigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,240,"pytest.approx(lidstone_trigram_model.score(word, context), 1e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,248,model.fit(bigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,279,"pytest.approx(laplace_bigram_model.score(word, context), 1e-4) == expected_score"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,315,model.fit(trigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,335,"# mle.score('c', ['b']) = 0.5"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,353,"pytest.approx(wittenbell_trigram_model.score(word, context), 1e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,372,model.fit(trigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,416,"pytest.approx(kneserney_trigram_model.score(word, context), 1e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,424,model.fit(trigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,465,"pytest.approx(absolute_discounting_trigram_model.score(word, context), 1e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,473,model.fit(trigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,502,"pytest.approx(stupid_backoff_trigram_model.score(word, context), 1e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,515,model.fit(bigram_training_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,544,"scores_for_context = sum(model.score(w, context) for w in model.vocab)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/test/unit/lm/test_models.py,573,mle_trigram_model.fit(more_training_text)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/translate/stack_decoder.py,481,"self.items.sort(key=lambda h: h.score(), reverse=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/translate/stack_decoder.py,490,threshold = self.items[0].score() + self.__log_beam_threshold
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/translate/stack_decoder.py,492,if hypothesis.score() < threshold:
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/lm/__init__.py,116,">>> lm.fit(train, vocab)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/lm/__init__.py,157,">>> lm.score(""a"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/lm/__init__.py,163,">>> lm.score(""<UNK>"") == lm.score(""aliens"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/lm/__init__.py,169,">>> lm.score(""b"", [""a""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/lm/api.py,145,"return log_base2(self.score(word, context))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/lm/api.py,190,">>> lm.fit([[(""a"", ""b""), (""b"", ""c"")]], vocabulary_text=['a', 'b', 'c'])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/lm/api.py,191,">>> lm.fit([[(""a"",), (""b"",), (""c"",)]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/lm/api.py,217,"tuple(self.score(w, context) for w in samples),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/parse/nonprojectivedependencyparser.py,282,self.scores = self._scorer.score(graph)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/parse/transitionparser.py,536,"model.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/parse/transitionparser.py,601,# y_pred = model.predict(x_test)[0]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/tag/perceptron.py,187,"tag, conf = self.model.predict(features, return_conf)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/nltk/tag/perceptron.py,226,"guess, _ = self.model.predict(feats)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/__init__.py,44,">>> c = Chebyshev.fit(xdata, ydata, deg=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/__init__.py,79,"- ``Poly.fit(x, y, deg)``   -- ``p`` of degree ``deg`` with coefficients"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/tests/test_classes.py,140,"Poly.fit(x, y, 2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/tests/test_classes.py,152,"p = Poly.fit(x, y, 3)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/tests/test_classes.py,160,"p = Poly.fit(x, y, 3, domain=d, window=w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/tests/test_classes.py,164,"p = Poly.fit(x, y, [0, 1, 2, 3], domain=d, window=w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/tests/test_classes.py,170,"p = Poly.fit(x, y, 3, [])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/tests/test_classes.py,173,"p = Poly.fit(x, y, [0, 1, 2, 3], [])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/tests/test_classes.py,181,"p1 = Poly.fit(x[::2], z[::2], 3)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/tests/test_classes.py,182,"p2 = Poly.fit(x, z, 3, w=w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/numpy/polynomial/tests/test_classes.py,183,"p3 = Poly.fit(x, z, [0, 1, 2, 3], w=w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,82,"estimator = _ConstantPredictor().fit(X, unique_y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,85,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,98,return estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,299,">>> clf = OneVsRestClassifier(SVC()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,300,">>> clf.predict([[-19, -20], [9, 9], [-5, 5]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,330,Y = self.label_binarizer_.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,399,self.label_binarizer_.fit(self.classes_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,408,Y = self.label_binarizer_.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,702,"...     LinearSVC(random_state=0)).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,703,>>> clf.predict(X_test[:10])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,884,"[est.predict(Xi) for est, Xi in zip(self.estimators_, Xs)]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,1010,"...     random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multiclass.py,1011,">>> clf.predict([[0, 0, 0, 0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,108,>>> X_features = ps.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,110,">>> clf.fit(X_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,112,">>> clf.score(X_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,297,>>> X_features = rbf_feature.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,299,">>> clf.fit(X_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,301,">>> clf.score(X_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,431,">>> X_features = chi2_feature.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,433,">>> clf.fit(X_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,435,">>> clf.score(X_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,576,">>> X_transformed = chi2sampler.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,578,">>> clf.fit(X_transformed, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,580,">>> clf.score(X_transformed, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,827,>>> data_transformed = feature_map_nystroem.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,828,">>> clf.fit(data_transformed, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_approximation.py,830,">>> clf.score(data_transformed, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/random_projection.py,492,>>> X_new = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/random_projection.py,642,>>> X_new = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/isotonic.py,224,">>> iso_reg = IsotonicRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/isotonic.py,225,">>> iso_reg.predict([.1, .2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/isotonic.py,415,return self.transform(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,42,"estimator.fit(X, y, sample_weight=sample_weight, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,44,"estimator.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,305,">>> clf = MultiOutputRegressor(Ridge(random_state=123)).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,306,>>> clf.predict(X[[0]])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,400,">>> clf = MultiOutputClassifier(KNeighborsClassifier()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,401,>>> clf.predict(X[-2:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,434,"super().fit(X, Y, sample_weight, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,505,y_pred = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,593,"estimator.fit(X_aug[:, : (X.shape[1] + chain_idx)], y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,631,"Y_pred_chain[:, chain_idx] = estimator.predict(X_aug)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,741,">>> chain.fit(X_train, Y_train).predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,767,"super().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,797,"Y_pred_chain[:, chain_idx] = estimator.predict(X_aug)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,829,"Y_pred_chain[:, chain_idx] = estimator.predict(X_aug)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,925,">>> chain = RegressorChain(base_estimator=logreg, order=[0, 1]).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,926,>>> chain.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/multioutput.py,954,"super().fit(X, Y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/kernel_ridge.py,129,">>> krr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,206,">>> clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,208,">>> print(clf.predict([[-0.8, -1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,213,">>> print(clf_pf.predict([[-0.8, -1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,667,Y = labelbin.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,675,# LabelBinarizer().fit_transform() returns arrays with dtype=np.int64.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,847,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,849,>>> print(clf.predict(X[2:3]))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,989,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,991,>>> print(clf.predict(X[2:3]))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,1133,">>> clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,1135,>>> print(clf.predict(X[2:3]))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,1287,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,1289,>>> print(clf.predict(X[2:3]))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/naive_bayes.py,1326,"return super().fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,135,">>> pipe.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,137,">>> pipe.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,304,"""`Pipeline.fit(X, y, logisticregression__sample_weight"""
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,394,"self._final_estimator.fit(Xt, y, **fit_params_last_step)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,434,"return last_step.fit_transform(Xt, y, **fit_params_last_step)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,436,"return last_step.fit(Xt, y, **fit_params_last_step).transform(Xt)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,469,Xt = transform.transform(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,470,"return self.steps[-1][1].predict(Xt, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,506,"y_pred = self.steps[-1][1].fit_predict(Xt, y, **fit_params_last_step)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,535,Xt = transform.transform(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,560,Xt = transform.transform(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,585,Xt = transformer.transform(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,614,Xt = transform.transform(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,647,Xt = transform.transform(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,707,Xt = transform.transform(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,711,"return self.steps[-1][1].score(Xt, y, **score_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,876,res = transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,893,"res = transformer.fit_transform(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,895,"res = transformer.fit(X, y, **fit_params).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,907,"return transformer.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/pipeline.py,977,>>> union.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/discriminant_analysis.py,66,X = sc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/discriminant_analysis.py,86,covariance_estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/discriminant_analysis.py,306,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/discriminant_analysis.py,308,">>> print(clf.predict([[-0.8, -1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/discriminant_analysis.py,804,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/discriminant_analysis.py,806,">>> print(clf.predict([[-0.8, -1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/exceptions.py,34,"...     LinearSVC().predict([[1, 2], [2, 3], [3, 4]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,101,">>> dummy_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,103,>>> dummy_clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,105,">>> dummy_clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,419,Mean accuracy of self.predict(X) wrt. y.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,423,"return super().score(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,494,">>> dummy_regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,496,>>> dummy_regr.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,498,">>> dummy_regr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,666,R^2 of `self.predict(X)` wrt. y.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/dummy.py,670,"return super().score(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/base.py,642,Mean accuracy of ``self.predict(X)`` wrt. `y`.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/base.py,646,"return accuracy_score(y, self.predict(X), sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/base.py,686,:math:`R^2` of ``self.predict(X)`` wrt. `y`.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/base.py,700,y_pred = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/base.py,731,self.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/base.py,847,"return self.fit(X, **fit_params).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/base.py,850,"return self.fit(X, y, **fit_params).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/base.py,929,return self.fit(X).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,203,">>> calibrated_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,220,">>> base_clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,226,">>> calibrated_clf.fit(X_calib, y_calib)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,301,label_encoder_ = LabelEncoder().fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,378,"this_estimator.fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,380,"this_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,509,"estimator.fit(X_train, y_train, sample_weight=sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,511,"estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,624,label_encoder = LabelEncoder().fit(classes)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,625,pos_class_indices = label_encoder.transform(clf.classes_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,636,"calibrator.fit(this_pred, Y[:, class_idx], sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,712,label_encoder = LabelEncoder().fit(self.classes)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,713,pos_class_indices = label_encoder.transform(self.base_estimator.classes_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,723,"proba[:, class_idx] = calibrator.predict(this_pred)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,1035,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,1196,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/calibration.py,1308,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_export.py,174,">>> clf = clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_export.py,856,">>> clf = clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_export.py,977,">>> decision_tree = decision_tree.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_classes.py,468,proba = self.tree_.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_classes.py,608,"est.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_classes.py,937,super().fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_classes.py,972,proba = self.tree_.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_classes.py,1315,super().fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_classes.py,1579,">>> cls = BaggingClassifier(extra_tree, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_classes.py,1581,">>> cls.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_classes.py,1815,">>> reg = BaggingRegressor(extra_tree, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/_classes.py,1817,">>> reg.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,230,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,231,"assert_array_equal(clf.predict(T), true_result, ""Failed with {0}"".format(name))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,234,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,235,"assert_array_equal(clf.predict(T), true_result, ""Failed with {0}"".format(name))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,243,"clf.fit(X, y, sample_weight=np.ones(len(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,244,"assert_array_equal(clf.predict(T), true_result, ""Failed with {0}"".format(name))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,246,"clf.fit(X, y, sample_weight=np.full(len(X), 0.5))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,247,"assert_array_equal(clf.predict(T), true_result, ""Failed with {0}"".format(name))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,265,"reg.fit(X, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,266,"assert_allclose(reg.predict(T), y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,269,"clf.fit(X, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,270,"assert_allclose(reg.predict(T), y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,286,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,287,"assert clf.score(X, y) == 1.0, ""Failed with {0}"".format(name)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,290,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,291,"assert clf.score(X, y) == 1.0, ""Failed with {0}"".format(name)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,298,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,299,"score = accuracy_score(clf.predict(iris.data), iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,305,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,306,"score = accuracy_score(clf.predict(iris.data), iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,318,"reg.fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,319,"score = mean_squared_error(diabetes.target, reg.predict(diabetes.data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,341,"reg.fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,342,"loss = metric(diabetes.target, reg.predict(diabetes.data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,351,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,361,"clf.predict(iris.data),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,380,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,390,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,391,"assert_array_equal(clf.predict(X), y, err_msg=""Failed with {0}"".format(name))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,395,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,396,"assert_almost_equal(reg.predict(X), y, err_msg=""Failed with {0}"".format(name))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,418,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,419,"reg.fit(X, -y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,420,"reg.fit(-X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,421,"reg.fit(-X, -y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,439,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,448,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,450,"clf2.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,478,"clf = DecisionTreeClassifier(criterion=""gini"", max_depth=5, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,483,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,496,"reg.fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,501,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,506,"est.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,510,"est.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,514,"est.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,518,"est.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,522,"est.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,526,"est.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,530,"est.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,534,"est.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,540,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,544,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,548,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,552,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,556,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,567,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,574,"TreeEstimator(min_samples_leaf=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,576,"TreeEstimator(min_samples_leaf=0.6).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,578,"TreeEstimator(min_samples_leaf=0.0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,580,"TreeEstimator(min_samples_leaf=3.0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,582,"TreeEstimator(min_weight_fraction_leaf=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,584,"TreeEstimator(min_weight_fraction_leaf=0.51).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,586,"TreeEstimator(min_samples_split=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,588,"TreeEstimator(min_samples_split=0.0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,590,"TreeEstimator(min_samples_split=1.1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,592,"TreeEstimator(min_samples_split=2.5).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,594,"TreeEstimator(max_depth=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,596,"TreeEstimator(max_features=42).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,598,"TreeEstimator(min_impurity_decrease=-1.0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,604,"est.fit(X, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,609,"est.fit(Xf, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,610,"assert_almost_equal(est.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,615,est.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,618,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,621,"est.predict(t[:, 1:])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,627,"est.fit(np.dot(X, Xt), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,629,est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,634,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,636,clf.predict(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,648,"est.fit([[0, 1, 2]], [0, 0, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,650,"est.fit([[0, 1, 2]], [5, -0.1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,667,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,677,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,698,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,709,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,737,"est.fit(X, y, sample_weight=weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,761,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,807,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,830,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,894,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,936,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,937,"score = est.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,945,"score2 = est2.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,996,"y_hat = clf.fit(X, y).predict(T)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1013,"y_hat = reg.fit(X, y).predict(T)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1023,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1031,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1046,"clf.fit(unbalanced_X, unbalanced_y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1047,"assert_almost_equal(clf.predict(unbalanced_X), unbalanced_y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1060,"assert_array_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1065,"assert_array_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1070,"assert_array_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1075,"assert_array_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1080,"assert_array_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1085,"assert_array_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1090,"assert_array_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1104,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1105,"assert_array_equal(clf.predict(X), np.ones(100))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1118,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1123,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1133,"clf.fit(X[duplicates], y[duplicates])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1137,"clf2.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1155,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1160,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1169,"clf1.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1171,"clf2.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1185,"clf3.fit(iris.data, iris_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1189,"clf4.fit(iris.data, iris_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1197,"clf1.fit(iris.data, iris.target, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1199,"clf2.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1204,"clf1.fit(iris.data, iris.target, sample_weight ** 2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1206,"clf2.fit(iris.data, iris.target, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1223,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1225,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1230,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1235,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1248,"est = TreeEstimator(max_depth=None, max_leaf_nodes=k + 1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1254,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1257,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1260,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1268,"est = TreeEstimator(max_depth=1, max_leaf_nodes=k).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1285,"value = getattr(DecisionTreeClassifier().fit([[0], [1]], [0, 1]).tree_, attr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1296,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1309,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1320,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1326,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1328,"assert_array_equal(est.predict(X), np.full((4,), 0.5))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1336,"clf.fit(X, [0, 1, 0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1359,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1366,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1386,"d = TreeEstimator(random_state=0, max_depth=max_depth).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1387,"s = TreeEstimator(random_state=0, max_depth=max_depth).fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1395,y_pred = d.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1403,"assert_array_almost_equal(s.predict(X_sparse_test), y_pred)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1446,"d = TreeEstimator(random_state=0, max_features=1, max_depth=2).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1447,"s = TreeEstimator(random_state=0, max_features=1, max_depth=2).fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1453,"assert_array_almost_equal(s.predict(X), d.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1456,"d = TreeEstimator(random_state=0, max_features=1, min_samples_split=10).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1457,"s = TreeEstimator(random_state=0, max_features=1, min_samples_split=10).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1465,"assert_array_almost_equal(s.predict(X), d.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1468,"d = TreeEstimator(random_state=0, min_samples_leaf=X_sparse.shape[0] // 2).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1469,"s = TreeEstimator(random_state=0, min_samples_leaf=X_sparse.shape[0] // 2).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1477,"assert_array_almost_equal(s.predict(X), d.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1480,"d = TreeEstimator(random_state=0, max_leaf_nodes=3).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1481,"s = TreeEstimator(random_state=0, max_leaf_nodes=3).fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1487,"assert_array_almost_equal(s.predict(X), d.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1499,"d = TreeEstimator(random_state=0, max_depth=3, criterion=criterion).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1500,"s = TreeEstimator(random_state=0, max_depth=3, criterion=criterion).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1509,"assert_array_almost_equal(s.predict(X), d.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1558,"d = TreeEstimator(random_state=0, max_depth=max_depth).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1559,"s = TreeEstimator(random_state=0, max_depth=max_depth).fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1583,"assert_array_almost_equal(s.predict(X1), d.predict(X2))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1603,"TreeEstimator(random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1606,"est.fit(X_2d, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1608,est.predict([X])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1619,"est.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1623,"est.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1647,"est.fit(X_small, y_small)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1655,"est.fit(X_small, y_small)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1672,"est = DecisionTreeClassifier(random_state=0, max_depth=1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1684,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1715,"TreeEstimator(random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1803,dt_mae.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1812,"dt_mae.fit(X=[[3], [5], [3], [8], [5]], y=[6, 7, 3, 4, 3], sample_weight=np.ones(5))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1819,"dt_mae.fit(X=[[3], [5], [3], [8], [5]], y=[6, 7, 3, 4, 3])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1860,"tree = DecisionTreeRegressor(random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1909,"clf1.fit([[0], [1]], [0, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1913,"clf2.fit([[0], [1]], [0, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1922,"est = estimator_cls(max_leaf_nodes=20, ccp_alpha=ccp_alpha, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1979,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1982,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1993,"est.fit(X_readonly, y_readonly)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,1994,"assert_array_equal(est.predict(X_readonly), est.predict(X_small))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2015,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2016,assert np.sum(reg.predict(X)) == pytest.approx(np.sum(y))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2027,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2028,assert np.amin(reg.predict(X)) == 0
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2031,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2032,assert np.all(reg.predict(X) > 0)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2049,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2050,assert np.all(reg.predict(X) > 0)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2080,"tree_poi.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2081,"tree_mse.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2082,"dummy = DummyRegressor(strategy=""mean"").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2085,"metric_poi = mean_poisson_deviance(y, tree_poi.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2087,"metric_mse = mean_poisson_deviance(y, np.clip(tree_mse.predict(X), 1e-15, None))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2088,"metric_dummy = mean_poisson_deviance(y, dummy.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2122,tree1 = DecisionTreeRegressor(**tree_params).fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2126,"tree2 = DecisionTreeRegressor(**tree_params).fit(X2, y2, sample_weight=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2132,"assert_allclose(tree1.predict(X), tree2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2147,"tree.fit(X, y, X_idx_sorted=X_idx_sorted)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2165,"tree.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2167,"tree_new = Tree(criterion=new_criterion).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2168,"assert_allclose(tree.predict(X), tree_new.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_tree.py,2181,"Tree().fit(X, y).n_features_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,30,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,165,"clf = clf.fit(X, y2, sample_weight=w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,200,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,238,"clf.fit(X, y_degraded)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,261,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,276,"export_graphviz(clf.fit(X, y).tree_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,293,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,298,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,321,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,352,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,370,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,420,"clf.fit(X_l, y_l)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,435,"reg.fit(X_mo, y_mo)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,450,"reg.fit(X_single, y_mo)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,473,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tree/tests/test_export.py,493,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_scorer.py,418,"return estimator.score(*args, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,500,le.fit(labels)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,501,y_true = le.transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,502,y_pred = le.transform(y_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,893,"lb.fit(np.hstack([y_true, y_pred]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,894,y_true = lb.transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,895,y_pred = lb.transform(y_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,2346,lb.fit(labels)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,2348,lb.fit(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,2364,transformed_labels = lb.transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,2466,">>> est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,2481,">>> est.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,2524,le.fit(labels)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,2525,y_true = le.transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_classification.py,2539,"y_true = lbin.fit_transform(y_true)[:, 0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_ranking.py,510,">>> clf = LogisticRegression(solver=""liblinear"", random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_ranking.py,520,">>> clf = LogisticRegression(solver=""liblinear"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_ranking.py,530,">>> clf = MultiOutputClassifier(clf).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_ranking.py,539,">>> clf = RidgeClassifierCV().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/cluster/_unsupervised.py,226,labels = le.fit_transform(labels)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/cluster/_unsupervised.py,283,labels = le.fit_transform(labels)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/cluster/_unsupervised.py,343,labels = le.fit_transform(labels)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/det_curve.py,66,">>> clf = SVC(random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/det_curve.py,163,">>> clf = SVC(random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/det_curve.py,260,">>> clf = SVC(random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/det_curve.py,450,">>> clf = SVC(random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/precision_recall_curve.py,75,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/precision_recall_curve.py,77,>>> predictions = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/precision_recall_curve.py,229,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/precision_recall_curve.py,318,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/roc_curve.py,221,">>> clf = SVC(random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/roc_curve.py,324,">>> clf = SVC(random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/roc_curve.py,446,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/confusion_matrix.py,67,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/confusion_matrix.py,69,>>> predictions = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/confusion_matrix.py,281,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/confusion_matrix.py,292,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/confusion_matrix.py,407,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/confusion_matrix.py,409,>>> y_pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/confusion_matrix.py,555,">>> clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/confusion_matrix.py,565,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_precision_recall.py,39,"binary_clf.fit(X, y_binary)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_precision_recall.py,41,"multi_clf = DecisionTreeClassifier().fit(X, y_multiclass)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_precision_recall.py,50,"reg = DecisionTreeRegressor().fit(X, y_multiclass)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_precision_recall.py,89,"clf = MyClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_precision_recall.py,100,"lr = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_precision_recall.py,162,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_precision_recall.py,174,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_precision_recall.py,191,"clf = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_precision_recall.py,225,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,33,"regressor = SVR().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,34,y_pred_regressor = regressor.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,35,"classifier = SVC(probability=True).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,59,"classifier.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,72,"clf = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,85,"classifier = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,86,"classifier.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,138,"classifier = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,139,"classifier.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,179,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,190,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_precision_recall_display.py,256,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_roc_curve.py,63,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_roc_curve.py,125,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_roc_curve.py,153,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_det_curve_display.py,35,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_det_curve_display.py,99,"lr = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_common_curve_display.py,37,"clf = DecisionTreeClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_common_curve_display.py,87,"clf = MyClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_common_curve_display.py,107,"clf = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_common_curve_display.py,149,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_curve_common.py,37,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_curve_common.py,84,"clf = MyClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_curve_common.py,97,"clf = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_curve_common.py,128,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,36,"regressor = SVR().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,37,y_pred_regressor = regressor.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,38,"y_pred_classifier = SVC().fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,62,"classifier = SVC().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,63,y_pred = classifier.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,88,"classifier = SVC().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,89,y_pred = classifier.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,141,"classifier = SVC().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,142,y_pred = classifier.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,214,"classifier = SVC().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,215,y_pred = classifier.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,314,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,315,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,335,"classifier = SVC().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_confusion_matrix_display.py,336,y_pred = classifier.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_roc_curve_display.py,71,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_roc_curve_display.py,147,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_roc_curve_display.py,203,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_roc_curve_display.py,260,"clf = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_confusion_matrix.py,42,"return SVC(kernel=""linear"", C=0.01).fit(*data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_confusion_matrix.py,48,return fitted_clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_confusion_matrix.py,54,"est = SVR().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_confusion_matrix.py,261,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_confusion_matrix.py,262,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_plot_det_curve.py,45,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_base.py,35,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_base.py,45,"classifier = DecisionTreeClassifier().fit(X_binary, y_binary)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/_plot/tests/test_base.py,64,"classifier = LogisticRegression().fit(X_binary, y_binary)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_common.py,1291,lb = LabelBinarizer().fit(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_common.py,1292,y_true_binarize = lb.transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_common.py,1293,y_pred_binarize = lb.transform(y_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,141,"sensible_regr.fit(X_train, _require_positive_y(y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,143,"sensible_clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,145,"sensible_ml_clf.fit(X_train, y_ml_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,235,"estimator.fit([[1]], [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,241,"estimator.fit([[1]], [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,291,"estimator.fit([[1], [2], [3]], [1, 1, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,342,"estimator.fit([[1]], [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,404,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,407,"expected_score = metric(y_test, clf.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,443,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,445,"expected_score = metric(y_test, clf.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,454,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,472,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,474,"score2 = r2_score(y_test, clf.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,483,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,496,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,503,"reg.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,505,"score2 = roc_auc_score(y_test, reg.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,511,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,520,"clf.fit(X_train, np.zeros_like(y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,537,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,546,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,558,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,565,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,576,km.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,579,"score2 = getattr(cluster_module, name)(y_test, km.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,595,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,670,"reg.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,805,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,822,return super().predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,828,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,852,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,889,"lr = LogisticRegression(multi_class=""multinomial"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,903,"lr = LogisticRegression(multi_class=""multinomial"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,924,"lr = Perceptron().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,978,"classifier = LogisticRegression().fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,979,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,1112,"lr = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_score_objects.py,1127,"lr = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_ranking.py,82,"y_score = clf.fit(X[:half], y[:half]).predict_proba(X[half:])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_ranking.py,89,y_pred = clf.predict(X[half:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_ranking.py,1826,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_classification.py,87,"probas_pred = clf.fit(X[:half], y[:half]).predict_proba(X[half:])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_classification.py,94,y_pred = clf.predict(X[half:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_classification.py,1371,lb.fit(labels)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_classification.py,1372,y_true_bin = lb.transform(y_true)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_classification.py,1373,y_pred_bin = lb.transform(y_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/metrics/tests/test_regression.py,482,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_base.py,31,"estimator.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_base.py,42,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_base.py,163,# DecisionTreeRegressor.fit(..)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,185,"tree.fit(X, y, sample_weight=curr_sample_weight, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,187,"tree.fit(X, y, sample_weight=sample_weight, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,1003,"y_pred = tree.predict(X, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,1335,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,1337,">>> print(clf.predict([[0, 0, 0, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,1656,">>> regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,1658,">>> print(regr.predict([[0, 0, 0, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,1981,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,1983,">>> clf.predict([[0, 0, 0, 0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,2285,">>> reg = ExtraTreesRegressor(n_estimators=100, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,2287,">>> reg.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,2514,"...    n_estimators=5, random_state=0, max_depth=1).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,2515,>>> X_sparse_embedding = random_trees.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,2603,"self.fit_transform(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,2633,"super().fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,2636,return self.one_hot_encoder_.fit_transform(self.apply(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_forest.py,2655,return self.one_hot_encoder_.transform(self.apply(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,60,return np.asarray([est.predict(X) for est in self.estimators_]).T
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,122,"return super().fit_transform(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,245,">>> eclf1 = eclf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,246,>>> print(eclf1.predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,248,">>> np.array_equal(eclf1.named_estimators_.lr.predict(X),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,249,...                eclf1.named_estimators_['lr'].predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,254,">>> eclf2 = eclf2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,255,>>> print(eclf2.predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,261,">>> eclf3 = eclf3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,262,>>> print(eclf3.predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,264,>>> print(eclf3.transform(X).shape)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,320,self.le_ = LabelEncoder().fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,322,transformed_y = self.le_.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,324,"return super().fit(X, transformed_y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,496,">>> print(er.fit(X, y).predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_voting.py,529,"return super().fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,123,"estimator.fit(X[:, features], y, sample_weight=curr_sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,126,"estimator.fit((X[indices])[:, features], y[indices])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,153,"predictions = estimator.predict(X[:, features])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,197,"estimator.predict(X[:, features])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,640,"...                         n_estimators=10, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,641,">>> clf.predict([[0, 0, 0, 0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,697,"p = estimator.predict((X[mask, :])[:, features])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,1063,"...                         n_estimators=10, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,1064,">>> regr.predict([[0, 0, 0, 0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_bagging.py,1159,"predictions[mask] += estimator.predict((X[mask, :])[:, features])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb.py,246,"tree.fit(X, residual, sample_weight=sample_weight, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb.py,539,"self.init_.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb.py,546,"self.init_.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb.py,1208,"...     max_depth=1, random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb.py,1209,">>> clf.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb.py,1775,">>> reg.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb.py,1777,>>> reg.predict(X_test[1:2])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb.py,1779,">>> reg.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,433,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,435,">>> clf.predict([[0, 0, 0, 0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,437,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,486,"return super().fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,557,"estimator.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,616,"estimator.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,618,y_predict = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,752,(estimator.predict(X) == classes).T * w
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,799,current_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,1011,">>> regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,1013,">>> regr.predict([[0, 0, 0, 0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,1015,">>> regr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,1065,"return super().fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,1127,"estimator.fit(X_, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,1128,y_predict = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_weight_boosting.py,1171,predictions = np.array([est.predict(X) for est in self.estimators_[:limit]]).T
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb_losses.py,194,predictions = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_gb_losses.py,288,"raw_predictions[:, k] += learning_rate * tree.predict(X).ravel()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py,190,>>> clf = IsolationForest(random_state=0).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py,191,">>> clf.predict([[0.1], [0], [90]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_stacking.py,267,"return self.final_estimator_.predict(self.transform(X), **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_stacking.py,429,">>> clf.fit(X_train, y_train).score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_stacking.py,486,self._le = LabelEncoder().fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_stacking.py,488,"return super().fit(X, self._le.transform(y), sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_stacking.py,511,"y_pred = super().predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_stacking.py,531,return self.final_estimator_.predict_proba(self.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_stacking.py,550,return self.final_estimator_.decision_function(self.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_stacking.py,699,">>> reg.fit(X_train, y_train).score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_stacking.py,755,"return super().fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_common.py,87,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_common.py,97,"estimator_new_params.set_params(svm=svm_estimator).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_common.py,111,"estimator_dropped.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_common.py,154,"ensemble.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_common.py,176,"ensemble.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_common.py,187,"ensemble.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_common.py,198,"ensemble.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_common.py,233,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_common.py,255,"ensemble.fit(X, y).score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,57,"ensemble.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,70,"eclf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,85,eclf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,89,eclf.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,91,ereg.predict(X_r)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,93,ereg.transform(X_r)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,113,"assert clf1.fit(X, y).predict(X)[73] == 2"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,114,"assert clf2.fit(X, y).predict(X)[73] == 1"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,115,"assert eclf.fit(X, y).predict(X)[73] == 1"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,145,"reg1_pred = reg1.fit(X_r_train, y_r_train).predict(X_r_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,146,"reg2_pred = reg2.fit(X_r_train, y_r_train).predict(X_r_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,147,"reg3_pred = reg3.fit(X_r_train, y_r_train).predict(X_r_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,148,"ereg_pred = ereg.fit(X_r_train, y_r_train).predict(X_r_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,161,"ereg_weights_none.fit(X_r_train, y_r_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,162,"ereg_weights_equal.fit(X_r_train, y_r_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,163,ereg_none_pred = ereg_weights_none.predict(X_r_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,164,ereg_equal_pred = ereg_weights_equal.predict(X_r_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,180,"assert_array_equal(clf1.fit(X, y).predict(X), [1, 1, 1, 2, 2, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,181,"assert_array_equal(clf2.fit(X, y).predict(X), [1, 1, 1, 2, 2, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,182,"assert_array_equal(clf3.fit(X, y).predict(X), [1, 1, 1, 2, 2, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,189,"assert_array_equal(eclf.fit(X, y).predict(X), [1, 1, 1, 2, 2, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,196,"assert_array_equal(eclf.fit(X, y).predict(X), [1, 1, 1, 2, 2, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,232,"eclf_res = eclf.fit(X, y).predict_proba(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,245,"eclf.fit(X, y).predict_proba(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,258,"eclf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,279,"grid.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,292,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,295,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,297,"assert_array_equal(eclf1.predict(X), eclf2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,308,").fit(X, y, sample_weight=np.ones((len(y),)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,311,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,312,"assert_array_equal(eclf1.predict(X), eclf2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,317,"eclf3.fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,318,"clf1.fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,319,"assert_array_equal(eclf3.predict(X), clf1.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,330,"eclf3.fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,340,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,356,"eclf.fit(X, y, sample_weight=np.ones((len(y),)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,367,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,371,"eclf2.set_params(nb=clf2).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,373,"assert_array_equal(eclf1.predict(X), eclf2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,389,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,400,"eclf2.set_params(rf=""drop"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,403,"assert_array_equal(eclf1.predict(X), eclf2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,412,"eclf1.set_params(voting=""soft"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,417,"eclf2.set_params(voting=""soft"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,420,"assert_array_equal(eclf1.predict(X), eclf2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,425,"eclf2.set_params(lr=""drop"", rf=""drop"", nb=""drop"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,436,").fit(X1, y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,448,"eclf2.set_params(rf=""drop"").fit(X1, y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,451,"eclf1.transform(X1),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,454,"assert_array_almost_equal(eclf2.transform(X1), np.array([[[1.0, 0.0], [0.0, 1.0]]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,457,"assert_array_equal(eclf1.transform(X1), np.array([[0, 0], [1, 1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,458,"assert_array_equal(eclf2.transform(X1), np.array([[0], [1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,471,"eclf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,472,"eclf2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,486,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,491,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,496,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,498,"assert_array_equal(eclf1.transform(X).shape, (4, 6))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,499,"assert_array_equal(eclf2.transform(X).shape, (4, 6))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,500,"assert_array_equal(eclf3.transform(X).shape, (3, 4, 2))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,501,"assert_array_almost_equal(eclf1.transform(X), eclf2.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,503,"eclf3.transform(X).swapaxes(0, 1).reshape((4, 6)), eclf2.transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,537,"voter.fit(X, y, sample_weight=np.ones(y.shape))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,540,"voter.fit(X, y, sample_weight=np.ones(y.shape))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,542,y_pred = voter.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,570,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_voting.py,603,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,124,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,125,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,129,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,130,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,148,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,149,"score = clf.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,155,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,156,"score = clf.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,171,"reg.fit(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,172,"score = reg.score(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,183,"reg.fit(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,184,"score = reg.score(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,226,"forest_poi.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,227,"forest_mse.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,228,"dummy = DummyRegressor(strategy=""mean"").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,231,"metric_poi = mean_poisson_deviance(y, forest_poi.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,239,"y, np.clip(forest_mse.predict(X), 1e-6, None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,241,"metric_dummy = mean_poisson_deviance(y, dummy.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,265,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,267,assert np.sum(reg.predict(X)) == pytest.approx(np.sum(y))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,276,"r.fit([[1, 2, 3], [4, 5, 6]], [1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,293,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,315,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,334,"est.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,340,"est.fit(X, y, sample_weight=scale * sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,454,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,524,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,525,"test_score = classifier.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,580,"regressor.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,581,"test_score = regressor.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,608,"estimator.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,632,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,646,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,660,"forest.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,664,y1 = forest.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,666,y2 = forest.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,687,"obj.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,688,"score = obj.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,693,"score2 = obj2.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,744,"y_pred = est.fit(X_train, y_train).predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,806,"y_pred = est.fit(X_train, y_train).predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,826,"clf = ForestClassifier(random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,833,"clf = ForestClassifier(random_state=0).fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,851,X_transformed = hasher.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,869,X_transformed_dense = hasher_dense.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,870,X_transformed_sparse = hasher_sparse.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,885,X_transformed = hasher.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,889,"assert_array_equal(hasher.fit(X).transform(X).toarray(), X_transformed.toarray())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,895,X_reduced = svd.fit_transform(X_transformed)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,897,"linear_clf.fit(X_reduced, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,898,"assert linear_clf.score(X_reduced, y) == 1.0"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,904,X_transformed = hasher.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,905,X_transformed_sparse = hasher.fit_transform(csc_matrix(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,916,"RandomForestClassifier(n_estimators=20, n_jobs=n_jobs, random_state=12345).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,936,"reg = ExtraTreesRegressor(n_estimators=n_trees, random_state=42).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,967,"reg = ExtraTreesRegressor(max_features=1, random_state=1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,989,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,992,"est = ForestEstimator(max_depth=1, n_estimators=1, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1007,"ForestEstimator(min_samples_split=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1009,"ForestEstimator(min_samples_split=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1011,"ForestEstimator(min_samples_split=1.1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1014,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1021,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1041,"ForestEstimator(min_samples_leaf=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1043,"ForestEstimator(min_samples_leaf=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1046,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1054,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1086,"est.fit(X, y, sample_weight=weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1106,"dense = ForestEstimator(random_state=0, max_depth=2).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1107,"sparse = ForestEstimator(random_state=0, max_depth=2).fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1112,"assert_array_almost_equal(sparse.predict(X), dense.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1125,"sparse.transform(X).toarray(), dense.transform(X).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1128,"sparse.fit_transform(X).toarray(), dense.fit_transform(X).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1148,"assert_array_almost_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1153,"assert_array_almost_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1158,"assert_array_almost_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1163,"assert_array_almost_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1169,"assert_array_almost_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1174,"assert_array_almost_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1179,"assert_array_almost_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1184,"assert_array_almost_equal(est.fit(X, y).predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1197,"ForestEstimator(n_estimators=1, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1200,"est.fit(X_2d, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1204,est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1223,"clf1.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1225,"clf2.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1239,"clf3.fit(iris.data, iris_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1243,"clf4.fit(iris.data, iris_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1251,"clf1.fit(iris.data, iris.target, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1253,"clf2.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1258,"clf1.fit(iris.data, iris.target, sample_weight ** 2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1260,"clf2.fit(iris.data, iris.target, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1274,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1278,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1281,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1297,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1299,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1303,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1309,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1314,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1319,"clf.fit(X, _y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1340,"est_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1346,"est_no_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1367,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1372,"est_2.fit(X, y)  # inits state"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1374,"est_2.fit(X, y)  # clears old state and equals est"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1389,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1392,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1406,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1411,"est_2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1419,"est_2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1443,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1453,"est_2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1456,"est_2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1471,"est_3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1491,"result = classifier.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1501,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1536,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1553,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1561,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1587,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1604,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1612,"gbr = RandomForestRegressor(n_estimators=10).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1665,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1675,"ms_1_predict = ms_1_model.fit(X_train, y_train).predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1678,"ms_None_predict = ms_None_model.fit(X_train, y_train).predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1693,"ms_1_proba = ms_1_model.fit(X_train, y_train).predict_proba(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1696,"ms_None_proba = ms_None_model.fit(X_train, y_train).predict_proba(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1707,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1731,"est1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1732,"est2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1757,"est = Estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1777,"est1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1780,"est2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1781,"assert_allclose(est1.predict(X), est2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_forest.py,1797,"est.fit(X_reg, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,77,").fit(X_train, y_train).predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,110,"super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,126,").fit(X_train_sparse, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,134,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,169,").fit(X_train, y_train).predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,183,"super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,212,").fit(X_train_sparse, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,213,sparse_results = sparse_classifier.predict(X_test_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,218,".fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,219,.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,243,"base_estimator = DecisionTreeRegressor().fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,251,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,253,"assert base_estimator.score(X_train, y_train) == ensemble.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,261,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,263,"assert base_estimator.score(X_train, y_train) > ensemble.score(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,270,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,290,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,300,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,317,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,330,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,356,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,358,"test_score = clf.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,375,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,392,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,394,"test_score = clf.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,411,"regr.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,427,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,429,"clf2 = KNeighborsRegressor().fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,431,"assert_array_almost_equal(clf1.predict(X_test), clf2.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,441,"BaggingClassifier(base, max_samples=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,443,"BaggingClassifier(base, max_samples=0.0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,445,"BaggingClassifier(base, max_samples=2.0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,447,"BaggingClassifier(base, max_samples=1000).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,449,"BaggingClassifier(base, max_samples=""foobar"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,453,"BaggingClassifier(base, max_features=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,455,"BaggingClassifier(base, max_features=0.0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,457,"BaggingClassifier(base, max_features=2.0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,459,"BaggingClassifier(base, max_features=5).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,461,"BaggingClassifier(base, max_features=""foobar"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,464,"assert not hasattr(BaggingClassifier(base).fit(X, y), ""decision_function"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,478,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,489,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,497,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,507,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,521,"ensemble = BaggingRegressor(DecisionTreeRegressor(), n_jobs=3, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,526,y1 = ensemble.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,528,y2 = ensemble.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,531,"ensemble = BaggingRegressor(DecisionTreeRegressor(), n_jobs=1, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,535,y3 = ensemble.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,548,"GridSearchCV(BaggingClassifier(SVC()), parameters, scoring=""roc_auc"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,560,"ensemble = BaggingClassifier(None, n_jobs=3, random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,566,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,570,"ensemble = BaggingClassifier(Perceptron(), n_jobs=3, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,581,"ensemble = BaggingRegressor(None, n_jobs=3, random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,585,"ensemble = BaggingRegressor(DecisionTreeRegressor(), n_jobs=3, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,591,"ensemble = BaggingRegressor(SVR(), n_jobs=3, random_state=0).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,599,"estimator.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,616,"estimator.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,618,estimator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,638,"clf_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,644,"clf_no_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,655,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,658,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,667,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,669,y_pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,675,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,676,"assert_array_equal(y_pred, clf.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,686,"clf_ws.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,688,"clf_ws.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,689,y1 = clf_ws.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,692,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,693,y2 = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,703,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,710,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,713,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,730,"assert bagging.fit(X, y).oob_score_ == bagging.fit(X, y).oob_score_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,745,"bagging.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,767,"estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,788,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,798,"estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,813,"bagging.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,827,".fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,832,".fit(X, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,837,".fit(X, Y3)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,875,"pipeline.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,877,"y_hat = bagging_regressor.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,884,"pipeline.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,887,"bagging_regressor.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,904,"pipeline.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,906,"bagging_classifier.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,907,y_hat = bagging_classifier.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,916,"pipeline.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,919,"bagging_classifier.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,929,"bagging.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,948,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_bagging.py,960,"est = Estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,98,"init_est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,103,"sw_init_est.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,212,"init_estimator = loss.init_estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,219,"init_estimator = loss.init_estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,227,"init_estimator = loss.init_estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,244,"init_estimator = loss.init_estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,252,"init_estimator = loss.init_estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,260,"init_estimator = loss.init_estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,269,"init_estimator = loss.init_estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,281,"init_estimator = loss.init_estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py,290,"init_estimator = loss.init_estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,70,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,71,clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,73,"assert clf.score(X_test, y_test) > 0.8"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,75,X_trans = clf.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,82,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,83,clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,89,X_trans = clf.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,110,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,111,X_trans = clf.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,118,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,119,X_trans = clf.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,136,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,137,"clf_drop.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,138,"assert_allclose(clf.predict(X_test), clf_drop.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,140,"assert_allclose(clf.transform(X_test), clf_drop.transform(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,156,"reg.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,157,"reg_drop.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,158,"assert_allclose(reg.predict(X_test), reg_drop.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,159,"assert_allclose(reg.transform(X_test), reg_drop.transform(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,185,"reg.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,186,"result = reg.predict(X_test, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,191,X_trans = reg.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,198,"reg.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,199,reg.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,201,X_trans = reg.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,219,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,220,X_trans = clf.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,237,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,238,X_trans = clf.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,253,"clf.fit(X_, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,254,X_meta = clf.transform(X_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,261,"return self.reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,270,"return self.clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,318,"clf.fit(scale(X_iris), y, sample_weight=np.ones(X_iris.shape[0]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,351,"reg.fit(scale(X_diabetes), y, sample_weight=np.ones(X_diabetes.shape[0]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,395,"estimator_full.fit(X, y).transform(X)[:, 1:],"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,396,"estimator_drop.fit(X, y).transform(X),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,410,"clf.fit(X_iris, y_iris)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,455,"stacker.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,456,y_pred_no_weight = stacker.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,459,"stacker.fit(X_train, y_train, sample_weight=np.ones(y_train.shape))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,460,y_pred_unit_weight = stacker.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,465,"stacker.fit(X_train, y_train, sample_weight=sample_weight_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,466,y_pred_biased = stacker.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,477,"stacker.fit(X_iris, y_iris, sample_weight=np.ones(X_iris.shape[0]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,519,"stacker_cv_3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,520,"stacker_cv_5.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,548,"super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_stacking.py,559,"stacker.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,88,"clf = AdaBoostClassifier().fit(X, y_t)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,96,"clf.fit(X, y_class)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,97,"assert_array_equal(clf.predict(T), y_t_class)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,106,"clf.fit(X, y_regr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,107,"assert_array_equal(clf.predict(T), y_t_regr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,117,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,127,"score = clf.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,148,"reg.fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,149,"score = reg.score(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,166,"clf.fit(iris.data, iris.target, sample_weight=iris_weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,168,predictions = clf.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,172,"score = clf.score(iris.data, iris.target, sample_weight=iris_weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,186,"clf.fit(diabetes.data, diabetes.target, sample_weight=diabetes_weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,188,predictions = clf.predict(diabetes.data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,190,"score = clf.score(diabetes.data, diabetes.target, sample_weight=diabetes_weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,214,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,220,"clf.fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,230,"obj.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,231,"score = obj.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,236,"score2 = obj2.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,241,"obj.fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,242,"score = obj.score(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,247,"score2 = obj2.score(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,266,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,277,"AdaBoostClassifier(learning_rate=-1).fit(X, y_class)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,280,"AdaBoostClassifier(algorithm=""foo"").fit(X, y_class)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,283,"AdaBoostClassifier().fit(X, y_class, sample_weight=np.asarray([-1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,293,"clf.fit(X, y_regr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,296,"clf.fit(X, y_class)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,301,"clf.fit(X, y_regr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,304,"clf.fit(X, y_regr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,311,"clf.fit(X_fail, y_fail)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,318,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,329,"super().fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,350,").fit(X_train_sparse, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,357,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,360,sparse_results = sparse_classifier.predict(X_test_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,361,dense_results = dense_classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,380,"sparse_results = sparse_classifier.score(X_test_sparse, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,381,"dense_results = dense_classifier.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,422,"super().fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,439,").fit(X_train_sparse, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,444,").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,447,sparse_results = sparse_classifier.predict(X_test_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,448,dense_results = dense_classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,477,"boost.fit(X, y_regr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,493,"boost.fit(X, yc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,494,boost.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,498,"boost.fit(X, yr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,499,boost.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,511,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,537,"regr_with_outlier.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,538,"regr_no_outlier.fit(X[:-1], y[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,541,"regr_with_weight.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,543,"score_with_outlier = regr_with_outlier.score(X[:-1], y[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,544,"score_no_outlier = regr_no_outlier.score(X[:-1], y[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,545,"score_with_weight = regr_with_weight.score(X[:-1], y[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,561,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,564,"np.argmax(model.predict_proba(X_test), axis=1), model.predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_weight_boosting.py,581,"model.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,68,clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,70,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,71,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,122,"GradientBoosting(**params).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,136,"GradientBoostingRegressor(**params).fit(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,154,"GradientBoosting(loss=loss).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,174,"gbrt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,175,"error_rate = 1.0 - gbrt.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,187,"gbrt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,188,"error_rate = 1.0 - gbrt.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,209,"reg.fit(X_reg, y_reg, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,213,y_pred = reg.predict(X_reg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,238,"clf.fit(iris.data, iris.target, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,239,"score = clf.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,264,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,265,"mse = mean_squared_error(y_test, clf.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,274,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,275,"mse = mean_squared_error(y_test, clf.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,284,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,285,"mse = mean_squared_error(y_test, clf.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,301,"gbdt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,312,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,313,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,333,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,342,"clf.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,367,"gbrt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,391,"reg.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,413,"gbrt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,417,"gbrt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,421,"gbrt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,425,"gbrt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,429,"gbrt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,433,"gbrt.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,448,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,449,y_pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,469,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,475,"assert_array_equal(clf.predict(X_test), y_pred)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,492,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,508,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,509,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,520,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,530,"clf.fit(X, np.ones(len(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,533,"clf.fit(X, np.ones(len(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,534,clf.predict([rng.rand(2)])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,535,"assert_array_equal(np.ones((1,), dtype=np.float64), clf.predict([rng.rand(2)]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,544,"clf_quantile.fit(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,545,y_quantile = clf_quantile.predict(X_reg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,551,"clf_ae.fit(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,552,y_ae = clf_ae.predict(X_reg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,562,"clf.fit(X, symbol_y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,563,"assert_array_equal(clf.predict(T), tosequence(map(str, true_result)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,573,"clf.fit(X, float_y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,574,"assert_array_equal(clf.predict(T), np.asarray(true_result, dtype=np.float32))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,594,"clf.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,595,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,603,"clf.fit(X_, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,604,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,609,"clf.fit(X_, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,610,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,616,"clf.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,617,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,623,"clf.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,624,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,631,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,642,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,652,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,653,"score = clf.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,674,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,703,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,728,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,731,"est_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,733,"est_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,736,"assert_array_almost_equal(est_ws.predict(X), est.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,740,"assert_array_equal(est_ws.predict(X), est.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,749,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,752,"est_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,754,"est_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,756,"assert_array_almost_equal(est_ws.predict(X), est.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,764,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,766,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,779,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,782,"est_2.fit(X, y)  # inits state"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,784,"est_2.fit(X, y)  # clears old state and equals est"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,786,"assert_array_almost_equal(est_2.predict(X), est.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,794,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,797,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,805,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,808,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,816,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,820,"est2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,822,"assert_array_almost_equal(est2.predict(X), est.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,830,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,832,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,844,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,849,"est_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,851,"est_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,864,"est_dense.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,865,est_dense.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,867,"est_dense.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,868,y_pred_dense = est_dense.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,880,"est_sparse.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,881,est_sparse.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,883,"est_sparse.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,884,y_pred_sparse = est_sparse.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,900,"est_c.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,902,"est_c.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,905,"est_fortran.fit(X_fortran, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,907,"est_fortran.fit(X_fortran, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,909,"assert_array_almost_equal(est_c.predict(X), est_fortran.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,926,"est.fit(X, y, monitor=early_stopping_monitor)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,934,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,942,"est.fit(X, y, monitor=early_stopping_monitor)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,950,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,967,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,983,"est.fit(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,995,"est.fit(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,996,y_pred = est.predict(X_reg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1004,"est.fit(X_reg, y_reg)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1015,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1017,"assert est.score(X, y) > 0.96"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1026,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1027,"assert est.score(X, y) > 0.96"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1033,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1043,"est = GBEstimator(max_depth=1, max_leaf_nodes=k).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1047,"est = GBEstimator(max_depth=1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1057,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1068,"clf.fit([[0, 1], [2, 3]], [0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1070,"clf.fit([[0, 1], [2, 3]], [0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1083,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1084,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1105,"gb.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1106,"assert gb.predict([[1, 0]])[0] > 0.5"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1116,"gb.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1117,"assert_array_equal(gb.predict([[1, 0]]), [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1134,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1137,").fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1140,"assert_array_almost_equal(sparse.predict(X), dense.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1143,"assert_array_almost_equal(sparse.predict(X_sparse), dense.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1144,"assert_array_almost_equal(dense.predict(X_sparse), sparse.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1193,"est.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1195,"assert est.score(X_test, y_test) > 0.7"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1201,"gbc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1205,"gbr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1238,"gbc.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1239,"gbc2.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1242,"gbr.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1243,"gbr2.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1248,"gbc3.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1249,"gbr3.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1263,"gbc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1290,"gb(init=init_est).fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1294,"gb(init=init_est).fit(X, y)  # ok no sample weights"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1296,"gb(init=init_est).fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1305,"gb.fit(X, y)  # pipeline without sample_weight works fine"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1311,"gb.fit(X, y, sample_weight=np.ones(X.shape[0]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1321,"gb.fit(X, y, sample_weight=np.ones(X.shape[0]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1340,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1357,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1369,"gbr = GradientBoostingRegressor().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1379,"gbr = GradientBoostingRegressor().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1413,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1425,"est = Estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1437,"est1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1440,"est2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1444,"assert_allclose(est1.predict(X), est2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1459,"est1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1462,"est2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_gradient_boosting.py,1463,"assert_allclose(est1.predict(X), est2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,57,"IsolationForest(random_state=rng, **params).fit(X_train).predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,76,).fit(X_train_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,77,sparse_results = sparse_classifier.predict(X_test_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,82,).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,83,dense_results = dense_classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,94,IsolationForest(max_samples=-1).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,96,IsolationForest(max_samples=0.0).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,98,IsolationForest(max_samples=2.0).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,104,IsolationForest(max_samples=1000).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,109,"IsolationForest(max_samples=""auto"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,113,IsolationForest(max_samples=np.int64(2)).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,118,"IsolationForest(max_samples=""foobar"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,120,IsolationForest(max_samples=1.5).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,124,"IsolationForest().fit(X).predict(X[:, 1:])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,130,clf = IsolationForest().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,137,clf = IsolationForest().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,143,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,146,clf = IsolationForest(max_samples=0.4).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,158,"ensemble = IsolationForest(n_jobs=3, random_state=0).fit(X_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,161,y1 = ensemble.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,163,y2 = ensemble.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,166,"ensemble = IsolationForest(n_jobs=1, random_state=0).fit(X_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,168,y3 = ensemble.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,187,"clf = IsolationForest(max_samples=100, random_state=rng).fit(X_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,203,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,205,pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,214,clf = IsolationForest().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,225,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,226,clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,251,clf1 = IsolationForest(contamination=0.1).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,252,clf2 = IsolationForest().fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,276,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,281,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,316,iforest.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,320,assert all(iforest.predict(X) == 1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,321,"assert all(iforest.predict(rng.randn(100, 10)) == 1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,322,assert all(iforest.predict(X + 1) == 1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,323,assert all(iforest.predict(X - 1) == 1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,328,iforest.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,330,assert all(iforest.predict(X) == 1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,331,"assert all(iforest.predict(rng.randn(100, 10)) == 1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,332,"assert all(iforest.predict(np.ones((100, 10))) == 1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,337,iforest.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,339,assert all(iforest.predict(X) == 1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,340,"assert all(iforest.predict(rng.randn(100, 10)) == 1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,341,"assert all(iforest.predict(np.ones((100, 10))) == 1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_iforest.py,350,"est = IsolationForest().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_base.py,28,"ensemble.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_base.py,49,"np_int_ensemble.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_base.py,59,"ensemble.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_base.py,68,"string_ensemble.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/tests/test_base.py,71,"float_ensemble.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py,421,# calls est.predict() or est.predict_proba() depending on
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py,770,X_binned = self._bin_mapper.fit_transform(X)  # F-aligned array
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py,772,X_binned = self._bin_mapper.transform(X)  # F-aligned array
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py,1192,">>> est = HistGradientBoostingRegressor().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py,1193,">>> est.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py,1506,">>> clf = HistGradientBoostingClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py,1507,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py,1682,encoded_y = label_encoder.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_monotonic_contraints.py,218,"gbdt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_monotonic_contraints.py,237,pred = gbdt.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_monotonic_contraints.py,241,pred = gbdt.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_monotonic_contraints.py,247,pred = gbdt.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_monotonic_contraints.py,251,pred = gbdt.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_monotonic_contraints.py,263,"gbdt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_monotonic_contraints.py,270,"gbdt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_monotonic_contraints.py,277,"gbdt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py,233,X = mapper.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py,272,X = mapper.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py,311,X = mapper.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py,389,"y_pred = predictor.predict(all_nans, known_cat_bitsets, f_idx_map, n_threads)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py,406,X_binned = bin_mapper.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py,433,"predictions = predictor.predict(X, known_cat_bitsets, f_idx_map, n_threads)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py,507,prediction = predictor.predict(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py,524,X_ohe = OneHotEncoder(sparse=False).fit_transform(X_binned)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,82,_BinMapper(n_bins=n_bins).fit(DATA)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,86,"mapper = _BinMapper(n_bins=42, random_state=42).fit(DATA)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,89,"mapper.transform(np.repeat(DATA, 2, axis=1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,122,"mapper = _BinMapper(n_bins=n_bins, random_state=42).fit(DATA)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,123,binned = mapper.transform(DATA)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,150,binned = mapper.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,169,binned = _BinMapper(n_bins=n_bins).fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,187,binned_1 = mapper_1.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,192,binned_2 = mapper_2.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,210,binned = _BinMapper(n_bins=n_bins).fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,231,binned_small = mapper_small.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,232,binned_large = mapper_large.fit_transform(binned_small)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,245,mapper = _BinMapper(n_bins=n_bins).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,251,"mapper_no_subsample = _BinMapper(subsample=None, random_state=0).fit(DATA)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,252,"mapper_subsample = _BinMapper(subsample=256, random_state=0).fit(DATA)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,307,mapper.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,319,X_trans = mapper.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,329,bin_mapper.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,334,"assert_array_equal(bin_mapper.transform(X), expected_binned_X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,352,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,358,"assert_array_equal(bin_mapper.transform(X), expected_trans)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,364,"assert_array_equal(bin_mapper.transform(X), expected_trans)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,380,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,400,"assert_array_equal(bin_mapper.transform(X), expected_X_trans)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,414,bin_mapper.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py,461,bin_mapper.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_predictor.py,36,X_train_binned = mapper.fit_transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_predictor.py,60,"y_pred_train = predictor.predict(X_train, known_cat_bitsets, f_idx_map, n_threads)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_predictor.py,63,"y_pred_test = predictor.predict(X_test, known_cat_bitsets, f_idx_map, n_threads)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_predictor.py,107,"predictions = predictor.predict(X, known_cat_bitset, f_idx_map, n_threads)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_predictor.py,168,predictions = predictor.predict(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_predictor.py,181,predictions = predictor.predict(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,74,"GradientBoosting(**params).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,85,"binary_clf.fit(np.zeros(shape=(3, 2)), np.arange(3))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,119,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,167,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,188,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,220,"gbdt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,221,"assert gbdt.score(X, y) > 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,235,"gbdt.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,244,"gbdt.fit(np.zeros(shape=(len(y), 1)), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,264,"gbdt_pois.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,265,"gbdt_ls.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,266,"dummy = DummyRegressor(strategy=""mean"").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,269,"metric_pois = mean_poisson_deviance(y, gbdt_pois.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,271,"metric_ls = mean_poisson_deviance(y, np.clip(gbdt_ls.predict(X), 1e-15, None))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,272,"metric_dummy = mean_poisson_deviance(y, dummy.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,286,"gb.fit(X_classification, y_classification)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,292,mapper_whole_data.fit(X_classification)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,319,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,321,"assert gb.score(X, y) == pytest.approx(1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,366,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,368,"assert gb.score(X, y) > expected_min_score"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,389,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,448,mm = MinMaxScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,470,"X = KBinsDiscretizer(n_bins=42, encode=""ordinal"").fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,509,"gbm1.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,512,"gbm2.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,515,"assert gbm1.score(X_train, y_train) == pytest.approx(gbm2.score(X_train, y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,517,"assert gbm1.score(X_test, y_test) == pytest.approx(gbm2.score(X_test, y_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,521,"assert_allclose(gbm1.predict(X_train), gbm2.predict(X_train))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,522,"assert_allclose(gbm1.predict(X_test), gbm2.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,532,"gbdt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,533,"np.testing.assert_allclose(gbdt.predict(X), y, atol=1e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,542,"gbdt.fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,547,"gbdt.fit(X, y[1:])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,564,"assert stump_clf.fit(X, y_isinf).score(X, y_isinf) == 1"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,565,"assert stump_clf.fit(X, y_isnan).score(X, y_isnan) == 1"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,577,"gbrt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,588,"gbrt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,600,"gb.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,601,"assert gb.predict([[1, 0]])[0] > 0.5"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,613,"gb.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,614,"assert_array_equal(gb.predict([[1, 0]]), [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,623,"gb.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,624,"assert_array_equal(gb.predict([[1, 0]]), [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,677,"est_sw = clone(est).fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,678,"est_dup = clone(est).fit(X_dup, y_dup)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,695,X_binned = bin_mapper.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,738,"est = HistGradientBoostingClassifier(max_depth=2, max_leaf_nodes=3, max_iter=1).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,759,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,762,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,779,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,784,"assert_allclose(est.predict(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,806,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,834,"gb.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,852,"aux.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,886,"est = Est(max_iter=20, categorical_features=categorical_features).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,894,assert len(np.unique(est.predict(X_test))) == 1
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,929,"left_bitset = clf_cat.fit(X, y)._predictors[0][0].raw_left_cat_bitsets[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,947,X_ohe = ct.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1000,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1015,"est = Est(categorical_features=categorical_features).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1031,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1037,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1042,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1059,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1060,est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1076,"est1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1079,"est2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py,1080,"assert_allclose(est1.predict(X), est2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,27,"assert_allclose(gb_1.predict(X), gb_2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,43,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,49,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,67,"gb_warm_start.fit(X, y).set_params(max_iter=75).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,72,"gb_no_warm_start.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,94,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,96,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,128,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,130,"gb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,145,"gb_1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,149,"gb_2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,165,"gb_1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,168,"gb_2.fit(X, y)  # inits state"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,170,"gb_2.fit(X, y)  # clears old state and equals est"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,204,"gb_1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,207,"gb_1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,215,"gb_2.fit(X, y)  # inits state"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py,217,"gb_2.fit(X, y)  # clears old state and equals est"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,58,X = _BinMapper(n_bins=max_bins + 1).fit_transform(X).astype(np.float32)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,72,"est_lightgbm.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,73,"est_sklearn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,78,pred_lightgbm = est_lightgbm.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,79,pred_sklearn = est_sklearn.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,84,pred_lightgbm = est_lightgbm.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,85,pred_sklearn = est_sklearn.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,122,X = _BinMapper(n_bins=max_bins + 1).fit_transform(X).astype(np.float32)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,137,"est_lightgbm.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,138,"est_sklearn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,143,pred_lightgbm = est_lightgbm.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,144,pred_sklearn = est_sklearn.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,153,pred_lightgbm = est_lightgbm.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,154,pred_sklearn = est_sklearn.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,196,X = _BinMapper(n_bins=max_bins + 1).fit_transform(X).astype(np.float32)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,213,"est_lightgbm.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,214,"est_sklearn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,219,pred_lightgbm = est_lightgbm.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,220,pred_sklearn = est_sklearn.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,236,pred_lightgbm = est_lightgbm.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py,237,pred_sklearn = est_sklearn.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_agglomerative.py,871,>>> clustering = AgglomerativeClustering().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_agglomerative.py,1054,"return super().fit_predict(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_agglomerative.py,1189,>>> agglo.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_agglomerative.py,1191,>>> X_reduced = agglo.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_optics.py,219,>>> clustering = OPTICS(min_samples=2).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_optics.py,526,nbrs.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_dbscan.py,160,"est.fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_dbscan.py,293,">>> clustering = DBSCAN(eps=3, min_samples=2).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_dbscan.py,373,neighbors_model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_dbscan.py,427,"self.fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_bicluster.py,190,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_bicluster.py,299,">>> clustering = SpectralCoclustering(n_clusters=2, random_state=0).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_bicluster.py,465,">>> clustering = SpectralBiclustering(n_clusters=2, random_state=0).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_kmeans.py,379,").fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_kmeans.py,904,">>> kmeans = KMeans(n_clusters=2, random_state=0).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_kmeans.py,907,">>> kmeans.predict([[0, 0], [12, 3]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_kmeans.py,1258,"return self.fit(X, sample_weight=sample_weight).labels_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_kmeans.py,1263,"Equivalent to fit(X).transform(X), but more efficiently implemented."
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_kmeans.py,1282,"return self.fit(X, sample_weight=sample_weight)._transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_kmeans.py,1676,">>> kmeans.predict([[0, 0], [4, 4]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_kmeans.py,1682,...                          max_iter=10).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_kmeans.py,1686,">>> kmeans.predict([[0, 0], [4, 4]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_spectral.py,513,...         random_state=0).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_spectral.py,604,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_spectral.py,657,"return super().fit_predict(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_affinity_propagation.py,385,>>> clustering = AffinityPropagation(random_state=5).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_affinity_propagation.py,390,">>> clustering.predict([[0, 0], [4, 4]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_affinity_propagation.py,555,"return super().fit_predict(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_birch.py,459,>>> brc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_birch.py,461,>>> brc.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_birch.py,723,self.subcluster_labels_ = clusterer.fit_predict(self.subcluster_centers_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_birch.py,726,self.labels_ = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_mean_shift.py,76,nbrs.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_mean_shift.py,199,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_mean_shift.py,374,>>> clustering = MeanShift(bandwidth=2).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_mean_shift.py,377,">>> clustering.predict([[0, 0], [5, 5]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_mean_shift.py,439,"nbrs = NearestNeighbors(radius=bandwidth, n_jobs=1).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_mean_shift.py,473,"nbrs = NearestNeighbors(radius=bandwidth, n_jobs=self.n_jobs).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/_mean_shift.py,486,"nbrs = NearestNeighbors(n_neighbors=1, n_jobs=self.n_jobs).fit(cluster_centers)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,56,labels = ms.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,74,ms.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,97,ms1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,100,ms2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,109,labels = ms.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,110,labels2 = ms.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,119,ms.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,133,c1 = MeanShift(bandwidth=2).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,136,c2 = MeanShift(bandwidth=2).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,184,ms = MeanShift(max_iter=max_iter).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,207,"ms_binning = MeanShift(bin_seeding=True, bandwidth=None).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_mean_shift.py,208,ms_nobinning = MeanShift(bin_seeding=False).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,70,"kmeans.fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,95,kmeans.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,167,km_full.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,168,km_elkan.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,189,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,292,).fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,321,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,324,).fit(X_fortran)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,354,labels_1 = kmeans.fit(X).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,355,labels_2 = kmeans.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,365,km.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,384,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,402,"MiniBatchKMeans(init_size=10, n_clusters=20).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,413,"Estimator(init=centers, n_clusters=n_clusters, n_init=10).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,425,).fit(zeroed_X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,432,).fit(zeroed_X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,509,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,516,"km = MiniBatchKMeans(n_clusters=10, batch_size=5, n_init=1).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,520,"km = MiniBatchKMeans(n_clusters=10, batch_size=1, n_init=1).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,526,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,548,km.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,562,"km = MiniBatchKMeans(n_clusters=3, batch_size=batch_size, random_state=0).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,576,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,587,km.fit(my_X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,601,s1 = km1.fit(X).score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,603,s2 = km2.fit(X).score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,625,km.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,629,pred = km.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,633,pred = km.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,637,pred = km.predict(km.cluster_centers_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,646,"km_dense.fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,648,"km_sparse.fit(X_csr, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,664,km.fit(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,665,"assert_array_equal(km.predict(X), km.labels_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,667,km.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,668,"assert_array_equal(km.predict(X_csr), km.labels_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,689,km.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,706,km = Estimator(n_clusters=n_clusters).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,710,Xt = km.transform(km.cluster_centers_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,717,Xt = km.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,724,"X1 = Estimator(random_state=0, n_init=1).fit(X).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,725,"X2 = Estimator(random_state=0, n_init=1).fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,741,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,772,km.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,775,Xt[dtype] = km.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,805,km.fit(X_new_type)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,814,km1 = KMeans(n_clusters=n_clusters).fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,815,"km2 = KMeans(n_clusters=n_clusters, init=km1.cluster_centers_, n_init=1).fit(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,831,km.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,851,"km_weighted = clone(km).fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,853,km_repeated = clone(km).fit(X_repeat)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,871,"km_none = clone(km).fit(data, sample_weight=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,872,"km_ones = clone(km).fit(data, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,886,"km_orig = clone(km).fit(data, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,887,"km_scaled = clone(km).fit(data, sample_weight=0.5 * sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,896,"km = KMeans(algorithm=""elkan"", max_iter=1).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,911,"km.fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,925,"result_1 = Estimator(n_clusters=n_clusters, random_state=0).fit(X).labels_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,927,"result_2 = Estimator(n_clusters=n_clusters, random_state=0).fit(X).labels_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,939,km.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,951,"KMeans(n_clusters=1, algorithm=""elkan"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,977,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,1041,"Estimator(n_clusters=2, random_state=0).fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,1086,km.set_params(**param).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,1097,KMeans(**param).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_k_means.py,1113,MiniBatchKMeans(**param).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_feature_agglomeration.py,18,agglo_mean.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_feature_agglomeration.py,21,agglo_median.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_feature_agglomeration.py,29,Xt_mean = agglo_mean.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_feature_agglomeration.py,30,Xt_median = agglo_median.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_feature_agglomeration.py,42,"assert_array_almost_equal(agglo_mean.transform(X_full_mean), Xt_mean)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_feature_agglomeration.py,43,"assert_array_almost_equal(agglo_median.transform(X_full_median), Xt_median)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,46,labels = db.fit(D).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,68,labels = db.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,84,nn = NearestNeighbors(radius=0.9).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,101,nn = NearestNeighbors(radius=lower_eps).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,106,nn = NearestNeighbors(radius=higher_eps).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,135,db = DBSCAN(min_samples=6).fit(X_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,160,labels = db.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,182,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,189,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,198,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,220,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,242,labels = db.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,248,labels = db.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,254,labels = db.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,260,labels = db.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,269,DBSCAN().fit(X)  # must not raise exception
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,359,"est = DBSCAN().fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,366,"label5 = est.fit_predict(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,407,"labels = DBSCAN(eps=0.5, metric=""precomputed"").fit(X).labels_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,411,"labels = DBSCAN(eps=0.5, metric=""precomputed"").fit(X).labels_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_dbscan.py,429,"labels = DBSCAN(eps=0.2, metric=""precomputed"", min_samples=2).fit(matrix).labels_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,26,brc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,39,brc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,62,brc.fit(X_shuffle)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,64,"assert_array_equal(brc.labels_, brc.predict(X_shuffle))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,73,brc1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,81,brc2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,89,brc3.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,94,brc4.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,101,brc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,105,brc_sparse.fit(csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,138,brc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,141,brc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,147,brc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,164,brc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,168,brc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,177,Birch(n_clusters=n_clusters).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_birch.py,186,"brc = Birch().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,48,labels_precomputed = af.fit(S).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,51,labels = af.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,95,AffinityPropagation(**params).fit(input)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,101,labels = af.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,102,labels2 = af.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,111,af.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,116,af.fit(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,118,af.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,131,af.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,175,"af = AffinityPropagation(preference=-10, max_iter=1, random_state=75).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,181,y = af.predict(to_predict)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,187,"af = AffinityPropagation(affinity=""euclidean"", max_iter=2, random_state=34).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,221,ap.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,226,ap.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,239,"ap.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,242,"assert_array_equal(ap.predict(X), np.zeros(X.shape[0], dtype=int))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,252,"afp = AffinityPropagation(preference=1, affinity=""precomputed"", random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,263,af.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,264,"labels = af.predict(csr_matrix((2, 2)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_affinity_propagation.py,274,labels = af.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,104,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,110,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,121,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,134,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,146,"clusters = OPTICS(min_samples=20, xi=0.1).fit(X).cluster_hierarchy_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,160,clust.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,190,clust.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,204,clust.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,216,clust.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,228,OPTICS(metric=pairwise_metric).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,243,OPTICS(metric=pairwise_metric).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,256,OPTICS(metric=pairwise_metric).fit(X_bool)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,258,OPTICS(metric=pairwise_metric).fit(X_num)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,271,"clust = OPTICS(max_eps=1.0, cluster_method=""dbscan"", eps=0.3, min_samples=10).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,287,"op = OPTICS(min_samples=min_samples, cluster_method=""dbscan"", eps=eps).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,290,"db = DBSCAN(eps=eps, min_samples=min_samples).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,311,"clust = OPTICS(min_samples=3, max_eps=7, cluster_method=""xi"", xi=0.04).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,315,"clust = OPTICS(min_samples=3, max_eps=3, cluster_method=""xi"", xi=0.04).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,320,"clust = OPTICS(min_samples=4, max_eps=3, cluster_method=""xi"", xi=0.04).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,328,"clust = OPTICS(min_samples=9, min_cluster_size=min_cluster_size).fit(redX)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,336,clust_frac.fit(redX)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,344,clust.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,350,clust.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,357,"clust = OPTICS(min_samples=3, max_eps=15).fit(Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,558,clust1 = OPTICS(min_samples=5).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,755,"clust2 = OPTICS(min_samples=5, max_eps=0.5).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,768,clust.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,782,"clust = OPTICS(cluster_method=""dbscan"", eps=0.5).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,789,"clust1 = OPTICS(min_samples=10, algorithm=""brute"", metric=""precomputed"").fit(dists)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_optics.py,790,"clust2 = OPTICS(min_samples=10, algorithm=""brute"", metric=""euclidean"").fit(redX)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,57,"AgglomerativeClustering(linkage=""foo"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,66,FeatureAgglomeration().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,149,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,182,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,204,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,214,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,226,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,229,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,238,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,249,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,260,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,264,clustering2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,274,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,282,clustering2.fit(X_dist)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,293,"AgglomerativeClustering(affinity=""euclidean"", linkage=""single"").fit(Xmm)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,303,agglo.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,306,X_red = agglo.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,310,"assert_array_almost_equal(agglo.transform(X_full), X_red)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,314,agglo.fit(X[:0])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,321,clustering.fit(moons)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,328,clustering.fit(circles)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,444,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,479,ward.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,630,w.fit(x)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,658,aglc1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,659,aglc2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,670,aglc1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,671,aglc2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,684,agc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,695,agc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,724,agc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,771,clustering.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,801,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,817,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,848,y_pred = clusterer.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,855,"AgglomerativeClustering(n_clusters=None, distance_threshold=None).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,858,"AgglomerativeClustering(n_clusters=2, distance_threshold=1).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,864,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,873,"AgglomerativeClustering(affinity=""precomputed"", linkage=""complete"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,903,clusterer_precomputed.fit(X_dist)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_hierarchical.py,909,clusterer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_bicluster.py,81,model.fit(mat)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_bicluster.py,117,model.fit(mat)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_bicluster.py,120,model.fit(mat)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_bicluster.py,198,model.fit(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_bicluster.py,202,model.fit(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_bicluster.py,206,model.fit(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_bicluster.py,228,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_bicluster.py,235,model.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_bicluster.py,244,est.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,53,).fit(mat)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,115,.fit(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,130,nn = NearestNeighbors(n_neighbors=n_neighbors + additional_neighbors).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,139,.fit(graph)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,157,sp.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,161,labels = sp.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,172,labels = sp.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,176,labels = sp.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,185,labels = sp.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,191,sp.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,270,labels = sp.fit(X).labels_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,273,"SpectralClustering(n_clusters=2, n_components=2, random_state=0).fit(X).labels_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,281,"SpectralClustering(n_components=2, random_state=0).fit(X).labels_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cluster/tests/test_spectral.py,293,"SpectralClustering(n_clusters=2, random_state=42, verbose=1).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/_hash.py,89,>>> f = h.transform(D)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/_dict_vectorizer.py,89,>>> X = v.fit_transform(D)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/_dict_vectorizer.py,96,">>> v.transform({'foo': 4, 'unseen_feature': 3})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/_dict_vectorizer.py,435,>>> X = v.fit_transform(D)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/_dict_vectorizer.py,436,">>> support = SelectKBest(chi2, k=2).fit(X, [0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,723,>>> X = vectorizer.fit_transform(corpus)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,811,"self._get_hasher().fit(X, y=y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,837,X = self._get_hasher().transform(analyzer(doc) for doc in X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,862,"return self.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,1068,>>> X = vectorizer.fit_transform(corpus)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,1078,>>> X2 = vectorizer2.fit_transform(corpus)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,1283,self.fit_transform(raw_documents)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,1576,"...                  ('tfid', TfidfTransformer())]).fit(corpus)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,1577,>>> pipe['count'].transform(corpus).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,1585,>>> pipe.transform(corpus).shape
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,1909,>>> X = vectorizer.fit_transform(corpus)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,2053,X = super().fit_transform(raw_documents)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,2054,self._tfidf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,2077,X = super().fit_transform(raw_documents)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,2078,self._tfidf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,2081,"return self._tfidf.transform(X, copy=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,2101,X = super().transform(raw_documents)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/text.py,2102,"return self._tfidf.transform(X, copy=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/image.py,489,>>> pe_fit = pe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/image.py,490,>>> pe_trans = pe.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,25,X = v.fit_transform(iter(D) if iterable else D)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,34,"assert_array_equal(X.A, v.transform(iter(D) if iterable else D).A)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,36,"assert_array_equal(X, v.transform(iter(D) if iterable else D))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,52,"v = DictVectorizer().fit([d1, d2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,53,"X = v.transform([d1, d2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,54,"sel = SelectKBest(chi2, k=2).fit(X, [0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,70,X = v.fit_transform(D_in)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,97,X = v.fit_transform(D_in)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,117,v.fit(D2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,134,v.fit(D2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,141,v = DictVectorizer(sparse=sparse).fit(D)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,143,"X = v.transform({""push the pram a lot"": 2})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,148,X = v.transform({})
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,154,v.transform([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,168,v_1 = DictVectorizer().fit([d_sorted])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,169,v_2 = DictVectorizer().fit([d_shuffled])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,179,dv.fit(d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,187,v = DictVectorizer().fit(D_in)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,208,dense_vector_fit = dense_vectorizer.fit_transform(movie_entry_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,209,sparse_vector_fit = sparse_vectorizer.fit_transform(movie_entry_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,216,dense_vector_transform = dense_vectorizer.transform(movie_entry_transform)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,217,sparse_vector_transform = sparse_vectorizer.transform(movie_entry_transform)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,249,vectorizer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_dict_vectorizer.py,257,dv = DictVectorizer(sparse=False).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_image.py,252,assert extr == extr.fit(faces)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_image.py,265,patches = extr.transform(faces)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_image.py,275,patches = extr.transform(faces)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_image.py,282,patches = extr.transform(faces)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_image.py,292,patches = extr.transform(faces)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_image.py,302,patches = extr.transform(faces)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,323,vect.fit(JUNK_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,328,X = vect.transform(JUNK_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,344,X = pipe.fit_transform(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,354,"vect.fit([""pasta_siziliana""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,361,"vect.fit([""pasta_verdura""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,382,"vect.fit([""foo""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,387,"v.fit([""to be or not to be"", ""and me too"", ""and so do you""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,392,X1 = cv.fit_transform(ALL_FOOD_DOCS[:5])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,393,X2 = cv.fit_transform(ALL_FOOD_DOCS[5:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,413,vectorizer.fit_transform(corpus)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,435,vectorizer.fit(corpus)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,452,vectorizer.fit(vocabulary)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,455,vectorizer.transform(vocabulary)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,462,"tr = TfidfTransformer(smooth_idf=True, norm=""l2"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,472,tfidf = tr.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,481,tfidf = tr.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,488,tfidf = tr.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,501,tr.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,507,tfidf = tr.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,523,counts_train = v1.fit_transform(train_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,533,counts_test = v.transform(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,559,tfidf = t1.fit(counts_train).transform(counts_train).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,564,tfidf_test = t1.transform(counts_test).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,569,tf = t2.fit(counts_train).transform(counts_train).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,575,t3.transform(counts_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,586,tfidf2 = tv.fit_transform(train_data).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,591,tfidf_test2 = tv.transform(test_data).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,597,v3.transform(train_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,633,X = v.transform(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,651,X = v.transform(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,681,X = cv.fit_transform(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,762,vectorizer.fit(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,777,counts_1 = cv_1.fit_transform(JUNK_FOOD_DOCS).sum(axis=0)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,778,counts_3 = cv_3.fit_transform(JUNK_FOOD_DOCS).sum(axis=0)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,779,counts_None = cv_None.fit_transform(JUNK_FOOD_DOCS).sum(axis=0)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,799,vect.fit(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,805,vect.fit(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,812,vect.fit(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,822,vect.fit(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,828,vect.fit(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,835,vect.fit(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,864,vect.fit(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,874,X = vect.fit_transform(test_data).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,881,X = vect.fit_transform(test_data).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,886,X_sparse = vect.fit_transform(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,895,X = vect.transform(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,905,X = vect.transform(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,913,X = vect.transform(test_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,922,transformed_data = vectorizer.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,974,"pred = grid_search.fit(train_data, target_train).predict(test_data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1011,"pred = grid_search.fit(train_data, target_train).predict(test_data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1047,X_counted = vect.fit_transform([document])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1051,X_hashed = vect.transform([document])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1066,X_1 = vect.fit_transform(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1067,X_2 = vect.transform(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1081,"CountVectorizer(preprocessor=strip_tags).fit(JUNK_FOOD_DOCS),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1082,"CountVectorizer(strip_accents=strip_eacute).fit(JUNK_FOOD_DOCS),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1085,"TfidfVectorizer().fit(JUNK_FOOD_DOCS),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1097,"copy.fit_transform(JUNK_FOOD_DOCS).toarray(),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1098,"orig.fit_transform(JUNK_FOOD_DOCS).toarray(),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1147,cv.fit(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1148,unpickled_cv.fit(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1177,cv.fit(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1178,unpickled_cv.fit(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1186,"TfidfVectorizer().fit(JUNK_FOOD_DOCS),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1187,"CountVectorizer(preprocessor=strip_tags).fit(JUNK_FOOD_DOCS),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1188,"CountVectorizer(strip_accents=strip_eacute).fit(JUNK_FOOD_DOCS),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1192,vect_transform = vect.transform(JUNK_FOOD_DOCS).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1195,stop_None_transform = vect.transform(JUNK_FOOD_DOCS).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1198,stop_del_transform = vect.transform(JUNK_FOOD_DOCS).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1205,X = CountVectorizer().fit_transform(JUNK_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1206,orig = TfidfTransformer().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1210,"assert_array_equal(copy.fit_transform(X).toarray(), orig.fit_transform(X).toarray())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1214,X = CountVectorizer().fit_transform(JUNK_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1215,orig = TfidfTransformer().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1218,"assert_array_equal(copy.transform(X).toarray(), orig.transform(X).toarray())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1223,orig.fit(JUNK_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1227,"copy.transform(JUNK_FOOD_DOCS).toarray(),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1228,"orig.transform(JUNK_FOOD_DOCS).toarray(),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1234,vect.fit(JUNK_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1246,vect.fit([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1258,"hv.fit_transform([""hello world"", np.nan, ""hello hello""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1269,"X = v.fit_transform([""hello world"", ""hello hello""]).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1271,"X2 = v.transform([""hello world"", ""hello hello""]).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1277,vect.fit(JUNK_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1284,vect_vocab.fit(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1285,vect_vocab_clone.fit(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1297,"vec.fit_transform(""hello world!"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1300,"vec.fit(""hello world!"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1301,"vec.fit([""some text"", ""some other text""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1304,"vec.transform(""hello world!"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1310,X_trans = TfidfTransformer().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1319,X_trans_csc = TfidfTransformer().fit_transform(X_csc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1320,X_trans_csr = TfidfTransformer().fit_transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1342,X_idf = vectorizer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1369,"vec.fit([""good news everyone""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1372,"vec.fit_transform([""good news everyone""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1376,"vec.transform([""good news everyone""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1397,"vec.fit_transform([""hello world""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1404,"vec.fit_transform([""hello world""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1411,"vec.fit_transform([""hello world""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1453,vec.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1483,"Estimator(analyzer=lambda x: x.split(), input=input_type).fit_transform(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1501,"Estimator(analyzer=analyzer, input=input_type).fit_transform(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1519,"Estimator(analyzer=analyzer, input=""file"").fit_transform([f])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1627,vect.fit(train_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1641,vectorizer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1649,"vocab1 = vec.fit([""hello"", ""world""]).vocabulary_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1650,"vocab2 = vec.fit([""world"", ""hello""]).vocabulary_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1656,cv = CountVectorizer(max_df=0.5).fit(ALL_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_text.py,1666,"indices = hashing.transform([""22pcs efuture""]).indices"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,16,X1 = FeatureHasher(n_features=16).transform(raw_X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,18,"X2 = FeatureHasher(n_features=16, input_type=""pair"").transform(gen)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,37,X = h.transform(it)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,78,"x1, x2 = h.transform(raw_X).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,91,"x1, x2 = h.transform(raw_X).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,98,"x1, x2 = h.transform(raw_X).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,111,X = h.transform(raw_X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,128,h.transform([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,130,h.transform([[5.5]])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,132,h.transform([[None]])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,140,hasher.fit()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,145,"X = FeatureHasher().transform([{""foo"": 0}])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,153,"Xt = FeatureHasher(alternate_sign=True, input_type=""string"").fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,156,"Xt = FeatureHasher(alternate_sign=False, input_type=""string"").fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,165,).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_extraction/tests/test_feature_hasher.py,172,).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_label_propagation.py,42,">>> label_prop_model.fit(iris.data, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_label_propagation.py,143,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_label_propagation.py,414,">>> label_prop_model.fit(iris.data, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_label_propagation.py,475,"return super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_label_propagation.py,570,">>> label_prop_model.fit(iris.data, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_self_training.py,137,">>> self_training_model.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_self_training.py,232,self.base_estimator_.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_self_training.py,281,self.base_estimator_.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_self_training.py,308,return self.base_estimator_.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/_self_training.py,402,"return self.base_estimator_.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,43,"self_training.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,49,"st.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,58,"st.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,63,"st.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,70,"st.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,76,"st.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,95,"st.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,96,pred = st.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,102,"st_string.fit(X_train, y_train_missing_strings)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,103,pred_string = st_string.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,139,"st.fit(X_train, y_train_only_one_label)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,152,"base_estimator.fit(X_train[n_labeled_samples:], y_train[n_labeled_samples:])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,155,"st.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,157,"pred1, pred2 = base_estimator.predict(X_test), st.predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,159,"score_supervised = accuracy_score(base_estimator.predict(X_test), y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,160,"score_self_training = accuracy_score(st.predict(X_test), y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,169,"st.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,188,"clf1.fit(X_train, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,190,"clf2 = base_estimator.fit(X_train[:n_labeled_samples], y[:n_labeled_samples])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,192,"assert_array_equal(clf1.predict(X_test), clf2.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,200,"knn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,206,st.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,215,"st.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,227,"knn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,230,"st.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,231,"assert_array_equal(knn.predict(X_test), st.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,245,"st.fit(X_train_easy, y_train_easy)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,258,"clf.fit(X, y_strings)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,264,"clf.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,288,"st.fit(X_train, y_train_only_one_label)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,304,"st.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,308,"svc.fit(X_train[has_label], y_train_missing_labels[has_label])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_self_training.py,340,"clf.fit(X_train, y_train_missing_labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,36,"clf = estimator(**parameters).fit(samples, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,44,"clf = estimator(**parameters).fit(samples, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,60,"clf = estimator(**parameters).fit(samples, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,61,"assert_array_equal(clf.predict([[0.5, 2.5]]), np.array([1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,68,"clf = estimator(**parameters).fit(samples, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,78,"clf = label_propagation.LabelSpreading().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,88,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,102,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,123,"label_propagation.LabelSpreading(alpha=alpha).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,131,"mdl.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,135,"assert_array_equal(mdl.predict(X), [0, 1, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,145,"mdl.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,150,"mdl.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,155,"mdl.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,160,"mdl.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,177,"mdl.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,187,nn.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,211,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,212,"assert model.score(X_test, y_test) >= 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,215,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/semi_supervised/tests/test_label_propagation.py,216,"assert model.score(X_test, y_test) >= 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/_gpc.py,196,self.y_train_ = label_encoder.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/_gpc.py,629,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/_gpc.py,630,">>> gpc.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/_gpc.py,715,"self.base_estimator_.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/_gpc.py,751,return self.base_estimator_.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,806,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,807,">>> gpr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,904,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,905,">>> gpr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1005,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1006,">>> gpr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1008,">>> gpr.predict(X[:1,:], return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1204,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1205,">>> gpr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1207,">>> gpr.predict(X[:1,:], return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1334,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1335,">>> gpr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1337,">>> gpr.predict(X[:2,:], return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1478,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1479,">>> gpc.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1648,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1649,">>> gpc.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1828,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1829,">>> gpc.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1977,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1978,">>> gpr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,1980,">>> gpr.predict(X[:2,:], return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,2124,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,2125,">>> gpr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,2127,">>> gpr.predict(X[:2,:], return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,2274,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/kernels.py,2275,">>> gpc.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/_gpr.py,169,"...         random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/_gpr.py,170,">>> gpr.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/_gpr.py,172,">>> gpr.predict(X[:2,:], return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/_gpr.py,473,"y_mean, y_cov = self.predict(X, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,58,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,59,"y_pred, y_cov = gpr.predict(X, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,70,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,71,"y_pred, y_cov = gpr.predict(X, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,86,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,95,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,104,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,114,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,128,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,142,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,157,"y_mean, y_cov = gpr.predict(X, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,170,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,172,"y_mean, y_cov = gpr.predict(X2, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,188,"gpr = GaussianProcessRegressor(kernel=kernel, optimizer=None).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,199,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,200,"y_mean, y_cov = gpr.predict(X2, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,201,"y_mean, y_std = gpr.predict(X2, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,215,"gpr = GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,240,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,264,"gpr.fit(X, y_norm)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,268,"gpr_norm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,271,"y_pred, y_pred_std = gpr.predict(X2, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,274,"y_pred_norm, y_pred_std_norm = gpr_norm.predict(X2, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,279,"_, y_cov = gpr.predict(X2, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,281,"_, y_cov_norm = gpr_norm.predict(X2, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,305,"y_pred_gpy, y_var_gpy = gpy.predict(X2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,317,"gpr.fit(X, y_large)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,318,"y_pred, y_pred_std = gpr.predict(X2, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,350,"gpr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,353,"gpr_2d.fit(X, y_2d)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,355,"y_pred_1d, y_std_1d = gpr.predict(X2, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,356,"y_pred_2d, y_std_2d = gpr_2d.predict(X2, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,357,"_, y_cov_1d = gpr.predict(X2, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,358,"_, y_cov_2d = gpr_2d.predict(X2, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,374,"gpr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,377,"gpr_2d.fit(X, np.vstack((y, y)).T)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,401,"gpr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,420,"gpr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,431,"gpr_equal_inputs.fit(X_, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,435,"gpr_similar_inputs.fit(X_, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,438,"y_pred_equal, y_std_equal = gpr_equal_inputs.predict(X_test, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,439,"y_pred_similar, y_std_similar = gpr_similar_inputs.predict(X_test, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,451,"_, y_std1 = gpr1.predict(X, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,452,"_, y_cov1 = gpr1.predict(X, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,455,"_, y_std2 = gpr2.predict(X, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,456,"_, y_cov2 = gpr2.predict(X, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,472,"gpr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,482,"gpr_sum.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,513,"gpr_dims.fit(X_tile, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,546,"GaussianProcessRegressor(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,563,"gpr.fit(X, y_constant)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,566,"y_pred, y_cov = gpr.predict(X, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,603,"gpr.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,612,"pred1, std = gpr.predict(X_test, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,613,"pred2, cov = gpr.predict(X_test, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,636,"gpr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,641,"gpr = GaussianProcessRegressor(kernel=RBF()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,650,"gpr = GaussianProcessRegressor(kernel=RBF()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,654,"gpr.predict(X, return_cov=True, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,678,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,679,"y_pred, y_std = model.predict(X_test, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpr.py,680,"_, y_cov = model.predict(X_test, return_cov=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,48,"gpc = GaussianProcessClassifier(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,49,"assert_array_equal(gpc.predict(X), gpc.predict_proba(X)[:, 1] >= 0.5)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,57,"gpc = GaussianProcessClassifier(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,58,"assert_array_equal(gpc.predict(X), gpc.predict_proba(X)[:, 1] >= 0.5)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,64,"gpc = GaussianProcessClassifier(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,73,"gpc = GaussianProcessClassifier(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,82,"gpc = GaussianProcessClassifier(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,92,"gpc = GaussianProcessClassifier(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,106,"gpc = GaussianProcessClassifier(kernel=kernel).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,131,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,156,"gpc.fit(X, y_mc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,167,"gpc.fit(X, y_mc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,172,y_pred = gpc.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,180,"gpc.fit(X, y_mc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,183,"gpc_2.fit(X, y_mc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,200,"gpc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,210,"gpc_sum.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/gaussian_process/tests/test_gpc.py,241,"gpc_dims.fit(X_tile, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,29,"regressor.fit(X, func(y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,33,"regressor.fit(X, transformer.transform(y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,37,inverse_func(regressor.predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,41,transformer.inverse_transform(regressor.predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,122,">>> tt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,124,">>> tt.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,175,self.transformer_.fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,179,y_sel_t = self.transformer_.transform(y_sel)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,232,y_trans = self.transformer_.transform(y_2d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,246,"self.regressor_.fit(X, y_trans, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_target.py,274,"pred = self.regressor_.predict(X, **predict_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_column_transformer.py,191,>>> ct.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_column_transformer.py,642,"self.fit_transform(X, y=y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/_column_transformer.py,1014,>>> ct.fit_transform(X)  # doctest: +SKIP
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,40,"regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,50,"regr.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,57,"regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,75,"regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,98,"y_pred = regr.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,100,"y_tran = regr.transformer_.transform(y.reshape(-1, 1)).squeeze()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,106,"assert_allclose(y_pred, regr.inverse_func(regr.regressor_.predict(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,108,"lr = LinearRegression().fit(X, regr.func(y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,118,"y_pred = regr.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,120,y_tran = regr.transformer_.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,124,"assert_allclose(y_pred, regr.inverse_func(regr.regressor_.predict(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,126,"lr = LinearRegression().fit(X, regr.func(y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,144,"y_pred = regr.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,147,y_tran = regr.transformer_.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,155,"lr.fit(X, transformer2.fit_transform(y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,156,y_lr_pred = lr.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,171,"y_pred = regr.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,175,"y_tran = regr.transformer_.transform(y.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,177,y_tran = regr.transformer_.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,186,"lr.fit(X, transformer2.fit_transform(y.reshape(-1, 1)).squeeze())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,187,"y_lr_pred = lr.predict(X).reshape(-1, 1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,190,"lr.fit(X, transformer2.fit_transform(y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,191,y_lr_pred = lr.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,207,"y_pred = regr.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,210,y_tran = regr.transformer_.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,218,"lr.fit(X, transformer2.fit_transform(y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,219,y_lr_pred = lr.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,241,"y_pred = regr.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,259,"tt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,260,y_pred_2d_func = tt.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,270,"tt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,271,y_pred_1d_func = tt.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,294,"return super().fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,298,return super().predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,311,"tt.fit(X.tolist(), y.tolist())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,312,tt.predict(X.tolist())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,314,"tt.fit(X, y.tolist())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,316,tt.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,344,"ttr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,353,"return super().fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,362,"regr.fit(X, y, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,375,"pip.fit(X, y, **{""est__check_input"": False})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,386,return super().predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,396,"regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_target.py,397,"regr.predict(X, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,102,"assert_array_equal(ct.fit_transform(X_array), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,103,"assert_array_equal(ct.fit(X_array).transform(X_array), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,109,"assert_array_equal(ct.fit_transform(X_array), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,110,"assert_array_equal(ct.fit(X_array).transform(X_array), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,113,"assert_array_equal(ct.fit_transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,114,"assert_array_equal(ct.fit(X_array).transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,129,"assert_array_equal(both.fit_transform(X_array), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,130,"assert_array_equal(both.fit(X_array).transform(X_array), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,136,"assert_array_equal(both.fit_transform(X_array), 0.1 * X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,137,"assert_array_equal(both.fit(X_array).transform(X_array), 0.1 * X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,177,"assert_array_equal(ct.fit_transform(X_df), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,178,"assert_array_equal(ct.fit(X_df).transform(X_df), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,184,"assert_array_equal(ct.fit_transform(X_df), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,185,"assert_array_equal(ct.fit(X_df).transform(X_df), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,190,"assert_array_equal(ct.fit_transform(X_df), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,191,"assert_array_equal(ct.fit(X_df).transform(X_df), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,196,"assert_array_equal(ct.fit_transform(X_df), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,197,"assert_array_equal(ct.fit(X_df).transform(X_df), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,213,"assert_array_equal(both.fit_transform(X_df), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,214,"assert_array_equal(both.fit(X_df).transform(X_df), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,222,"assert_array_equal(both.fit_transform(X_df), 0.1 * X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,223,"assert_array_equal(both.fit(X_df).transform(X_df), 0.1 * X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,230,"assert_array_equal(both.fit_transform(X_df), 0.1 * X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,231,"assert_array_equal(both.fit(X_df).transform(X_df), 0.1 * X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,248,ct.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,250,ct.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,256,"assert_array_equal(ct.fit_transform(X_df2), X_res_first)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,257,"assert_array_equal(ct.fit(X_df2).transform(X_df2), X_res_first)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,292,"assert_array_equal(ct.fit_transform(X), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,293,"assert_array_equal(ct.fit(X).transform(X), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,300,"assert_array_equal(ct.fit_transform(X), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,301,"assert_array_equal(ct.fit(X).transform(X), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,306,"assert_array_equal(ct.fit_transform(X), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,307,"assert_array_equal(ct.fit(X).transform(X), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,313,"assert_array_equal(ct.fit_transform(X), fixture)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,314,"assert_array_equal(ct.fit(X).transform(X), fixture)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,324,X_trans = ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,337,X_trans = ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,345,X_trans = ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,356,X_trans = ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,371,X_trans = ct.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,382,X_trans = ct.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,405,assert sparse.issparse(ct.fit_transform(X_sparse))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,406,"assert_allclose_dense_sparse(ct.fit_transform(X_sparse), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,407,"assert_allclose_dense_sparse(ct.fit(X_sparse).transform(X_sparse), res)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,411,assert sparse.issparse(ct.fit_transform(X_sparse))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,412,"assert_allclose_dense_sparse(ct.fit_transform(X_sparse), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,413,"assert_allclose_dense_sparse(ct.fit(X_sparse).transform(X_sparse), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,432,"assert_array_equal(ct.fit_transform(X_list), expected_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,433,"assert_array_equal(ct.fit(X_list).transform(X_list), expected_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,442,col_trans.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,443,X_trans = col_trans.transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,454,col_trans.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,455,X_trans = col_trans.transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,470,X_trans = ct.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,480,ct.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,492,res = col_trans.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,505,res = col_trans.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,517,res = col_trans.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,530,res = col_trans.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,541,col_trans.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,544,col_trans.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,560,ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,563,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,576,ct.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,579,ct.fit(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,590,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,596,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,601,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,605,ct.transform(X_array_more)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,615,ct.transform(X_array_fewer)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,630,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,650,"assert_almost_equal(ct1.fit_transform(X_df), ct2.fit_transform(X_df))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,749,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,764,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,769,ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,784,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,810,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,817,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,822,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,826,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,830,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,836,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,842,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,848,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,863,ct.fit(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,867,ct.fit(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,871,ct.fit(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,877,ct.fit(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,884,ct.fit(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,890,ct.fit(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,896,ct.fit(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,900,ct.fit(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,910,"assert_array_equal(ct.fit_transform(X_array), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,911,"assert_array_equal(ct.fit(X_array).transform(X_array), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,917,"assert_array_equal(ct.fit(X_array).transform(X_array).shape, (3, 0))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,918,"assert_array_equal(ct.fit_transform(X_array).shape, (3, 0))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,926,"assert_array_equal(ct.fit_transform(X_array), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,927,"assert_array_equal(ct.fit(X_array).transform(X_array), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,936,ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,938,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,950,"assert_array_equal(ct.fit_transform(X_array), X_res_first)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,951,"assert_array_equal(ct.fit(X_array).transform(X_array), X_res_first)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,959,"assert_array_equal(ct.fit_transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,960,"assert_array_equal(ct.fit(X_array).transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,968,"assert_array_equal(ct.fit_transform(X_array), X_res_both[:, ::-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,969,"assert_array_equal(ct.fit(X_array).transform(X_array), X_res_both[:, ::-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,977,"assert_array_equal(ct.fit_transform(X_array), X_res_second)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,978,"assert_array_equal(ct.fit(X_array).transform(X_array), X_res_second)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,988,ct.fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,991,ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1007,"assert_array_equal(ct.fit_transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1008,"assert_array_equal(ct.fit(X_array).transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1040,"assert_array_equal(ct.fit_transform(X_df), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1041,"assert_array_equal(ct.fit(X_df).transform(X_df), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1060,"assert_array_equal(ct.fit_transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1061,"assert_array_equal(ct.fit(X_array).transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1073,"assert_array_equal(ct.fit_transform(X_array), X_array)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1074,"assert_array_equal(ct.fit(X_array).transform(X_array), X_array)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1087,"assert_array_equal(ct.fit_transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1088,"assert_array_equal(ct.fit(X_array).transform(X_array), X_res_both)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1102,X_trans = ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1122,X_trans = ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1185,X_trans = ct.fit_transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1289,"assert_array_equal(ct.fit_transform(X_array), X_res_first)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1290,"assert_array_equal(ct.fit(X_array).transform(X_array), X_res_first)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1309,"assert_array_equal(ct.fit_transform(X_df), X_res_first)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1310,"assert_array_equal(ct.fit(X_df).transform(X_df), X_res_first)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1324,"assert_array_equal(tf_1.fit_transform(X), tf_2.fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1337,X_trans = column_transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1348,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1414,X_selector = ct_selector.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1415,X_direct = ct_direct.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1472,ct.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1492,ct.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1504,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1548,ct.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1563,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1575,ct.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1598,tf.fit(X_fit_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1599,X_fit_trans = tf.transform(X_fit_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1602,X_trans = tf.transform(X_trans_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1608,X_trans = tf.transform(X_extended_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1617,tf.transform(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1633,tf.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1636,tf.transform(df_dropped)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1640,tf.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1642,df_dropped_trans = tf.transform(df_dropped)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1643,df_fit_trans = tf.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1648,tf.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1649,df_dropped_trans = tf.transform(df_dropped)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1650,df_fit_trans = tf.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1662,"ct.fit([[1, 2], [3, 4]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1680,ct.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1771,ct.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1847,ct.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/compose/tests/test_column_transformer.py,1938,ct.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/datasets/_samples_generator.py,450,Y = lb.fit([range(n_classes)]).transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/datasets/_twenty_newsgroups.py,480,X_train = vectorizer.fit_transform(data_train.data).tocsr()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/datasets/_twenty_newsgroups.py,481,X_test = vectorizer.transform(data_test.data).tocsr()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_metaestimators.py,162,delegator.fit(*delegator_data.fit_args)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_metaestimators.py,298,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,44,"rgr.fit(X_train, y_train[:, n])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,45,"references[:, n] = rgr.predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,48,"rgr.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,49,y_pred = rgr.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,65,"references[:, n] = sgr.predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,72,y_pred = sgr.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,83,"rgr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,101,"rgr.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,102,"rgr_sparse.fit(sparse(X_train), y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,104,"assert_almost_equal(rgr.predict(X_test), rgr_sparse.predict(sparse(X_test)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,115,"rgr.fit(X, y, w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,119,"rgr.fit(X, y, w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,135,assert rgr.predict(X)[0][0] != rgr_w.predict(X)[0][0]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,144,"rgr_w.fit(Xw, yw, w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,150,"rgr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,153,"assert_almost_equal(rgr.predict(X_test), rgr_w.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,188,"multi_target_linear.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,194,"multi_target_linear.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,214,"multi_target_linear.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,222,"multi_target_linear.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,239,first_predictions = multi_target_linear.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,243,second_predictions = multi_target_linear.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,254,"assert_array_equal(sgd_linear_clf.predict(X), first_predictions[:, i])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,256,"assert_array_equal(sgd_linear_clf.predict(X), second_predictions[:, i])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,275,"multi_target_forest.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,277,predictions = multi_target_forest.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,291,"forest_.fit(X, y[:, i])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,292,"assert list(forest_.predict(X)) == list(predictions[:, i])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,302,"multi_target_svc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,304,predictions = multi_target_svc.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,310,"multi_class_svc_.fit(X, y[:, i])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,311,"assert list(multi_class_svc_.predict(X)) == list(predictions[:, i])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,333,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,368,"clf_w.fit(Xw, yw, w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,375,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,378,"assert_almost_equal(clf.predict(X_test), clf_w.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,388,"clf_w.fit(Xw, yw, w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,395,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,397,"assert_array_almost_equal(clf.predict(X_test), clf_w.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,405,"moc.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,410,"moc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,412,"moc.score(X, y_new)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,417,"moc.fit(X, X[:, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,435,"moc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,444,"moc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,466,"classifier_chain.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,468,Y_pred = classifier_chain.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,484,"classifier_chain.fit(X_sparse, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,485,Y_pred_sparse = classifier_chain.predict(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,488,"classifier_chain.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,489,Y_pred_dense = classifier_chain.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,505,"ovr.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,506,Y_pred_ovr = ovr.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,509,"chain.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,510,Y_pred_chain = chain.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,522,"chain.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,523,Y_pred = chain.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,545,"chain.fit(X_sparse, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,546,Y_pred = chain.predict(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,555,"chain_random.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,557,"chain_fixed.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,574,"chain.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,576,"chain_cv.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,577,Y_pred_cv = chain_cv.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,578,Y_pred = chain.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,599,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,609,"return super().fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,615,"return super().fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,635,"estimator.fit(X, y, some_param=some_param)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,649,"super().fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,655,"model.fit(X, y, **fit_param)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,677,"MultiOutputEstimator(pipe).fit(X, y).score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,688,"chain.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,691,"assert_array_almost_equal(chain.predict(X_test), y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,702,"chain.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,715,"reg = MultiOutputRegressor(estimator=stacker).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multioutput.py,718,reg.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,35,"y_transformed = ir.fit_transform(x, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,36,"y_transformed_s = ir.fit(x_s, y_s, sample_weight=sample_weight_s).transform(x)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,123,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,124,"assert_array_equal(ir.fit(x, y).transform(x), ir.fit_transform(x, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,125,"assert_array_equal(ir.transform(x), ir.predict(x))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,130,"assert_array_equal(ir.fit_transform(x[perm], y[perm]), ir.fit_transform(x, y)[perm])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,131,"assert_array_equal(ir.transform(x[perm]), ir.transform(x)[perm])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,135,"assert_array_equal(ir.fit_transform(np.ones(len(x)), y), np.mean(y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,146,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,147,"assert_array_equal(ir.fit(x, y).transform(x), ir.fit_transform(x, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,148,"assert_array_equal(y_true, ir.fit_transform(x, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,159,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,160,"assert_array_equal(ir.fit(x, y).transform(x), ir.fit_transform(x, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,161,"assert_array_equal(y_true, ir.fit_transform(x, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,200,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,201,"assert_array_almost_equal(ir.transform(x), y_true, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,202,"assert_array_almost_equal(ir.fit_transform(x, y), y_true, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,224,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,225,"assert_array_almost_equal(ir.transform(x), y_true)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,226,"assert_array_almost_equal(ir.fit_transform(x, y), y_true)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,231,"y_ = IsotonicRegression(increasing=False).fit_transform(np.arange(len(y)), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,244,"y_ = ir.fit_transform(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,262,"y_ = ir.fit_transform(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,277,"ir.fit([0, 1, 2], [5, 7, 3], [0.1, 0.6])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,280,"ir.fit([0, 1, 2], [5, 7])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,284,"ir.fit(rng.randn(3, 10), [0, 1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,288,"ir.transform(rng.randn(3, 10))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,301,"y_set_value = ir.fit_transform(x, y, sample_weight=weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,302,"y_default_value = ir.fit_transform(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,314,"y_result = np.round(ir.fit_transform(x, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,324,"received_y = ir.fit_transform(x, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,336,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,341,"ir.predict([min(x) - 10, max(x) + 10])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,351,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,354,"y1 = ir.predict([min(x) - 10, max(x) + 10])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,355,y2 = ir.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,367,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,370,"y1 = ir.predict([min(x) - 10, max(x) + 10])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,385,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,397,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,401,ir.transform(x)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,410,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,414,"np.testing.assert_array_equal(ir.predict(x), ir2.predict(x))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,422,"ir.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,423,all_predictions_finite = np.all(np.isfinite(ir.predict(x)))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,487,"regression.fit(x, y, sample_weight=w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,490,"regression.fit(x, y, sample_weight=w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,514,"# .fit() method, without removing unnecessary points"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,521,"fast_model.fit(X_train, y_train, sample_weight=weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,524,y_pred_slow = slow_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,525,y_pred_fast = fast_model.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,552,"reg.fit(X, y_np, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,553,res = reg.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,564,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,565,assert reg.predict(X).dtype == X.dtype
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,597,"ireg = IsotonicRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,598,"y_pred = ireg.predict([0, 0.5, 1, 1.5, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,610,"ireg = IsotonicRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,611,"y_pred = ireg.predict(np.array([0, 2.1e-319, 5.4e-316, 1e-10]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,621,"ireg = IsotonicRegression(increasing=increasing).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,649,"iso_reg = IsotonicRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,650,"iso_reg_2d = IsotonicRegression().fit(X_2d, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,659,y_pred1 = iso_reg.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,660,y_pred2 = iso_reg_2d.predict(X_2d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,672,"IsotonicRegression().fit(X_2d, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,674,"iso_reg = IsotonicRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,676,iso_reg.predict(X_2d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,679,iso_reg.transform(X_2d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_isotonic.py,696,"IsotonicRegression().fit(X, y, sample_weight=sample_weight_fit)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_docstring_parameters.py,289,est.fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_docstring_parameters.py,291,"est.fit(np.c_[y, y])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_docstring_parameters.py,293,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,47,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,48,y_pred = est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,54,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,55,y_pred = est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,64,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,65,y_pred = est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,80,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,81,"assert_array_equal(clf.predict(X), np.ones(len(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,105,"clf_1d.fit(X, y_1d)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,106,"clf_2d.fit(X, y_2d)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,107,"assert_array_equal(clf_1d.predict(X), clf_2d.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,118,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,120,"clf.predict(X),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,131,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,134,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,146,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,149,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,164,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,167,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,178,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,181,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,196,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,197,"assert_array_equal(clf.predict(X), [""paris""] * 5)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,212,"clf.fit(None, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,213,"assert clf.score(None, y_test) == 0.5"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,223,"clf1.fit(X1, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,224,predictions1 = clf1.predict(X1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,228,"clf2.fit(X2, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,229,predictions2 = clf2.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,237,"clf.fit([], [])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,240,clf.predict([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,253,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,254,"assert_array_equal(reg.predict(X), [np.mean(y)] * len(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,271,"est.fit(X_learn, y_learn)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,272,y_pred_learn = est.predict(X_learn)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,273,y_pred_test = est.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,282,reg.predict([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,293,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,294,"assert_array_equal(reg.predict(X), [np.median(y)] * len(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,311,"est.fit(X_learn, y_learn)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,312,y_pred_learn = est.predict(X_learn)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,313,y_pred_test = est.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,327,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,328,"assert_array_equal(reg.predict(X), [np.median(y)] * len(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,331,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,332,"assert_array_equal(reg.predict(X), [np.min(y)] * len(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,335,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,336,"assert_array_equal(reg.predict(X), [np.max(y)] * len(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,339,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,340,"assert_array_equal(reg.predict(X), [np.percentile(y, q=30)] * len(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,358,"est.fit(X_learn, y_learn)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,359,y_pred_learn = est.predict(X_learn)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,360,y_pred_test = est.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,367,"est.fit(X_learn, y_learn)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,368,y_pred_learn = est.predict(X_learn)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,369,y_pred_test = est.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,384,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,388,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,392,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,396,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,400,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,404,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,410,"est.fit([], [])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,421,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,422,"assert_array_equal(reg.predict(X), [43] * len(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,425,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,426,"assert_array_equal(reg.predict(X), [43] * len(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,444,"est.fit(X_learn, y_learn)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,445,y_pred_learn = est.predict(X_learn)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,446,y_pred_test = est.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,457,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,468,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,477,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,487,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,495,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,496,"assert_array_equal(clf.predict(X), np.ones(len(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,502,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,503,"assert_array_equal(clf.predict(X), np.array([""one""] * 4))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,514,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,516,"clf.predict(X), np.hstack([np.ones((n_samples, 1)), np.zeros((n_samples, 1))])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,556,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,564,"clf = DummyClassifier(strategy=""stratified"").fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,575,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,576,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,589,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,592,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,606,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,609,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,628,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,630,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,642,"est = DummyRegressor(strategy=""mean"").fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,645,"est = DummyRegressor(strategy=""median"").fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,648,"est = DummyRegressor(strategy=""quantile"", quantile=0.95).fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,657,"cls.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,658,y_pred = cls.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,668,"cls.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,669,y_pred = cls.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,680,"cls.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,681,"y_pred_list = cls.predict(X, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,697,"reg.fit(None, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,698,"assert reg.score(None, y_test) == 1.0"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,706,"reg1.fit(X1, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,707,predictions1 = reg1.predict(X1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,711,"reg2.fit(X2, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,712,predictions2 = reg2.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,724,"probas = model.fit(X, y).predict_proba(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_dummy.py,737,"d.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,78,"y_pred = clf.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,82,"y_pred1 = clf.fit(X1, y).predict(X1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,98,"y_pred3 = clf.fit(X, y3).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,105,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,109,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,113,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,117,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,130,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,135,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,142,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,151,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,179,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,257,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,262,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,270,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,288,"clf_lda_svd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,289,"clf_lda_lsqr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,290,"clf_lda_eigen.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,300,"X_transformed = clf.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,303,"X_transformed = clf.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,307,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,311,clf.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,325,"clf_lda_eigen.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,332,"clf_lda_svd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,366,"clf = LinearDiscriminantAnalysis(solver=""svd"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,367,means_transformed = clf.transform(means)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,375,"assert_almost_equal(np.cov(clf.transform(scatter).T), np.eye(2))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,398,"assert clf.fit(x, y).score(x, y) == 1.0, ""using covariance: %s"" % solver"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,405,"clf = LinearDiscriminantAnalysis(solver=solver).fit(X6, y6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,409,"clf = LinearDiscriminantAnalysis(solver=solver, store_covariance=True).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,419,"clf = LinearDiscriminantAnalysis(solver=""svd"").fit(X6, y6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,423,"clf = LinearDiscriminantAnalysis(solver=solver, store_covariance=True).fit(X6, y6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,444,"c1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,445,"c2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,457,X_sc = sc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,474,"c1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,475,"c2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,495,"lda.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,505,"lda.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,520,"clf.fit(X.astype(data_type), y.astype(data_type))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,527,"clf_32.fit(X.astype(np.float32), y.astype(np.float32))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,529,"clf_64.fit(X.astype(np.float64), y.astype(np.float64))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,541,"y_pred = clf.fit(X6, y6).predict(X6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,545,"y_pred1 = clf.fit(X7, y6).predict(X7)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,554,"y_pred3 = clf.fit(X6, y7).predict(X6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,560,"clf.fit(X6, y4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,565,"y_pred = clf.fit(X6, y6).predict(X6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,570,"y_pred = clf.fit(X6, y6).predict(X6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,578,"clf = QuadraticDiscriminantAnalysis().fit(X6, y6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,582,"clf = QuadraticDiscriminantAnalysis(store_covariance=True).fit(X6, y6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,601,"y_pred = clf.fit(X2, y6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,609,y_pred = clf.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,616,"clf.fit(X2, y6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,617,y_pred = clf.predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,624,"clf.fit(X5, y5)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,625,y_pred5 = clf.predict(X5)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_discriminant_analysis.py,652,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,55,ovr.predict([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,62,"OneVsRestClassifier(MultinomialNB()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,67,"OneVsRestClassifier(MultinomialNB()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,81,"pred = ovr.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,85,"pred2 = clf.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,90,"pred = ovr.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,100,pred = ovr.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,102,"pred2 = ovr2.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,118,pred = ovr.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,122,"pred1 = ovr1.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,147,"pred = ovr.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,154,"pred = ovr.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,184,"clf = OneVsRestClassifier(base_clf).fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,185,Y_pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,187,"clf_sprs = OneVsRestClassifier(base_clf).fit(X_train, sparse(Y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,188,Y_pred_sprs = clf_sprs.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,204,"clf_sprs = OneVsRestClassifier(clf).fit(X_train, sparse(Y_train))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,206,"assert_array_equal(dec_pred, clf_sprs.predict(X_test).toarray())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,225,"ovr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,226,y_pred = ovr.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,240,"ovr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,260,"clf = OneVsRestClassifier(base_clf).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,262,"y_pred = clf.predict(np.array([[0, 0, 4]]))[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,266,"clf = OneVsRestClassifier(base_clf).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,267,"y_pred = clf.predict([[0, 0, 4]])[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,280,"clf = OneVsRestClassifier(base_clf).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,282,"y_pred = clf.predict(np.array([[0, 0, 4]]))[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,292,"assert clf.classes_[np.argmax(probabilities, axis=1)] == clf.predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,295,"clf = OneVsRestClassifier(base_clf).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,296,"y_pred = clf.predict([[3, 0, 0]])[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,324,"clf = OneVsRestClassifier(base_clf).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,325,"y_pred = clf.predict([[0, 4, 4]])[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,332,"ovr.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,334,"assert ovr.score(iris.data, iris.target) > 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,351,"clf = OneVsRestClassifier(base_clf).fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,352,Y_pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,377,"clf = OneVsRestClassifier(base_clf).fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,380,"decision_only = OneVsRestClassifier(svm.SVR()).fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,386,"decision_only.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,396,"proba_after_fit.fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,399,Y_pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,413,"clf = OneVsRestClassifier(base_clf).fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,416,"decision_only = OneVsRestClassifier(svm.SVR()).fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,419,Y_pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,441,"clf = OneVsRestClassifier(svm.SVC()).fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,443,"(clf.decision_function(X_test) > 0).astype(int), clf.predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,451,"clf = OneVsRestClassifier(svm.SVC()).fit(X_train, Y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,452,"assert_array_equal(clf.decision_function(X_test).ravel() > 0, clf.predict(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,459,"cv.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,470,"ovr_pipe.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,472,"ovr.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,473,"assert_array_equal(ovr.predict(iris.data), ovr_pipe.predict(iris.data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,489,"ovr.fit(X, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,509,"ovr.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,519,"ovr = ovr.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,536,ovo.predict([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,543,"prediction_from_array = ovo.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,545,"prediction_from_list = ovo.fit(iris_data_list, list(iris.target)).predict("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,554,"ovo.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,559,"ovo.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,569,pred1 = ovo1.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,572,"ovo2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,573,pred2 = ovo2.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,582,pred1 = ovo1.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,584,"pred2 = ovo2.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,595,pred = ovo.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,597,"pred2 = ovo2.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,621,"ovo_clf.fit(iris.data, iris.target == 0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,626,"ovo_clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,630,"assert_array_equal(decisions.argmax(axis=1), ovo_clf.predict(iris.data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,638,pred = ovo_clf.estimators_[k].predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,667,"cv.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,678,"ovo_prediction = multi_clf.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,705,"ovo_prediction = multi_clf.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,715,"ovo.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,716,"assert_array_equal(y, ovo.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,727,"ovo.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,738,"ovo.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,744,ecoc.predict([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,750,"ecoc.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,755,"ecoc.fit(iris.data, iris.target).predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,763,"cv.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,776,"ovo.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,781,"ovo.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,798,"ecoc.fit(X_sp, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,800,"ecoc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,802,ecoc.predict(X_sp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,806,"ecoc.fit(X_sp, y).predict(X_sp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,816,"ovr_false.fit(linear_kernel, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,848,"clf_notprecomputed = svm.SVC(kernel=""linear"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,851,"ovr_notprecomputed = OneVsRestClassifier(clf_notprecomputed).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,856,"ovo_notprecomputed = OneVsOneClassifier(clf_notprecomputed).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,868,"clf_precomputed = svm.SVC(kernel=""precomputed"").fit(K, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,871,"ovr_precomputed = OneVsRestClassifier(clf_precomputed).fit(K, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,887,"ovo_precomputed = OneVsOneClassifier(clf_precomputed).fit(K, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_multiclass.py,973,"MultiClassClassifier(lr).fit(X, y).score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,22,"pred = Ridge(alpha=1, fit_intercept=False).fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,23,"pred2 = KernelRidge(kernel=""linear"", alpha=1).fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,30,".fit(Xcsr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,31,.predict(Xcsr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,33,"pred2 = KernelRidge(kernel=""linear"", alpha=1).fit(Xcsr, y).predict(Xcsr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,40,".fit(Xcsc, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,41,.predict(Xcsc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,43,"pred2 = KernelRidge(kernel=""linear"", alpha=1).fit(Xcsc, y).predict(Xcsc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,50,"pred = Ridge(alpha=0, fit_intercept=False).fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,53,pred2 = kr.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,60,"pred = KernelRidge(kernel=kernel).fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,61,"pred2 = KernelRidge(kernel=""precomputed"").fit(K, y).predict(K)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,68,"KernelRidge(kernel=""precomputed"").fit(K, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,76,"pred = Ridge(alpha=1, fit_intercept=False).fit(X, y, sample_weight=sw).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,77,"pred2 = KernelRidge(kernel=""linear"", alpha=1).fit(X, y, sample_weight=sw).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,80,".fit(K, y, sample_weight=sw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,81,.predict(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,88,"pred = Ridge(alpha=1, fit_intercept=False).fit(X, Y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,89,"pred2 = KernelRidge(kernel=""linear"", alpha=1).fit(X, Y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_ridge.py,92,"pred3 = KernelRidge(kernel=""linear"", alpha=1).fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,65,"clf = MultinomialNB().fit(X_train, y_train, sample_weight=sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,70,"cal_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,80,"cal_clf.fit(this_X_train, y_train, sample_weight=sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,89,"cal_clf.fit(this_X_train, y_train + 1, sample_weight=sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,94,"cal_clf.fit(this_X_train, 2 * y_train - 1, sample_weight=sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,99,"cal_clf.fit(this_X_train, (y_train + 1) % 2, sample_weight=sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,118,"clf_invalid_method.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,130,"clf_base_regressor.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,137,"calib_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,154,"calib_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,173,"calibrated_clf.fit(X_train, y_train, sample_weight=sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,178,"calibrated_clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,197,"cal_clf_parallel.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,203,"cal_clf_sequential.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,234,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,237,"cal_clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,245,"assert 0.65 < clf.score(X_test, y_test) < 0.95"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,249,"assert cal_clf.score(X_test, y_test) > 0.95 * clf.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,264,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,269,"cal_clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,288,"clf = DummyClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,322,"unfit_clf.fit(X_calib, y_calib)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,324,"clf.fit(X_train, y_train, sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,336,"cal_clf.fit(this_X_calib, y_calib, sample_weight=sw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,338,y_pred = cal_clf.predict(this_X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,355,"cal_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,364,"calibrator.fit(unbiased_preds, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,366,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,368,manual_probas = calibrator.predict(clf_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,380,"sk_prob = _SigmoidCalibration().fit(exF, exY).predict(exF)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,386,"_SigmoidCalibration().fit(np.vstack((exF, exF)), exY)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,437,"clf_c.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,438,clf_c.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,451,"clf_prob.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,469,"cal_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,509,"calibrated_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,529,"return pipeline_prefit.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,544,"calib_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,554,calib_clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,569,"clf = clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,571,"calib_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,577,classes = LabelEncoder().fit(y).classes_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,586,"clf = LinearSVC(C=1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,591,"calib_clf.fit(X[:, :3], y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,599,"calib_clf = CalibratedClassifierCV(cv=2).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,619,"vote.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,623,"calib_clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,641,"reg = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,646,"clf = LinearSVC().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,660,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,681,"lr = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,715,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,759,"clf = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,779,"lr = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,780,"dt = DecisionTreeClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,796,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,819,"calibrated_clf_with_weights.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,820,"calibrated_clf_without_weights.fit(X_twice, y_twice)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,846,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,863,"calibrated_clf_with_weights.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_calibration.py,864,"calibrated_clf_without_weights.fit(X[::2], y[::2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,46,"y_pred = clf.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,65,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,73,"clf = GaussianNB().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,75,"clf = GaussianNB().fit(X1, y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,84,"clf = GaussianNB().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,85,"clf_sw = GaussianNB().fit(X, y, sw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,93,"clf1 = GaussianNB().fit(X, y, sample_weight=sw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,105,"clf_dupl = GaussianNB().fit(X[ind], y[ind])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,106,"clf_sw = GaussianNB().fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,118,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,123,"clf = GaussianNB(priors=np.array([0.3, 0.7])).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,152,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,162,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,171,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,177,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,178,"assert clf.predict([[-0.1, -0.1]]) == np.array([2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,194,"clf = GaussianNB().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,211,"labels = [GaussianNB().fit(f * X, y).predict(f * X) for f in [1e-10, 1, 1e10]]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,219,"est = DiscreteNaiveBayes().fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,229,"clf = DiscreteNaiveBayes().fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,238,"clf1.fit([[0, 1], [1, 0], [1, 1]], [0, 1, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,317,"clf = DiscreteNaiveBayes().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,318,assert clf.predict(X[-1:]) == 2
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,329,"clf = DiscreteNaiveBayes().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,345,"clf.fit([[0], [0], [1]], [0, 0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,355,"clf.fit([[0], [0], [1]], [0, 0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,362,"clf.fit([[0], [1], [2]], [0, 1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,381,"clf_full.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,402,"clf = DiscreteNaiveBayes().fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,403,"assert_array_equal(clf.predict(X), [0, 1, 1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,410,"assert_array_equal(clf.predict(X), [0, 1, 1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,425,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,459,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,460,assert clf.predict(X[:1]) == y[0]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,499,"clf.fit(-X, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,500,"y_pred = clf.fit(X, y2).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,516,y_pred2 = clf2.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,529,y_pred3 = clf3.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,551,"assert clf.predict([[0, 1]]) == 0"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,552,"assert clf.predict([[1, 0]]) == 1"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,553,"assert clf.predict([[1, 1]]) == 0"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,560,"assert clf.predict([[0, 1]]) == 0"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,561,"assert clf.predict([[1, 0]]) == 1"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,562,"assert clf.predict([[1, 1]]) == 2"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,569,"clf.fit([[1, 2], [1, 2], [1, 0]], [0, 0, 1], sample_weight=[1, 1, 4])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,570,"assert_array_equal(clf.predict([[1, 0]]), [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,597,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,634,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,698,"clf.fit(-X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,700,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,712,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,719,"y_pred = clf.fit(X2, y2).predict(X2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,726,"clf.fit(X3, y3)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,734,clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,736,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,755,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,756,"assert_array_equal(clf.predict(np.array([[0, 0]])), np.array([1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,764,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,765,"assert_array_equal(clf.predict(np.array([[0, 0]])), np.array([2]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,808,"clf.fit(X_n_categories, y_n_categories)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,812,predictions = clf.predict(new_X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,832,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,844,"nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,852,"nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,858,"nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,866,"nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,872,"nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,886,"b_nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,888,"m_nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,890,"c_nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,923,"m_nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,939,"m_nb.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_naive_bayes.py,982,"est = Estimator().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,315,"tree.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,318,"score_unweighted = tree.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,319,"score_weighted = tree.score(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,364,"tree = DecisionTreeClassifier().fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,370,"score_of_original = tree.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,371,"score_of_restored = tree_restored.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,391,"tree = TreeBadVersion().fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,410,"tree = TreeNoVersion().fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,426,"tree = TreeNoVersion().fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,638,trans = NoOpTransformer().fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,642,trans.fit(X_np)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,645,trans.fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,649,trans.transform(df_bad)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,657,trans.transform(X_np)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,661,trans = NoOpTransformer().fit(X_np)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,663,trans.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,669,trans.fit(df_int_names)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,677,trans.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,689,trans.fit(df_mixed)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_base.py,693,trans.transform(df_mixed)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,129,"self.fit(X, y, should_succeed=should_succeed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,130,return self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,250,"pipe.fit(X, y=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,251,pipe.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,254,"pipe.fit(X, y=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,255,pipe.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,266,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,267,pipe.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,270,"pipe.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,276,"pipe.fit(X=None, y=None, clf__should_succeed=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,278,assert pipe.predict(None)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,286,"pipe.fit(None, None, clf__bad=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,293,"pipe.fit(X, y=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,294,assert pipe.score(X) == 3
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,295,"assert pipe.score(X, y=None) == 3"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,296,"assert pipe.score(X, y=None, sample_weight=None) == 3"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,297,"assert pipe.score(X, sample_weight=np.array([2, 3])) == 8"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,304,"pipe.fit(X, y=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,305,assert pipe.score(X) == 3
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,306,"assert pipe.score(X, sample_weight=None) == 3"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,310,"pipe.score(X, sample_weight=np.array([2, 3]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,340,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,341,pipe.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,344,"pipe.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,355,pipe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,359,lof.fit(pca.fit_transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,360,"assert_allclose(pipe.score_samples(X), lof.score_samples(pca.transform(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,369,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,389,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,392,predict = pipe.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,404,"pipe.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,419,scaled = scaler.fit_transform(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,420,separate_pred = km.fit_predict(scaled)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,424,pipeline_pred = pipe.fit_predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,445,pipe.fit_predict(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,460,"pipe.fit(None, None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,475,"fs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,476,X_transformed = fs.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,480,"assert_array_almost_equal(X_transformed[:, :-1], svd.fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,481,"assert_array_equal(X_transformed[:, -1], select.fit_transform(X, y).ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,487,"X_sp_transformed = fs.fit_transform(X_sp, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,497,"assert fs.fit_transform(X, y).shape == (X.shape[0], 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,501,"X_transformed = fs.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,511,"fs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,546,X_trans = pipeline.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,547,X_trans2 = pipeline.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,548,X_trans3 = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,565,"X_trans = pipeline.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,566,"X_trans2 = transf.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,645,"pipeline.fit([[1]], [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,648,"pipeline.fit_transform([[1]], [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,680,"pipeline.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,700,"assert_array_equal([[exp]], pipeline.fit_transform(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,701,"assert_array_equal([exp], pipeline.fit(X).predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,706,"assert_array_equal([[exp]], pipeline.fit_transform(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,707,"assert_array_equal([exp], pipeline.fit(X).predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,722,"assert_array_equal([[exp]], pipeline.fit_transform(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,723,"assert_array_equal([exp], pipeline.fit(X).predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,739,"assert_array_equal([[exp]], pipeline.fit_transform(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,740,"assert_array_equal([exp], pipeline.fit(X).predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,747,"assert_array_equal([[exp]], pipeline.fit(X, y).transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,748,"assert_array_equal([[exp]], pipeline.fit_transform(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,758,"assert_array_equal([[exp]], pipeline.fit_transform(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,759,"assert_array_equal([exp], pipeline.fit(X).predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,816,"fs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,817,X_transformed = fs.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,822,"X_fit_transformed = fs.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,828,"X_fit_transformed_wo_method = fs.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,832,"assert_array_almost_equal(X_transformed[:, :-1], 10 * pca.fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,833,"assert_array_equal(X_transformed[:, -1], select.fit_transform(X, y).ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,834,"assert_array_almost_equal(X_fit_transformed[:, :-1], 10 * pca.fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,835,"assert_array_equal(X_fit_transformed[:, -1], select.fit_transform(X, y).ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,866,fs.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,867,X_transformed = fs.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,870,fs_parallel.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,871,X_transformed_parallel = fs_parallel.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,876,X_transformed_parallel2 = fs_parallel2.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,880,X_transformed_parallel2 = fs_parallel2.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,891,ft.fit(JUNK_FOOD_DOCS)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,897,"ft = FeatureUnion([(""tr1"", Transf())]).fit([[1]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,909,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,916,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,938,"assert_array_equal([[2, 3]], ft.transform(np.asarray([[1]])))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,943,"assert_array_equal([[5]], ft.transform(np.asarray([[1]])))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,948,"assert_array_equal([[3]], ft.transform(np.asarray([[1]])))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,953,"assert_array_equal([[5]], ft.transform(np.asarray([[1]])))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,974,"assert_array_equal([[2, 3]], ft.fit(X).transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,975,"assert_array_equal([[2, 3]], ft.fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,980,"assert_array_equal([[3]], ft.fit(X).transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,981,"assert_array_equal([[3]], ft.fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,987,"assert_array_equal([[]], ft.fit(X).transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,988,"assert_array_equal([[]], ft.fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,995,"assert_array_equal([[3]], ft.fit(X).transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1001,"assert_array_equal([[3]], ft.fit(X).transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1002,"assert_array_equal([[3]], ft.fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1030,"est.fit([[1]], [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1033,"est.fit_transform([[1]], [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1039,"est.fit([[1]], [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1042,"est.fit_transform([[1]], [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1065,"cached_pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1080,"pipe.fit(X, y=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1088,pipe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1108,"cached_pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1109,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1113,"assert_array_equal(pipe.predict(X), cached_pipe.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1116,"assert_array_equal(pipe.score(X, y), cached_pipe.score(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1123,"cached_pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1125,"assert_array_equal(pipe.predict(X), cached_pipe.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1128,"assert_array_equal(pipe.score(X, y), cached_pipe.score(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1140,"cached_pipe_2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1143,"assert_array_equal(pipe.predict(X), cached_pipe_2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1148,"assert_array_equal(pipe.score(X, y), cached_pipe_2.score(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1196,"pipe.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1206,"pipe.fit(JUNK_FOOD_DOCS, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1222,"pipe.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1234,"clf.fit([[0], [0]], [0, 1], sample_weight=[1, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1326,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1334,"ss.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1348,"fu.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1355,"ss.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1373,"t.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1376,"t.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1378,"t.fit(X, y, a=0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1379,"t.fit_transform(X, y, a=0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1389,"assert pipe.fit(X, y).score(X, y) > 0.4"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1407,"union.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1444,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1446,y_pred = model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1449,"assert model.score(X, y) == pytest.approx(accuracy_score(y, y_pred))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1452,"assert model.score(X, y) == pytest.approx(r2_score(y, y_pred))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1464,"pipeline.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_pipeline.py,1481,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,210,RandomProjection(density=density).fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,217,RandomProjection(n_components=n_components).fit(fit_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,223,"RandomProjection(n_components=""auto"").transform(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,237,rp.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,253,projected = rp.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,275,rp.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,276,"assert isinstance(rp.transform(data), np.ndarray)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,279,"assert isinstance(rp.transform(sparse_data), np.ndarray)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,283,rp = rp.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,285,"assert isinstance(rp.transform(data), np.ndarray)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,288,assert sp.issparse(rp.transform(sparse_data))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,293,"rp = RandomProjection(n_components=""auto"", random_state=0, eps=0.5).fit(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,306,projected_1 = rp.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,310,projected_2 = rp.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,315,projected_3 = rp2.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,320,"rp.transform(data[:, 1:5])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,326,projected = rp.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,339,RandomProjection(n_components=n_features + 1).fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,347,"rp_dense = RandomProjection(n_components=3, random_state=1).fit(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_random_projection.py,348,"rp_sparse = RandomProjection(n_components=3, random_state=1).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,31,"ps_transform.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,50,X_trans = ps_transform.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,51,Y_trans = ps_transform.transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,80,X_trans = transform.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,81,Y_trans = transform.transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,87,X_sp_trans = transform.fit_transform(csr_matrix(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,88,Y_sp_trans = transform.transform(csr_matrix(Y))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,98,transform.transform(Y_neg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,106,transform.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,117,transform.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,124,transform.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,152,X_trans = transform.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,153,Y_trans = transform.transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,165,transform.transform(Y_neg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,174,transformer.fit(X_neg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,176,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,177,transformer.transform(X_neg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,188,X_trans = rbf_transform.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,189,Y_trans = rbf_transform.transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,203,AdditiveChi2Sampler().fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,204,SkewedChi2Sampler().fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,205,RBFSampler().fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,208,RBFSampler().fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,217,X_transformed = Nystroem(n_components=X.shape[0]).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,222,X_transformed = trans.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,227,X_transformed = trans.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,234,X_transformed = trans.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,245,X_transformed = nystroem.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,252,X_transformed = nystroem.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,265,"N = Nystroem(gamma=gamma, n_components=X.shape[0]).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,266,X_transformed = N.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,283,X_transformed = nystroem.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,304,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,313,ny.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,324,X_transformed = nystroem.fit_transform(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,333,ny.fit(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/tests/test_kernel_approximation.py,347,feature_map_nystroem.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_quantile.py,90,">>> reg = QuantileRegressor(quantile=0.8).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_quantile.py,91,>>> np.mean(y <= reg.predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_base.py,113,"""model.fit(X, y, **kwargs)\n\n"""
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_base.py,604,">>> reg = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_base.py,605,">>> reg.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_base.py,611,">>> reg.predict(np.array([[3, 5]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_least_angle.py,965,">>> reg.fit([[-1, 1], [0, 0], [1, 1]], [-1.1111, 0, -1.1111])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_least_angle.py,1290,">>> reg.fit([[-1, 1], [0, 0], [1, 1]], [-1, 0, -1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_least_angle.py,1609,">>> reg = LarsCV(cv=5, normalize=False).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_least_angle.py,1610,">>> reg.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_least_angle.py,1614,">>> reg.predict(X[:1,])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_least_angle.py,1916,">>> reg = LassoLarsCV(cv=5, normalize=False).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_least_angle.py,1917,">>> reg.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_least_angle.py,1921,">>> reg.predict(X[:1,])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_least_angle.py,2094,">>> reg.fit([[-1, 1], [0, 0], [1, 1]], [-1.1111, 0, -1.1111])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_sag.py,219,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_sag.py,226,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_passive_aggressive.py,165,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_passive_aggressive.py,171,">>> print(clf.predict([[0, 0, 0, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_passive_aggressive.py,438,">>> regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_passive_aggressive.py,444,">>> print(regr.predict([[0, 0, 0, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,693,sample_weight *= class_weight_[le.fit_transform(y)]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,709,sample_weight *= class_weight_[le.fit_transform(y_bin)]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,714,Y_multi = lbin.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,720,"Y_multi = le.fit_transform(y).astype(X.dtype, copy=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,1113,"scores.append(log_reg.score(X_test, y_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,1386,">>> clf = LogisticRegression(random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,1387,">>> clf.predict(X[:2, :])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,1392,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,1962,">>> clf = LogisticRegressionCV(cv=5, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,1963,">>> clf.predict(X[:2, :])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,1967,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,2090,label_encoder = LabelEncoder().fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,2091,y = label_encoder.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,2094,"label_encoder.transform([cls])[0]: v for cls, v in class_weight.items()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,2099,encoded_labels = label_encoder.transform(label_encoder.classes_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py,2379,Score of self.predict(X) wrt. y.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_omp.py,686,">>> reg = OrthogonalMatchingPursuit(normalize=False).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_omp.py,687,">>> reg.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_omp.py,689,">>> reg.predict(X[:1,])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_omp.py,976,">>> reg = OrthogonalMatchingPursuitCV(cv=5, normalize=False).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_omp.py,977,">>> reg.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_omp.py,981,">>> reg.predict(X[:1,])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_omp.py,1060,"omp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_perceptron.py,161,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_perceptron.py,163,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_theil_sen.py,316,">>> reg = TheilSenRegressor(random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_theil_sen.py,317,">>> reg.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_theil_sen.py,319,">>> reg.predict(X[:1,])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,825,">>> regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,831,">>> print(regr.predict([[0, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,1237,">>> clf.fit([[0,0], [1, 1], [2, 2]], [0, 1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,1715,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,1717,"model.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,1901,">>> reg = LassoCV(cv=5, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,1902,">>> reg.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,1904,">>> reg.predict(X[:1,])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,2143,">>> regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,2149,">>> print(regr.predict([[0, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,2333,">>> clf.fit([[0,0], [1, 1], [2, 2]], [[0, 0], [1, 1], [2, 2]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,2583,">>> clf.fit([[0, 1], [1, 2], [2, 4]], [[0, 0], [1, 1], [2, 3]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,2790,">>> clf.fit([[0,0], [1, 1], [2, 2]],"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,2863,"return super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,3024,">>> reg = MultiTaskLassoCV(cv=5, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,3025,">>> r2_score(y, reg.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,3029,">>> reg.predict(X[:1,])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_coordinate_descent.py,3096,"return super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,952,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,1010,"return super().fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,1158,">>> clf = RidgeClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,1159,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,1220,Y = self._label_binarizer.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,1234,"super().fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,1967,"estimator.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,1990,"gs.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,2142,">>> clf = RidgeCV(alphas=[1e-3, 1e-2, 1e-1, 1]).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,2143,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,2273,">>> clf = RidgeClassifierCV(alphas=[1e-3, 1e-2, 1e-1, 1]).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,2274,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,2331,Y = self._label_binarizer.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py,2340,"_BaseRidgeCV.fit(self, X, target, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py,74,"return est.score(self.X_val, self.y_val, self.sample_weight_val)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py,1141,">>> clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py,1144,">>> print(clf.predict([[-0.8, -1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py,1883,">>> reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py,2080,>>> clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py,2083,">>> print(clf.predict([[4, 4]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_huber.py,231,">>> huber = HuberRegressor().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_huber.py,232,">>> huber.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_huber.py,234,">>> huber.predict(X[:1,])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_huber.py,236,">>> linear = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_bayes.py,171,">>> clf.fit([[0,0], [1, 1], [2, 2]], [0, 1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_bayes.py,173,">>> clf.predict([[1, 1]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_bayes.py,563,">>> clf.fit([[0,0], [1, 1], [2, 2]], [0, 1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_bayes.py,565,">>> clf.predict([[1, 1]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,235,">>> reg = RANSACRegressor(random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,236,">>> reg.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,238,">>> reg.predict(X[:1,])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,454,"base_estimator.fit(X_subset, y_subset)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,456,base_estimator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,468,y_pred = base_estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,486,"score_subset = base_estimator.score(X_inlier_subset, y_inlier_subset)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,549,"base_estimator.fit(X_inlier_best, y_inlier_best)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,551,base_estimator.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,564,This is a wrapper for `estimator_.predict(X)`.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,583,return self.estimator_.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,588,"This is a wrapper for `estimator_.score(X, y)`."
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_ransac.py,610,"return self.estimator_.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,407,D^2 of self.predict(X) w.r.t. y.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,413,y_pred = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,498,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,500,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,506,">>> clf.predict([[1, 1], [3, 4]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,620,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,622,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,628,">>> clf.predict([[1, 0], [2, 8]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,766,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,768,">>> clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/glm.py,774,">>> clf.predict([[1, 1], [3, 4]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,46,"glm.fit(X, y, sample_weight=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,51,"glm.fit(X, y, weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,57,"glm.fit(X, y, weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,73,"glm = GeneralizedLinearRegressor(family=name, alpha=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,78,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,88,"glm = GeneralizedLinearRegressor(family=""normal"", link=name).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,93,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,109,"glm = GeneralizedLinearRegressor(family=family, link=""auto"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,120,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,130,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,140,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,150,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,160,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,170,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,187,"glm.fit(X[:, 1:], y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,191,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,209,"glm = GeneralizedLinearRegressor(**glm_params).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,214,"glm.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,219,"glm.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,226,"glm.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,228,"glm.fit(X[:-1], y[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,238,glm1 = GeneralizedLinearRegressor(**glm_params).fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,242,"glm2 = GeneralizedLinearRegressor(**glm_params).fit(X2, y2, sample_weight=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,267,"res = glm.fit(X[:, 1:], y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,271,"res = glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,289,"glm1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,298,"glm2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,299,"assert glm1.score(X, y) > glm2.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,301,"glm2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,306,"assert_allclose(glm1.score(X, y), glm2.score(X, y), rtol=1e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,355,"ridge.fit(X_train, y_train, sample_weight=sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,365,"glm.fit(X_train, y_train, sample_weight=sw_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,369,"assert_allclose(glm.predict(X_train), ridge.predict(X_train), rtol=2e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,370,"assert_allclose(glm.predict(X_test), ridge.predict(X_test), rtol=2e-4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,396,"glm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/_glm/tests/test_glm.py,406,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,53,"predicted = clf.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,83,"LogisticRegression(C=-1).fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,86,"LogisticRegression(C=""test"").fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,90,"LogisticRegressionCV(scoring=""bad-scorer"", cv=2).fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,96,"LR(tol=-1).fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,99,"LR(tol=""test"").fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,104,"LR(max_iter=-1).fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,107,"LR(max_iter=""test"").fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,126,"lr.fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,136,"custom_score = lr.score(X, lr.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,144,"lr.fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,147,"lr.score(X, lr.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,163,"lr.fit(iris.data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,197,"clf.fit(iris.data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,200,pred = clf.predict(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,215,"lr.fit([[0, 1], [1, 0]], [0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,228,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,233,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,239,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,246,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,251,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,262,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,268,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,280,"clf.fit(iris.data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,284,"assert_array_equal(clf.predict(iris.data), target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,289,"mlr.fit(iris.data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,299,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,314,"clf = LogisticRegression(random_state=0).fit(iris.data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,346,"clf.fit(X, y_wrong)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,350,"clf.fit(X_, y_).predict(rng.random_sample((3, 12)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,356,"clf.fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,370,"logistic.fit(Xnan, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,405,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,432,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,475,"lr1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,484,"lr2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,493,"lr3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,590,"lr_cv.fit(X_ref, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,594,"lr.fit(X_ref, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,637,"lr.fit(X[train], y[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,658,"y_str = LabelEncoder().fit([""bar"", ""baz"", ""foo""]).inverse_transform(y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,667,"lr.fit(X_ref, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,668,"lr_cv.fit(X_ref, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,669,"lr_str.fit(X_ref, y_str)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,670,"lr_cv_str.fit(X_ref, y_str)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,679,"assert sorted(np.unique(lr_str.predict(X_ref))) == [""bar"", ""baz"", ""foo""]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,680,"assert sorted(np.unique(lr_cv_str.predict(X_ref))) == [""bar"", ""baz"", ""foo""]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,685,").fit(X_ref, y_str)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,686,"assert sorted(np.unique(lr_cv_str.predict(X_ref))) == [""bar"", ""baz""]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,695,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,697,"clfs.fit(csr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,751,"clf.fit(train, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,757,"clf1.fit(train, target_copy)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,785,"clf_multi.fit(train, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,786,"multi_score = clf_multi.score(train, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,787,"ovr_score = clf.score(train, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,809,"ncg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,810,"lbf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,811,"sag.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,812,"saga.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,813,"lib.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,837,"ncg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,838,"lbf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,839,"sag.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,840,"saga.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,841,"lib.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,909,"clf_lbf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,910,"clf_ncg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,911,"clf_lib.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,912,"clf_sag.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,913,"clf_saga.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,937,"clf_sw_none.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,938,"clf_sw_ones.fit(X, y, sample_weight=np.ones(y.shape[0]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,944,"clf_sw_lbfgs.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,946,"clf_sw_n.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,950,"clf_sw_sag.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,952,"clf_sw_liblinear.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,962,"clf_cw_12.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,964,"clf_sw_12.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,978,"clf_cw.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,987,"clf_sw.fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,999,"clf_cw.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1008,"clf_sw.fit(X, y, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1034,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1035,"clf2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1051,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1052,"clf2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1069,X = StandardScaler(with_mean=False).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1077,"ref_i.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1078,"ref_w.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1097,"clf_i.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1098,"clf_w.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1114,"clf_path.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1162,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1166,"assert_array_equal(clf.predict(X), np.zeros(5))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1174,"clf.fit(sparse.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1182,"clf.fit(sparse.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1199,"clf.fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1206,"clf.fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1228,"lr_liblinear.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1239,"lr_saga.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1269,"lr_liblinear.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1280,"lr_saga.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1297,"lr_saga_dense.fit(X.toarray(), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1321,"lr_cv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1323,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1335,"clf_multi.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1338,"clf_ovr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1383,"lr.fit(X, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1404,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1416,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1418,"clf.fit(X, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1429,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1440,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1442,"clf.fit(X, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1465,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1469,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1523,"saga.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1524,"liblinear.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1559,"lr_32.fit(X_32, y_32)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1564,"lr_32_sparse.fit(X_sparse_32, y_32)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1569,"lr_64.fit(X_64, y_64)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1574,"lr_64_sparse.fit(X_sparse_64, y_64)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1618,"lr_no_ws_loss = log_loss(y, lr_no_ws.fit(X, y).predict_proba(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1620,"lr_ws.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1637,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1660,"lr_enet.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1661,"lr_expected.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1685,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1687,"assert gs.score(X_test, y_test) >= l1_clf.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1688,"assert gs.score(X_test, y_test) >= l2_clf.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1721,"lr_enet.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1722,"lr_l2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1762,"lrcv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1769,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1801,"lrcv.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1808,"gs.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1811,assert (lrcv.predict(X_train) == gs.predict(X_train)).mean() >= 0.8
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1812,assert (lrcv.predict(X_test) == gs.predict(X_test)).mean() >= 0.8
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1845,"lrcv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1878,"lrcv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1898,"LogisticRegression(penalty=""elasticnet"", solver=""saga"", l1_ratio=l1_ratio).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1908,"LogisticRegression(penalty=""l1"", solver=""saga"", l1_ratio=l1_ratio).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1924,").fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1975,"sgd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,1976,"log.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2025,"return clone(est).set_params(**kw).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2073,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2079,"pred_none = lr_none.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2080,"pred_l2_C_inf = lr_l2_C_inf.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2086,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2133,"clf_no_weight = clone(base_clf).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2134,"clf_with_weight = clone(base_clf).fit(X2, y2, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2163,"lrcv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2217,"clf.fit(iris.data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2238,"clf.fit(X, y, sample_weight=W)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2256,"LogisticRegression(solver=solver).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_logistic.py,2258,"LogisticRegression(solver=solver).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,41,"return super().fit(X, y, *args, **kw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,59,"return linear_model.SGDRegressor.fit(self, X, y, *args, **kw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,74,"return linear_model.SGDOneClassSVM.fit(self, X, *args, **kw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,276,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,279,"clf2.fit(X, Y, coef_init=clf.coef_.copy(), intercept_init=clf.intercept_.copy())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,285,"clf3.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,291,"clf3.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,311,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,316,"clf.fit(X, Y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,327,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,330,"clf2.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,348,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,356,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,422,"clf1.fit(X, Y_encode)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,423,"clf2.fit(X, Y_encode)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,447,"clf = klass(early_stopping=early_stopping, tol=1e-3, max_iter=max_iter).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,458,"clf1.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,460,"clf2.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,483,"clf1.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,502,"clf2.fit(X[idx_train], Y[idx_train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,522,".fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,536,"clf.fit(X3, Y3)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,556,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,558,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,567,"klass().fit(X, Y, coef_init=np.zeros((3,)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,583,"sgd_estimator.fit(X, Y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,610,"klass().fit(X5, Y5, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,639,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,651,"clf = klass().fit(X5, Y5)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,652,"klass().fit(X5, Y5, intercept_init=clf.intercept_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,653,"clf = klass().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,654,"klass().fit(X, Y, intercept_init=clf.intercept_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,662,"clf.fit(X2, np.ones(9))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,685,"clf = klass(alpha=0.01, max_iter=20).fit(X2, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,689,pred = clf.predict(T2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,710,"clf.fit(X2, np_Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,725,"clf.fit(X2, Y2, coef_init=np.zeros((3, 2)), intercept_init=np.zeros(3))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,728,pred = clf.predict(T2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,735,"clf = klass(alpha=0.01, max_iter=20, n_jobs=2).fit(X2, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,739,pred = clf.predict(T2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,750,"clf.fit(X2, Y2, coef_init=np.zeros((2, 2)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,753,"clf = klass().fit(X2, Y2, coef_init=np.zeros((3, 2)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,758,"clf.fit(X2, Y2, intercept_init=np.zeros((1,)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,761,"clf = klass().fit(X2, Y2, intercept_init=np.zeros((3,)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,797,"clf = SGDClassifier(loss=""hinge"", alpha=0.01, max_iter=10, tol=None).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,805,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,817,"clf = klass(loss=""log"", alpha=0.01, max_iter=10).fit(X2, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,841,"clf.fit(X2, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,878,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,880,pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,886,pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,892,pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,903,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,904,"assert_array_equal(clf.predict([[0.2, -1.0]]), np.array([1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,908,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,912,"assert_array_equal(clf.predict([[0.2, -1.0]]), np.array([-1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,921,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,926,"clf_weighted.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,937,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,945,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,961,"clf1.fit(X4, Y4, sample_weight=sample_weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,962,"clf2.fit(X4, Y4, sample_weight=multiplied_together)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,979,"clf = klass(alpha=0.0001, max_iter=1000, class_weight=None, shuffle=False).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,980,"f1 = metrics.f1_score(y, clf.predict(X), average=""weighted"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,986,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,987,"f1 = metrics.f1_score(y, clf_balanced.predict(X), average=""weighted"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1003,"clf.fit(X_imbalanced, y_imbalanced)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1004,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1009,"clf.fit(X_imbalanced, y_imbalanced)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1010,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1021,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1022,"assert_array_equal(clf.predict([[0.2, -1.0]]), np.array([1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1025,"clf.fit(X, y, sample_weight=[0.001] * 3 + [1] * 2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1029,"assert_array_equal(clf.predict([[0.2, -1.0]]), np.array([-1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1043,"clf.fit(X, Y, sample_weight=np.arange(7))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1071,y_pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1114,"clf.fit(X2, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1123,"clf.fit(X_, Y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1147,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1148,assert 1.0 == np.mean(clf.predict(X) == Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1157,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1158,assert 1.0 == np.mean(clf.predict(X) == Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1161,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1162,assert 1.0 == np.mean(clf.predict(X) == Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1171,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1172,assert 1.0 == np.mean(clf.predict(X) == Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1184,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1188,"y = [[""ham"", ""spam""][i] for i in LabelEncoder().fit_transform(Y)]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1189,"clf.fit(X[:, :-1], y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1200,"clf.fit([[0, 0], [1, 1], [2, 2]], [0, 1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1230,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1308,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1309,"score = clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1316,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1317,"score = clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1338,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1339,"score = clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1352,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1353,"score = clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1368,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1369,"score = clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1376,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1377,"score = clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1399,"cd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1407,"sgd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1424,"assert clf.predict([[0, 0]]).shape == (1,)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1437,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1438,y_pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1444,y_pred2 = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1503,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1506,"clf2.fit(X, coef_init=clf.coef_.copy(), offset_init=clf.offset_.copy())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1510,clf3.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1516,clf3.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1534,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1537,clf2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1550,"assert clf.predict([[0, 0]]).shape == (1,)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1566,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1598,clf1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1599,clf2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1631,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1699,clf.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1709,pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1729,clf.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1730,y_pred_ocsvm = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1745,pipe_sgd.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1746,y_pred_sgdocsvm = pipe_sgd.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1768,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1771,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1782,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1785,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1803,X_scaled = MinMaxScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1814,"model.fit(X_scaled, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1824,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1842,"model.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1860,"model.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1866,X = StandardScaler().fit_transform(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1872,"model_0.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1878,"model_1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1884,"model_2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,1896,"model_3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,2069,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,2072,"assert clf.score(iris.data, iris.target) > 0.8"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,2086,"search.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,2119,"clf_sequential.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,2125,"clf_parallel.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,2139,"est1.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,2142,"est2.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sgd.py,2146,"assert_allclose(est1.predict(X), est2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_common.py,60,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,34,"lr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,36,"huber.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,44,"huber.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,77,"huber.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,87,"huber.fit(X, y, sample_weight=np.ones(y.shape[0]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,94,"huber.fit(X_new, y_new)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,100,"huber.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,108,"huber_sparse.fit(X_csr, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,115,"huber.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,119,"huber_sparse.fit(X_csr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,128,"huber.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,132,"huber.fit(X, 2.0 * y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,136,"huber.fit(2.0 * X, 2.0 * y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,149,"huber.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,152,"huber.fit(X_scale, y_scale)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,165,"sgdreg.fit(X_scale, y_scale)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,173,"huber_warm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,175,"huber_warm.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,188,"huber.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,191,"huber_score = huber.score(X[mask], y[mask])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,192,"huber_outlier_score = huber.score(X[~mask], y[~mask])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,198,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,199,"ridge_score = ridge.score(X[mask], y[mask])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,200,"ridge_outlier_score = ridge.score(X[~mask], y[~mask])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_huber.py,211,"HuberRegressor().fit(X_bool, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,32,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,40,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,91,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,103,"br_model = BayesianRidge(compute_score=True).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,104,"rr_model = Ridge(alpha=br_model.lambda_ / br_model.alpha_).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,117,"br_model = BayesianRidge(compute_score=True).fit(X, y, sample_weight=w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,118,rr_model = Ridge(alpha=br_model.lambda_ / br_model.alpha_).fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,130,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,134,"assert_array_almost_equal(clf.predict(test), [1, 3, 4], 2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,146,"r2 = reg.fit(X, y).score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,162,"y_pred = clf.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,179,"_, y_std = clf.fit(X, y).predict(X, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,189,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,194,"clf.predict(X, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,202,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,206,"assert_array_almost_equal(clf.predict(test), [1, 3, 4], 2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,218,"regressor.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,246,"m1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,247,"y_mean1, y_std1 = m1.predict(X_test, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,251,"m2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,252,"y_mean2, y_std2 = m2.predict(X_test, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,289,"clf.fit([[0, 0], [1, 1], [2, 2]], [0, 1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_bayes.py,290,"clf.predict([[1, 1]], return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,168,"lstq = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,171,"theil_sen = TheilSenRegressor(random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,179,"lstq = LinearRegression(fit_intercept=False).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,182,"theil_sen = TheilSenRegressor(fit_intercept=False, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,187,"theil_sen.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,193,"lstq = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,196,"theil_sen = TheilSenRegressor(max_subpopulation=1e3, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,211,"theil_sen.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,218,"theil_sen.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,225,"theil_sen.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,235,"theil_sen.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,240,"theil_sen = TheilSenRegressor(max_subpopulation=250, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,247,"theil_sen = TheilSenRegressor(n_subsamples=X.shape[0], random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,248,"lstq = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,257,"TheilSenRegressor(verbose=True, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,258,"TheilSenRegressor(verbose=True, max_subpopulation=10, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,264,"lstq = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,267,"theil_sen = TheilSenRegressor(n_jobs=2, random_state=0, max_subpopulation=2e3).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,280,"theil_sen = TheilSenRegressor(fit_intercept=False, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,281,"lstq = LinearRegression(fit_intercept=False).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,285,"theil_sen = TheilSenRegressor(fit_intercept=True, random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_theil_sen.py,286,y_pred = theil_sen.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,93,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,95,"assert ridge.score(X, y) > 0.47"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,99,"ridge.fit(X, y, sample_weight=np.ones(n_samples))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,100,"assert ridge.score(X, y) > 0.47"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,107,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,108,"assert ridge.score(X, y) > 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,112,"ridge.fit(X, y, sample_weight=np.ones(n_samples))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,113,"assert ridge.score(X, y) > 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,135,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,136,"assert ridge.score(X, y) > 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,195,"est.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,233,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,237,"ridge.fit(X, Y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,241,"ridge.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,256,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,259,"ridge.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,270,"reg.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,272,"assert_almost_equal(reg.predict(X_test), [1.0, 2, 3, 4])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,279,"reg.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,298,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,299,"ols.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,302,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,303,"ols.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,320,"Ridge(alpha=alpha, solver=""cholesky"").fit(X, target).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,326,"Ridge(alpha=penalties, solver=solver, tol=1e-12).fit(X, y).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,335,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,474,"svd_ridge = Ridge(solver=""svd"", normalize=normalize, alpha=alpha).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,483,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,533,"loo_ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,536,"gcv_ridge.fit(X_gcv, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,565,"loo_ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,566,"gcv_ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,615,"kfold.fit(X_tiled, y_tiled)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,633,"gcv_ridge.fit(X_gcv, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,650,"gcv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,685,"ridge_gcv.fit(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,708,"ridge_gcv4.fit(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,713,"ridge_gcv.fit(filter_(X_diabetes), y_diabetes, sample_weight=np.ones(n_samples))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,719,"ridge_gcv.fit(filter_(X_diabetes), Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,720,Y_pred = ridge_gcv.predict(filter_(X_diabetes))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,721,"ridge_gcv.fit(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,722,y_pred = ridge_gcv.predict(filter_(X_diabetes))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,732,"ridge_cv.fit(filter_(10.0 * X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,739,"gs.fit(filter_(10.0 * X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,745,"ridge_cv.fit(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,746,ridge_cv.predict(filter_(X_diabetes))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,753,"ridge_cv.fit(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,754,ridge_cv.predict(filter_(X_diabetes))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,770,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,783,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,807,"optimal_alphas = [RidgeCV(alphas=alphas).fit(X, target).alpha_ for target in y.T]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,810,"ridge_cv = RidgeCV(alphas=alphas, alpha_per_target=True).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,816,"Ridge(alpha=ridge_cv.alpha_).fit(X, y).coef_, ridge_cv.coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,820,"ridge_cv = RidgeCV(alphas=alphas, alpha_per_target=True, store_cv_values=True).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,828,"ridge_cv = RidgeCV(alphas=1, alpha_per_target=True, store_cv_values=True).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,834,"ridge_cv = RidgeCV(alphas=alphas, alpha_per_target=True, store_cv_values=True).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,842,"ridge_cv = RidgeCV(alphas=alphas, alpha_per_target=True, scoring=""r2"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,845,"Ridge(alpha=ridge_cv.alpha_).fit(X, y).coef_, ridge_cv.coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,853,"ridge_cv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,856,"ridge_cv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,861,"ridge.fit(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,862,"return np.round(ridge.score(filter_(X_diabetes), y_diabetes), 5)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,871,"ridge.fit(filter_(X_diabetes), Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,873,Y_pred = ridge.predict(filter_(X_diabetes))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,874,"ridge.fit(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,875,y_pred = ridge.predict(filter_(X_diabetes))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,883,"reg.fit(filter_(X_iris), y_iris)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,885,y_pred = reg.predict(filter_(X_iris))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,890,"reg.fit(filter_(X_iris), y_iris)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,891,y_pred = reg.predict(filter_(X_iris))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,905,"clf.fit(filter_(X_iris), y_iris).predict(filter_(X_iris))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,919,"clf.fit(filter_(X_iris), y_iris)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,927,"ridge.fit(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,928,"score = ridge.score(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,931,"ridge2.fit(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,932,"score2 = ridge2.score(filter_(X_diabetes), y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,970,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,979,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,980,"assert_array_equal(reg.predict([[0.2, -1.0]]), np.array([1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,984,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,988,"assert_array_equal(reg.predict([[0.2, -1.0]]), np.array([-1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,992,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,993,"assert_array_equal(reg.predict([[0.2, -1.0]]), np.array([1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1000,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1002,"rega.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1014,"reg1.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1016,"reg2.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1024,"reg1.fit(iris.data, iris.target, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1026,"reg2.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1031,"reg1.fit(iris.data, iris.target, sample_weight ** 2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1033,"reg2.fit(iris.data, iris.target, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1043,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1047,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1049,"assert_array_equal(reg.predict([[-0.2, 2]]), np.array([-1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1070,"r.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1076,"r.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1081,"r.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1101,"r.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1109,"r.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1126,"ridgecv.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1131,"gs.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1157,"ridge.fit(X, y, sample_weights_OK)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1158,"ridge.fit(X, y, sample_weights_OK_1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1159,"ridge.fit(X, y, sample_weights_OK_2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1162,"ridge.fit(X, y, sample_weights_not_OK)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1165,"ridge.fit(X, y, sample_weights_not_OK_2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1201,"sparse_ridge.fit(X_sparse, y, sample_weight=sample_weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1202,"dense_ridge.fit(X, y, sample_weight=sample_weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1213,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1223,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1228,"ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1254,"reg.fit(X_diabetes, y_diabetes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1268,"reg.fit(X, y_n)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1273,"reg.fit(X, y_n)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1299,"dense_ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1301,"sparse_ridge.fit(X_csr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1314,"sparse_ridge.fit(X_csr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1328,"dense_ridge.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1330,"sparse_ridge.fit(X_csr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1335,"Ridge(solver=""sag"").fit(X_csr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1402,"RidgeClassifier().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1424,"ridge_32.fit(X_32, y_32)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1431,"ridge_64.fit(X_64, y_64)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1437,assert ridge_32.predict(X_32).dtype == X_32.dtype
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1438,assert ridge_64.predict(X_64).dtype == X_64.dtype
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1456,"ridge_32.fit(X_32, y_32)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1461,"ridge_64.fit(X_64, y_64)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1467,assert ridge_32.predict(X_32).dtype == X_32.dtype
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1468,assert ridge_64.predict(X_64).dtype == X_64.dtype
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1515,"Ridge(solver=""sag"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1534,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1561,"results.append(model.fit(X, y).coef_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1577,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1604,"model = Ridge(alpha=alpha).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1605,"model_positive = Ridge(alpha=alpha, positive=True).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1654,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1699,"ridge_2sw = Ridge(**params).fit(X, y, sample_weight=2 * sw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ridge.py,1700,"ridge_dup = Ridge(**params).fit(X_dup, y_dup, sample_weight=sw_dup)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,86,"clf.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,87,"score = clf.score(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,105,"score = clf.score(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,116,"clf = PassiveAggressiveClassifier(max_iter=5).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,119,"clf.fit(X[:, :-1], iris.target_names[y])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,129,"clf1.fit(X, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,135,"clf2.fit(data, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,157,"clf.fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,158,"assert_array_equal(clf.predict([[0.2, -1.0]]), np.array([1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,164,"clf.fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,168,"assert_array_equal(clf.predict([[0.2, -1.0]]), np.array([-1]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,182,"clf.fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,186,"clf_balanced.fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,191,"clf_weighted.fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,205,"clf.fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,215,"clf.fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,219,"clf.fit(X2, y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,236,"reg.fit(data, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,237,pred = reg.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,257,pred = reg.predict(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,272,"reg1.fit(X, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,278,"reg2.fit(data, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_passive_aggressive.py,286,reg.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,51,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,149,"clf.fit(X1, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,244,"output_2 = clf.fit(X, y).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,266,"coef_lars_ = lars.fit(X, y).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,271,"coef_cd_ = coord_descent.fit(X, y).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,290,"lasso_cd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,296,"clf1 = linear_model.LassoLars(alpha=alpha, normalize=False).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,297,"clf2 = linear_model.Lasso(alpha=alpha, tol=1e-8).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,311,"lasso_cd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,331,"lasso_cd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,345,"lasso_cd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,354,"lasso.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,356,"lasso2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,411,"lars.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,416,"cd_coef_ = coord_descent.fit(X, y).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,429,"clf = linear_model.Lars(fit_intercept=False).fit(H, np.arange(n))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,436,"lars.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,458,"estimator.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,459,Y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,467,"estimator.fit(X, Y[:, k])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,468,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,487,"lars_cv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,504,"lars_cv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,527,"lars_bic.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,528,"lars_aic.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,539,"lars_broken.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,607,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,610,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,632,"lasso_cd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,648,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,651,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,662,"lasso_cd.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,759,"model_lasso_lars.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,799,"model_lasso_lars2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,825,"lasso_lars.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,841,"lasso_lars.fit(X, y, copy_X=copy_X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,860,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,861,"est_jitter.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,905,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,934,"model_64 = LARS(**args).fit(X_64, y_64)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_least_angle.py,935,"model_32 = LARS(**args).fit(X_64.astype(np.float32), y_64.astype(np.float32))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,45,"QuantileRegressor(**params).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,57,"QuantileRegressor(solver=solver).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,79,"model = QuantileRegressor(quantile=quantile, alpha=alpha).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,94,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,95,"quant = QuantileRegressor(alpha=alpha, fit_intercept=fit_intercept).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,100,"assert np.mean(y < quant.predict(X)) == approx(0.5, abs=1e-1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,111,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,112,"assert np.mean(y < quant.predict(X)) == approx(q, abs=1e-2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,124,"quant.fit(X, y, sample_weight=weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,125,fraction_below = np.mean(y < quant.predict(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,127,"weighted_fraction_below = np.average(y < quant.predict(X), weights=weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,158,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,161,"assert_allclose(np.mean(model.predict(X) > y), quantile)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,165,"model.set_params(alpha=alpha).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,184,"assert_allclose(np.mean(model.predict(X) > y), quantile, rtol=8e-3)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,206,"model1 = QuantileRegressor(quantile=quantile, **params).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,210,"model2 = QuantileRegressor(quantile=quantile, **params).fit(X, a * y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,215,"model2 = QuantileRegressor(quantile=1 - quantile, **params).fit(X, -a * y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,222,"model2.fit(X, y + X @ g_coef + g_intercept)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,229,"model2.fit(X @ A, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_quantile.py,244,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,39,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,67,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,85,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,99,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,108,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,121,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,135,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,150,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,152,"assert ransac_estimator.score(X[2:], y[2:]) == 1"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,153,"assert ransac_estimator.score(X[:2], y[:2]) < 1"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,166,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,168,"assert_array_equal(ransac_estimator.predict(X), np.zeros(100))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,185,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,202,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,219,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,236,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,265,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,278,"ransac_estimator.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,293,"ransac_estimator.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,308,"ransac_estimator.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,327,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,328,"ransac_none_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,331,"ransac_estimator.predict(X), ransac_none_estimator.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,366,"ransac_estimator1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,367,"ransac_estimator2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,368,"ransac_estimator5.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,369,"ransac_estimator6.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,372,"ransac_estimator1.predict(X), ransac_estimator2.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,375,"ransac_estimator1.predict(X), ransac_estimator5.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,378,"ransac_estimator1.predict(X), ransac_estimator6.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,382,"ransac_estimator3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,385,"ransac_estimator4.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,388,"ransac_estimator7.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,392,"ransac_estimator8.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,406,"ransac_estimator.fit(X, yyy)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,447,"ransac_estimator0.fit(X, yyy)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,448,"ransac_estimator1.fit(X, yyy)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,449,"ransac_estimator2.fit(X, yyy)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,451,"ransac_estimator0.predict(X), ransac_estimator1.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,454,"ransac_estimator0.predict(X), ransac_estimator2.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,458,"ransac_estimator0.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,460,"ransac_estimator2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,462,"ransac_estimator0.predict(X), ransac_estimator2.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,471,"ransac_estimator3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,473,"ransac_estimator0.predict(X), ransac_estimator2.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,482,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,528,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,534,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,541,"ransac_estimator.fit(X, y, weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,572,"ransac_estimator.fit(X_flat, y_flat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,578,"ransac_estimator.fit(X_, y_, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,589,"ransac_estimator.fit(X, y, weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,598,"ransac.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,602,final_model.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,619,"ransac_estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,637,"est1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,640,"est2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_ransac.py,641,"assert_allclose(est1.predict(X), est2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,103,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,119,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,163,"clf = Lasso(alpha=0.1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,164,"pred = clf.predict([[1], [2], [3]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,180,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,181,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,187,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,188,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,194,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,195,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,201,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,202,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,220,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,221,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,227,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,228,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,234,"clf.fit(X, Y)  # with Gram"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,235,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,241,"clf.fit(X, Y)  # with Gram"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,242,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,248,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,249,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,263,"clf = Lasso(alpha=alpha, fit_intercept=False).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,294,"clf = LassoCV(n_alphas=10, eps=1e-3, max_iter=max_iter, cv=3).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,298,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,303,"lars = LassoLarsCV(normalize=False, max_iter=30, cv=3).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,320,"assert clf.score(X_test, y_test) > 0.99"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,332,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,341,"clf_unconstrained.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,348,"clf_constrained.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,440,"model_normalize.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,441,y_pred_normalize = model_normalize.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,443,"pipeline.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,444,y_pred_standardize = pipeline.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,511,"reg_with_normalize.fit(X_train, y_train, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,533,"reg_with_scaler.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,537,y_pred_normalize = reg_with_normalize.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,538,y_pred_scaler = reg_with_scaler.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,595,"model_dense.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,596,"model_sparse.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,599,y_pred_dense = model_dense.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,600,y_pred_sparse = model_sparse.predict(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,671,"assert clf.score(X_test, y_test) > 0.99"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,681,"assert clf.score(X_test, y_test) > 0.99"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,688,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,690,"clf2.fit(X, y[:, np.newaxis])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,700,"clf.fit(X, y)  # new params"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,728,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,736,"lasso.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,740,"lasso.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,749,"enet.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,761,"enetcv_unconstrained.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,768,"enetcv_constrained.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,792,"assert_array_equal(model.fit(X_train, y1).predict(X_test), y1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,799,"assert_array_equal(model.fit(X_train, y2).predict(X_test), y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,807,"clf = MultiTaskLasso(alpha=1, tol=1e-8).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,811,"clf = MultiTaskElasticNet(alpha=1, tol=1e-8).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,821,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,830,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,831,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,842,"clf = MultiTaskLasso(alpha=1, tol=1e-8).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,853,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,861,"estimator.fit(X, y[:, k])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,873,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,878,"clf = MultiTaskElasticNetCV(cv=3).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,880,"clf = MultiTaskLassoCV(cv=3).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,887,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,896,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,907,"clf.fit(X, y[:, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,909,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,920,"clf.fit(X, y[:, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,922,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,931,"clf.fit(sparse.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,933,"clf1.fit(sparse.csr_matrix(X, dtype=np.float32), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,938,"clf.fit(sparse.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,940,"clf1.fit(sparse.csr_matrix(X, dtype=np.float32), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,950,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,955,"ElasticNet(precompute=""auto"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,959,"Lasso(precompute=""auto"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,976,"clf.fit(X_centered, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,993,"clf1.fit(X_c, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,996,"clf2.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1003,"model = ElasticNet(alpha=1e-3, tol=1e-3).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1011,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1018,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1028,"low_reg_model = ElasticNet(alpha=final_alpha).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1033,"high_reg_model = ElasticNet(alpha=final_alpha * 10).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1042,"warm_low_reg_model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1054,"clf_cyclic.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1056,"clf_random.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1062,"clf_cyclic.fit(X.T, y[:20])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1064,"clf_random.fit(X.T, y[:20])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1070,"clf_cyclic.fit(sparse.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1072,"clf_random.fit(sparse.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1079,"clf_cyclic.fit(X, new_y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1081,"clf_random.fit(X, new_y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1088,"clf_random.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1135,"clf.fit(X, y, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1140,"clf.fit(X, y, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1145,"clf.fit(X, y, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1155,"enet.fit(X, y, check_input=check_input)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1166,"enet.fit(X, y, check_input=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1182,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1192,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1194,"clf_float.fit(X, y_float)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1249,"clf_multioutput.fit(X, multi_y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1275,"ElasticNetCV(l1_ratio=0, random_state=42).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1278,"MultiTaskElasticNetCV(l1_ratio=0, random_state=42).fit(X, y[:, None])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1286,"est_desired.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1287,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1293,"est.fit(X, y[:, None])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1294,"est_desired.fit(X, y[:, None])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1300,"est_no_intercept.fit(np.c_[np.ones(3)], np.ones(3))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1339,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1349,"MultiTaskElasticNet(max_iter=1, tol=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1353,"MultiTaskElasticNet().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1362,"ElasticNet(max_iter=1, tol=0).fit(sparse.csr_matrix(X, dtype=np.float32), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1366,"Lasso().fit(sparse.csr_matrix(X, dtype=np.float32), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1385,"super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1392,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1402,"est = MultiTaskLassoCV(n_alphas=5, fit_intercept=True).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1425,"reg = ElasticNet(**params).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1432,"reg.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1439,"reg.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1446,"reg.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1455,"reg.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1459,"reg.fit(X[:-1], y[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1471,"reg1 = ElasticNet(**params).fit(X, y, sample_weight=sample_weight_1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1473,"reg2 = ElasticNet(**params).fit(X2, y2, sample_weight=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1486,"reg.fit(X, y, sample_weight=sw, check_input=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1517,"reg_sw.fit(X, y, sample_weight=sw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1527,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1557,"reg.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1565,").fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1591,"reg = LassoCV(**params).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1593,"reg = ElasticNetCV(**params).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1600,"reg.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1607,"reg.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1614,"reg.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1629,"reg.fit(X, y, sample_weight=sw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1649,"estimator(n_jobs=2, cv=3).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1666,"reg.fit(X, y, sample_weight=sample_weight, check_input=check_input)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1699,"ridge = Ridge(alpha=alpha, **common_params).fit(X, y, sample_weight=sw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1704,"enet = ElasticNet(alpha=alpha_enet, l1_ratio=0, **common_params).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1743,".fit(X_trimmed, y_trimmed, sample_weight=sw_trimmed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1746,"clone(estimator).set_params(**params).fit(X, y, sample_weight=sw_with_null)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1757,"reg_2sw = clone(estimator).set_params(**params).fit(X, y, sample_weight=2 * sw)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_coordinate_descent.py,1759,"clone(estimator).set_params(**params).fit(X_dup, y_dup, sample_weight=sw_dup)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,36,"clf_dense.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,38,"clf_sparse.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,48,"clf = Lasso().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,49,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,68,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,74,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,75,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,81,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,82,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,107,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,113,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,114,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,120,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,121,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,176,"s_clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,179,"assert s_clf.score(X_test, y_test) > 0.85"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,191,"d_clf.fit(X_train.toarray(), y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,194,"assert d_clf.score(X_test, y_test) > 0.85"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,220,"s_clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,222,"assert s_clf.score(X_test, y_test) > 0.85"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,226,"d_clf.fit(X_train.toarray(), y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,228,"assert d_clf.score(X_test, y_test) > 0.85"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,240,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,248,"estimator.fit(X, y[:, k])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,313,predict_dense = l.predict(sample)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,319,predict_sparse = l_sp.predict(sample_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sparse_coordinate_descent.py,336,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,32,if self.predict(X[i])[0] != y[i]:
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,47,"clf.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,48,"score = clf.score(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,57,"clf1.fit(X, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,60,"clf2.fit(X, y_bin)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,75,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,78,"clf2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,80,"assert clf1.score(X, y) != clf2.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,84,"clf_l1 = Perceptron(penalty=""l1"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,85,"clf_elasticnet = Perceptron(l1_ratio=1, penalty=""elasticnet"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,88,"clf_l2 = Perceptron(penalty=""l2"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_perceptron.py,89,"clf_elasticnet = Perceptron(l1_ratio=0, penalty=""elasticnet"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,275,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,329,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,383,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,384,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,385,"clf3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,427,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,428,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,429,"clf3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,465,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,466,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,573,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,574,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,575,"score1 = clf1.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,576,"score2 = clf2.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,585,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,586,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,587,"score1 = clf1.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,588,"score2 = clf2.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,619,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,620,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,672,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,673,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,742,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,743,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,744,pred1 = clf1.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,745,pred2 = clf2.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,778,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,779,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,783,sample_weight = class_weight_[le.fit_transform(y)]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,837,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,838,"clf2.fit(sp.csr_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,842,sample_weight = class_weight_[le.fit_transform(y)]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,896,"LogisticRegression(solver=""sag"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,911,"clf1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,915,"clf2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,937,Y_bin = lbin.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,956,Y_bin = lbin.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,998,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_sag.py,1006,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,41,"reg.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,45,"assert_array_almost_equal(reg.predict(X), [1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,52,"reg.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,55,"assert_array_almost_equal(reg.predict(X), [0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,74,"reg.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,79,"assert reg.score(X, y) > 0.5"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,108,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,127,"reg.fit(X, y, sample_weights_OK)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,128,"reg.fit(X, y, sample_weights_OK_1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,129,"reg.fit(X, y, sample_weights_OK_2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,140,"lr2_without_intercept = LinearRegression(fit_intercept=False).fit(X2, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,141,"lr2_with_intercept = LinearRegression().fit(X2, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,143,"lr3_without_intercept = LinearRegression(fit_intercept=False).fit(X3, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,144,"lr3_with_intercept = LinearRegression().fit(X3, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,210,"ols.fit(X, y.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,213,"assert_array_almost_equal(ols.predict(X) - y.ravel(), 0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,232,"clf_dense.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,233,"clf_sparse.fit(Xcsr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,246,"reg.fit((X), Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,248,Y_pred = reg.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,249,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,250,y_pred = reg.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,263,"ols.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,265,Y_pred = ols.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,266,"ols.fit(X, y.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,267,y_pred = ols.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,277,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,281,"assert_array_almost_equal(reg.predict(X), [1, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,288,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,291,"assert_allclose(reg.predict(X), [0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,302,"ols.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,305,Y_pred = ols.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,306,"ols.fit(X, y.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,307,y_pred = ols.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,316,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,318,"regn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,332,"reg.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,334,"regn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,359,"reg.fit(df.iloc[:, 0:2], df.iloc[:, 3])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,366,"reg.fit(df.iloc[:, 0:2], df.iloc[:, 3])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,518,"scaler = StandardScaler(with_mean=False).fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,522,"scaler.transform(X).toarray()[:, :2] / np.sqrt(sample_weight.sum()),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,528,"scaler.transform(X).toarray()[:, 2:], Xt.toarray()[:, 2:]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,531,"scaler = StandardScaler(with_mean=True).fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_base.py,534,"scaler.transform(X) / np.sqrt(sample_weight.sum()),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,56,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,156,"omp.fit(X, y[:, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,161,"omp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,168,"omp.fit(X, y[:, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,172,"omp.fit(X, y[:, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,177,"omp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,248,"ompcv.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,254,"omp.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,269,"omp.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/linear_model/tests/test_omp.py,270,"lstsq.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_base.py,99,return self.indicator_.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_base.py,216,">>> imp_mean.fit([[7, 2, 3], [4, np.nan, 6], [10, 5, 9]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_base.py,219,>>> print(imp_mean.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_base.py,674,>>> indicator.fit(X1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_base.py,676,>>> X2_tr = indicator.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_knn.py,110,>>> imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_iterative.py,214,">>> imp_mean.fit([[7, 2, 3], [4, np.nan, 6], [10, 5, 9]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_iterative.py,217,>>> imp_mean.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_iterative.py,317,"estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_iterative.py,326,"mus, sigmas = estimator.predict(X_test, return_std=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_iterative.py,349,imputed_values = estimator.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_iterative.py,529,X_filled = self.initial_imputer_.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_iterative.py,531,X_filled = self.initial_imputer_.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/_iterative.py,775,self.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_common.py,30,imputer.fit(train).transform(test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_common.py,56,X_trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_common.py,61,X_trans_no_indicator = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_common.py,88,X_trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_common.py,93,X_trans_no_indicator = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_common.py,116,X_trans_expected = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_common.py,122,X_trans = imputer.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,23,X_imputed = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,43,KNNImputer(missing_values=na).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,67,imputer = KNNImputer(missing_values=na).fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,69,imputer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,73,"KNNImputer(missing_values=na, n_neighbors=0).fit(X_fit)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,89,imputer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,102,imputer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,115,"knn = KNNImputer(missing_values=na, n_neighbors=2).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,117,X_transform = knn.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,122,X_transform = knn.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,160,"assert_allclose(imputer_zero.fit_transform(X_zero), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,162,"imputer_zero.fit_transform(X_zero), imputer_nan.fit_transform(X_nan)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,194,"assert_allclose(imputer.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,226,"assert_allclose(imputer.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,237,"assert_allclose(imputer.fit(X).transform(X1), X1_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,249,"assert_allclose(imputer.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,261,"assert_allclose(imputer.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,265,"assert_allclose(imputer_plus1.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,279,"assert_allclose(imputer.fit_transform(X), X_imputed_uniform)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,286,"assert_allclose(imputer.fit_transform(X), X_imputed_uniform)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,293,"assert_allclose(imputer.fit_transform(X), X_imputed_uniform)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,303,"nn.fit(X[X_rows_idx, 1:], X[X_rows_idx, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,304,"knn_imputed_value = nn.predict(X[1:2, 1:])[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,322,"assert_allclose(imputer.fit_transform(X), X_imputed_distance1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,323,"assert_allclose(imputer.fit_transform(X), X_imputed_distance2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,350,"assert_allclose(imputer.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,397,"assert_allclose(imputer.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,442,"assert_allclose(imputer_comp_wt.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,463,"assert_allclose(imputer.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,507,"assert_allclose(imputer_comp.fit_transform(X), X_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,518,"assert_allclose(knn.fit_transform(X1), X1_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,522,"assert_allclose(knn.transform(X2), X2_imputed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,530,"assert_allclose(knn.fit_transform(X1), X1_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,534,"assert_allclose(knn.transform(X2), X2_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,555,"assert_allclose(knn_3.fit_transform(X), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_knn.py,558,"assert_allclose(knn_4.fit_transform(X), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_base.py,57,imputer.fit(data).transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_base.py,59,imputer.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_base.py,68,imputer.fit(data).transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_base.py,70,imputer.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_base.py,77,imputer.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_base.py,79,imputer.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_base.py,85,imputer.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_base.py,87,imputer.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_base.py,89,imputer.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,52,X_trans = imputer.fit(X).transform(X.copy())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,58,imputer.fit(sparse.csc_matrix(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,59,X_trans = imputer.transform(sparse.csc_matrix(X.copy()))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,75,X_imputed = imputer.fit_transform(sparse.csr_matrix(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,77,X_imputed = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,81,X_imputed = iterative_imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,92,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,102,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,114,imputer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,116,imputer.fit(X.toarray())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,118,imputer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,239,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,252,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,273,imputer.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,327,X_trans = imputer.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,347,X_trans = imputer.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,362,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,372,X_trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,398,X_trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,429,X_trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,454,X_trans = imputer.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,462,imputer = IterativeImputer().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,465,"imputer.fit([[1], [2]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,467,"imputer.fit([[1], [np.nan]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,487,"gs.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,497,Xt = imputer.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,504,Xt = imputer.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,511,Xt = imputer.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,518,Xt = imputer.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,525,Xt = imputer.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,543,X_imputed = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,545,"assert_allclose(X_imputed, imputer.initial_imputer_.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,548,imputer = IterativeImputer(max_iter=5).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,550,assert not np.all(imputer.transform(X) == imputer.initial_imputer_.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,554,"assert_allclose(imputer.transform(X), imputer.initial_imputer_.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,564,imputer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,565,imputer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,567,imputer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,568,imputer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,576,X_imputed = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,577,"assert_allclose(X_imputed, imputer.initial_imputer_.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,603,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,633,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,658,Xt = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,682,Xt = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,704,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,706,imputations = np.array([imputer.transform(X)[0][0] for _ in range(100)])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,734,).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,735,"initial_imputer = SimpleImputer(missing_values=0, strategy=strategy).fit(X_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,740,"imputer.transform(X_test)[:, 0], initial_imputer.transform(X_test)[:, 0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,755,imputer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,757,X_fitted_1 = imputer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,758,X_fitted_2 = imputer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,783,imputer1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,784,imputer2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,786,X_fitted_1a = imputer1.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,787,X_fitted_1b = imputer1.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,788,X_fitted_2 = imputer2.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,800,pred1 = m1.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,801,pred2 = m2.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,819,X_filled = imputer.fit_transform(X_missing)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,843,).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,844,X_test_est = imputer.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,869,"imputer = IterativeImputer(max_iter=10, verbose=1, random_state=rng).fit(X_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,870,X_test_est = imputer.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,885,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,902,X_filled_100 = imputer.fit_transform(X_missing)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,908,X_filled_early = imputer.fit_transform(X_missing)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,914,imputer.fit(X_missing)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,938,"X_fill = imputer.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,963,imputer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,990,imputer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1017,X_test_imputed1 = imputer1.fit(X_train).transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1018,X_test_imputed2 = imputer2.fit(X_train).transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1033,X_test_est = imputer.fit(X_train).transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1057,imputer.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1094,indicator.fit(X_fit).transform(X_trans)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1136,X_fit_mask = indicator.fit_transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1137,X_trans_mask = indicator.transform(X_trans)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1152,X_fit_mask_sparse = indicator.fit_transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1153,X_trans_mask_sparse = indicator.transform(X_trans)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1187,indicator.fit_transform(X_fit_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1189,indicator.fit_transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1191,indicator.transform(X_trans_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1214,X_fit_mask = indicator.fit_transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1215,X_trans_mask = indicator.transform(X_trans)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1238,X_trans = indicator.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1272,X_trans = trans.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1296,imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1305,Xt = mi.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1316,Xt = mi.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1325,imputer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1352,X_trans = imputer.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1368,X_trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1387,"trs = IterativeImputer(max_iter=1, imputation_order=order, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1437,X_1_trans = imputer.fit_transform(X_1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1440,X_2_trans = imputer.transform(X_2)  # test on new data
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1447,X_trans = imputer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/impute/tests/test_impute.py,1464,X_1_trans = imputer.fit_transform(X_1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,181,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,599,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,810,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,812,pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,856,"estimator.fit(X, y, sample_weight=weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,896,"estimator.fit(X, y, sample_weight=weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,911,"estimator.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,942,"estimator.fit(X, y, sample_weight=np.ones(len(y)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,945,"estimator.fit(X, y, sample_weight=np.ones(2 * len(y)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,948,"estimator.fit(X, y, sample_weight=np.ones((len(y), 2)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1010,"estimator1.fit(X1, y=y1, sample_weight=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1011,"estimator2.fit(X2, y=y2, sample_weight=sw2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1054,"estimator.fit(X, y, sample_weight=sample_weight_fit)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1071,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1073,estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1076,estimator.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1079,"estimator.fit(X, y.astype(object))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1085,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1091,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1105,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1138,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1172,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1227,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1271,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1311,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1370,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1401,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1420,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1432,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1451,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1477,transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1495,"transformer.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1498,"X_pred = transformer_clone.fit_transform(X, y=y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1509,"X_pred2 = transformer.transform(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1510,"X_pred3 = transformer.fit_transform(X, y=y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1512,X_pred2 = transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1513,"X_pred3 = transformer.fit_transform(X, y=y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1569,"transformer.transform(X[:, :-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1592,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1593,"pipeline.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1652,"estimator.fit(X_train, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1668,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1676,"X_trans = transformer.fit_transform(X_cast, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1703,"e.fit(X_zero_samples, [])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1711,"e.fit(X_zero_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1738,"estimator.fit(X_train, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1740,"estimator.fit(X_train_finite, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1749,estimator.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1758,estimator.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1774,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1807,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1867,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1868,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1933,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1934,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1951,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1968,clusterer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1970,clusterer.fit(X.tolist())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1979,pred2 = clusterer.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,1987,labels = clusterer.fit_predict(X_noise)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2015,X_pred1 = clusterer.fit(X).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2017,X_pred2 = clusterer.fit(X).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2035,"classifier.fit(X_train, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2041,"assert_array_equal(classifier.predict(X_test), y, err_msg=error_string_predict)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2051,X_m = StandardScaler().fit_transform(X_m)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2088,"classifier.fit(X, y[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2091,"classifier.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2093,"classifier.fit(X.tolist(), y.tolist())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2095,y_pred = classifier.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2119,"classifier.predict(X.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2122,classifier.predict(X.T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2218,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2220,estimator.fit(X.tolist())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2222,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2235,estimator.predict(X.T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2263,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2264,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2281,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2306,"y_pred = classifier.fit(X_train, y_train).predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2308,"y_pred_list_of_lists = classifier.fit(X_train, y_train_list_of_lists).predict("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2312,"y_pred_list_of_arrays = classifier.fit(X_train, y_train_list_of_arrays).predict("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2346,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2391,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2475,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2515,"assert estimator.fit(X, y) is estimator"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2550,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2551,y_pred = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2559,"estimator.fit(X, y[:, np.newaxis])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2560,y_pred_2d = estimator.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2583,"classifier.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2584,y_pred = classifier.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2651,X_multiclass = StandardScaler().fit_transform(X_multiclass)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2704,"regressor_1.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2705,pred1 = regressor_1.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2706,"regressor_2.fit(X, y_.astype(float))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2707,pred2 = regressor_2.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2747,"regressor.fit(X, y[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2750,"regressor.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2751,"regressor.fit(X.tolist(), y_.tolist())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2752,y_pred = regressor.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2759,"assert regressor.score(X, y_) > 0.5"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2773,"regressor.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2817,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2818,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2836,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2837,y_pred = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2840,"classifier.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2841,y_pred_balanced = classifier.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2868,"coef_balanced = classifier.fit(X, y).coef_.copy()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2879,"coef_manual = classifier.fit(X, y).coef_.copy()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2904,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2979,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2980,pred_orig = est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2985,pred = est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,2991,pred = est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3069,"estimator_1.fit(X_, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3070,pred1 = estimator_1.predict(X_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3071,"estimator_2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3072,pred2 = estimator_2.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3249,"estimator.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3275,"estimator.fit(X, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3364,"e.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3388,"estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3410,y_pred = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3419,y_pred_2 = estimator.fit(X).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3428,y_pred = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3446,estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3456,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3460,# Check that est.fit(X) is the same as est.fit(X).fit(X). Ideally we would
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3489,"estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3499,"estimator.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3547,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3577,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3622,"estimator.fit(X, None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3658,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3750,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3863,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3878,"X_transform = transformer.fit_transform(X, y=y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3919,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/estimator_checks.py,3936,"X_transform = transformer.fit_transform(df, y=y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/_mocking.py,106,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/_mocking.py,114,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/_mocking.py,324,"return self.est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/_mocking.py,327,return self.est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/class_weight.py,48,y_ind = le.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/class_weight.py,53,weight = recip_freq[le.transform(classes)]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/_testing.py,967,"return accuracy_score(y, self.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/_testing.py,1007,"return r2_score(y, self.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/_testing.py,1043,"return self.fit(X, y).transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_validation.py,767,check_is_fitted(Estimator().fit())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_validation.py,799,ard.fit(*make_blobs())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_validation.py,800,svr.fit(*make_blobs())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_validation.py,842,ard.fit(*make_blobs())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_validation.py,1595,est = PassthroughTransformer().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_validation.py,1615,est = PassthroughTransformer().fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_class_weight.py,87,"logreg1 = LogisticRegression(class_weight=""balanced"").fit(X_1, y_1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_class_weight.py,88,"logreg0 = LogisticRegression(class_weight=""balanced"").fit(X_0, y_0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_class_weight.py,89,"logreg = LogisticRegression(class_weight=""balanced"").fit(X_, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_estimator_checks.py,249,label_encoder = LabelEncoder().fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_estimator_checks.py,339,"return self.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_estimator_checks.py,373,"super().fit(X, y, coef_init, intercept_init, sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_estimator_checks.py,403,"return super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_estimator_checks.py,627,"est.fit(iris.data + 10, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,40,"CheckingClassifier(**kwargs).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,57,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,65,"clf = CheckingClassifier(check_X=_success).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,74,"clf = CheckingClassifier(check_X=_success).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,86,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,92,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,95,assert clf.score(X) == pytest.approx(0)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,97,"assert clf.fit(X, y).score(X) == pytest.approx(1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,113,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,131,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,132,"clf.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,137,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,139,"clf.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,149,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,156,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_mocking.py,175,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_testing.py,440,return self.delegate.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/utils/tests/test_testing.py,489,return self.delegate.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_graph_lasso.py,422,>>> cov = GraphicalLasso().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_graph_lasso.py,805,>>> cov = GraphicalLassoCV().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_empirical_covariance.py,163,>>> cov = EmpiricalCovariance().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_shrunk_covariance.py,140,>>> cov = ShrunkCovariance().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_shrunk_covariance.py,440,>>> cov = LedoitWolf().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_shrunk_covariance.py,645,>>> oas = OAS().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_elliptic_envelope.py,129,>>> cov = EllipticEnvelope(random_state=0).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_elliptic_envelope.py,131,">>> cov.predict([[0, 0],"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_elliptic_envelope.py,180,super().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_elliptic_envelope.py,261,Mean accuracy of self.predict(X) w.r.t. y.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_elliptic_envelope.py,263,"return accuracy_score(y, self.predict(X), sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/_robust_covariance.py,693,>>> cov = MinCovDet(random_state=0).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,36,cov.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,53,cov.fit(X_1d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,64,cov.fit(X_1sample)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,75,cov.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,83,cov.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,90,cov.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,97,cov.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,103,cov.fit(X_1d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,108,cov.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,117,lw.fit(X_centered)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,120,score_ = lw.score(X_centered)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,136,scov.fit(X_centered)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,142,lw.fit(X_1d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,150,lw.fit(X_centered)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,151,"assert_almost_equal(lw.score(X_centered), score_, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,157,lw.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,161,"assert_almost_equal(lw.score(X), score_, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,168,scov.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,174,lw.fit(X_1d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,187,lw.fit(X_1sample)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,193,lw.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,194,"assert_almost_equal(lw.score(X), score_, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,227,lw.fit(X_small)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,238,lw = LedoitWolf(block_size=10).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,244,lw = LedoitWolf(block_size=25).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,263,oa.fit(X_centered)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,265,score_ = oa.score(X_centered)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,272,scov.fit(X_centered)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,278,oa.fit(X_1d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,286,oa.fit(X_centered)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,287,"assert_almost_equal(oa.score(X_centered), score_, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,293,oa.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,295,"assert_almost_equal(oa.score(X), score_, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,302,scov.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,308,oa.fit(X_1d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,320,oa.fit(X_1sample)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,326,oa.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,327,"assert_almost_equal(oa.score(X), score_, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_covariance.py,333,cov = EmpiricalCovariance().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_robust_covariance.py,55,mcd.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_robust_covariance.py,73,mcd_fit = MinCovDet(random_state=rand_gen).fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_robust_covariance.py,92,mcd.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_robust_covariance.py,124,MinCovDet(random_state=rand_gen).fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_robust_covariance.py,140,MinCovDet().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_robust_covariance.py,174,mcd.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_graphical_lasso.py,53,model = GraphicalLasso(alpha=0.25).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_graphical_lasso.py,54,model.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_graphical_lasso.py,63,prec_ = GraphicalLasso(assume_centered=assume_centered).fit(Z).precision_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_graphical_lasso.py,154,"GraphicalLassoCV(verbose=100, alphas=5, tol=1e-1).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_graphical_lasso.py,159,"GraphicalLassoCV(alphas=[0.8, 0.5], tol=1e-1, n_jobs=1).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_graphical_lasso.py,177,"cov = GraphicalLassoCV(cv=splits, alphas=n_alphas, n_refinements=n_refinements).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_graphical_lasso.py,216,"cov = GraphicalLassoCV(cv=splits, alphas=n_alphas, n_refinements=n_refinements).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_graphical_lasso.py,255,"cov = GraphicalLassoCV(cv=splits, alphas=n_alphas, n_refinements=n_refinements).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_elliptic_envelope.py,20,clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_elliptic_envelope.py,23,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_elliptic_envelope.py,24,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_elliptic_envelope.py,31,"clf.score(X, np.ones(100)), (100 - y_pred[y_pred == -1].size) / 100.0"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_elliptic_envelope.py,38,clf1 = EllipticEnvelope(contamination=0.2).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/covariance/tests/test_elliptic_envelope.py,39,clf2 = EllipticEnvelope().fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_rbm.py,124,>>> model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,709,"self.validation_scores_.append(self.score(X_val, y_val))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1036,">>> clf = MLPClassifier(random_state=1, max_iter=300).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1039,">>> clf.predict(X_test[:5, :])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1041,">>> clf.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1131,self._label_binarizer.fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1150,y = self._label_binarizer.transform(y).astype(bool)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1202,self._label_binarizer.fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1204,self._label_binarizer.fit(classes)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1508,">>> regr = MLPRegressor(random_state=1, max_iter=500).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1509,>>> regr.predict(X_test[:2])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py,1511,">>> regr.score(X_test, y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,39,X_digits_multi = MinMaxScaler().fit_transform(X_digits[:200])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,44,X_digits_binary = MinMaxScaler().fit_transform(X_digits[:200])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,76,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,194,Y = LabelBinarizer().fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,206,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,266,"mlp.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,267,y_predict = mlp.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,268,"assert mlp.score(X_train, y_train) > 0.95"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,284,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,286,"assert mlp.score(X, y) > 0.80"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,289,"assert mlp.score(X, y) > 0.98"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,309,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,331,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,336,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,353,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,355,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,379,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,380,"assert mlp.score(X, y) > 0.97"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,394,"assert mlp.score(X, y) > 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,399,"mlp.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,408,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,409,"assert mlp.score(X, y) > 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,437,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,438,pred1 = mlp.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,444,pred2 = mlp.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,446,"assert mlp.score(X, y) > 0.95"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,456,"assert clf.score([[1], [2], [3], [4]], [""a"", ""b"", ""c"", ""d""]) > 0"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,477,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,478,pred1 = mlp.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,490,pred2 = mlp.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,492,"score = mlp.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,541,"clf(**args).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,551,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,574,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,597,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,632,"mlp1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,633,"mlp2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,644,"mlp1.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,645,"mlp2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,656,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,657,pred1 = mlp.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,658,"mlp.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,659,pred2 = mlp.predict(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,661,pred1 = mlp.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,662,pred2 = mlp.predict(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,672,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,685,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,697,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,711,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,728,"clf = MLPClassifier(hidden_layer_sizes=2, solver=""lbfgs"", warm_start=True).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,729,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,730,"clf.fit(X, y_3classes)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,733,"clf = MLPClassifier(hidden_layer_sizes=2, solver=""lbfgs"", warm_start=True).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,743,"clf.fit(X, y_i)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,757,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,759,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,776,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,800,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,818,"mlp.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,826,"mlp_64.fit(X_digits[:300], y_digits[:300])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,827,pred_64 = mlp_64.predict(X_digits[300:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,833,"mlp_32.fit(X_digits[:300].astype(np.float32), y_digits[:300])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,834,pred_32 = mlp_32.predict(X_digits[300:].astype(np.float32))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,845,"mlp_64.fit(X_digits[:300], y_digits[:300])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,846,pred_64 = mlp_64.predict(X_digits[300:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,851,"mlp_32.fit(X_digits[:300].astype(np.float32), y_digits[:300])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,852,pred_32 = mlp_32.predict(X_digits[300:].astype(np.float32))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,864,"mlp.fit(X[:300], y[:300])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,865,pred = mlp.predict(X[300:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,884,"pre_trained_estimator.fit(features, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_mlp.py,898,predicted_value = load_estimator.predict(fine_tune_features)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,29,rbm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,57,rbm1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,59,Xt1 = rbm1.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,68,BernoulliRBM().fit(X)  # no exception
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,95,rbm1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,110,rbm1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,127,rbm2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,140,rbm1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,154,rbm1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,176,rbm.fit(Xdigits)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,192,rbm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,212,Xt = rbm.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,224,Xt_64 = rbm_64.fit_transform(X_64)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neural_network/tests/test_rbm.py,229,Xt_32 = rbm_32.fit_transform(X_32)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_variance_threshold.py,64,>>> selector.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,165,">>> selector = selector.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,283,"estimator.fit(X[:, features], y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,310,"self.estimator_.fit(X[:, features], y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,336,return self.estimator_.predict(self.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,360,features returned by `rfe.transform(X)` and `y`.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,363,"return self.estimator_.score(self.transform(X), y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,389,return self.estimator_.decision_function(self.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,409,return self.estimator_.predict_proba(self.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,427,return self.estimator_.predict_log_proba(self.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,606,">>> selector = selector.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,732,"rfe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_rfe.py,739,"self.estimator_.fit(self.transform(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_from_model.py,168,">>> selector = SelectFromModel(estimator=LogisticRegression()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_from_model.py,175,>>> selector.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_from_model.py,267,"self.estimator_.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_mutual_info.py,56,nn.fit(xy)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_mutual_info.py,125,nn.fit(c[mask])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_univariate_selection.py,217,Y = LabelBinarizer().fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_univariate_selection.py,493,">>> X_new = SelectPercentile(chi2, percentile=10).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_univariate_selection.py,593,">>> X_new = SelectKBest(chi2, k=20).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_univariate_selection.py,686,">>> X_new = SelectFpr(chi2, alpha=0.01).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_univariate_selection.py,765,">>> X_new = SelectFdr(chi2, alpha=0.01).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_univariate_selection.py,842,">>> X_new = SelectFwe(chi2, alpha=0.01).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_univariate_selection.py,922,">>> X_new = transformer.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_sequential.py,116,">>> sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/_sequential.py,121,>>> sfs.transform(X).shape
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_variance_threshold.py,19,sel = VarianceThreshold().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_variance_threshold.py,23,"VarianceThreshold().fit([[0, 1, 2, 3]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_variance_threshold.py,25,"VarianceThreshold().fit([[0, 1], [0, 1]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_variance_threshold.py,31,X = VarianceThreshold(threshold=0.4).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_variance_threshold.py,41,var_threshold.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_variance_threshold.py,60,VarianceThreshold().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_variance_threshold.py,71,sel = VarianceThreshold().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,72,"rfe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,77,"rfe_svc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,93,"rfe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,94,X_r = rfe.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,95,"clf.fit(X_r, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,101,"rfe_sparse.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,102,X_r_sparse = rfe_sparse.transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,107,"assert_array_almost_equal(rfe.predict(X), clf.predict(iris.data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,108,"assert rfe.score(X, y) == clf.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,119,"self.svc_ = SVC(kernel=""linear"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,126,"return self.svc_.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,130,"RFE(estimator=TestEstimator()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,132,"RFE(estimator=TestEstimator()).fit(X, y, prop=""foo"").score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,134,"RFE(estimator=TestEstimator()).fit(X, y, prop=""foo"").score(X, y, prop=""foo"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,145,"rfe.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,157,"rfe_num.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,160,"rfe_perc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,175,"rfe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,176,X_r = rfe.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,177,"clf.fit(X_r, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,190,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,205,X_r = rfecv.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,213,"rfecv_sparse.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,214,X_r_sparse = rfecv_sparse.transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,221,X_r = rfecv.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,227,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,228,X_r = rfecv.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,236,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,250,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,260,X_r = rfecv.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,265,"rfecv_sparse.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,266,X_r_sparse = rfecv_sparse.transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,272,"rfecv_sparse.fit(X_sparse, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,273,X_r_sparse = rfecv_sparse.transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,285,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,315,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,336,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,372,"sel = selector.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,377,"sel = selector.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,382,"sel = selector.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,418,"rfe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,440,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,471,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,485,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,511,"est_groups.fit(X, y, groups=groups)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,530,"sel = selector.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,553,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,571,"rfe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,572,rfe.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,585,"sfm.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,586,assert sfm.transform(data).shape[1] == 2
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,596,"rfecv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_rfe.py,614,"rfe_test.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,46,"model.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,48,model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,55,"transformer.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,75,"transformer.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,84,"X_trans = transformer.fit_transform(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,114,"X_new1 = transformer1.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,115,"X_new2 = transformer2.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,120,"X_new1 = transformer1.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,130,"X_new2 = transformer2.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,159,"X_new = transformer.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,178,"X_new1 = transformer1.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,181,"X_new2 = transformer2.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,184,"X_new3 = transformer3.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,186,"selected_indices = transformer3.transform(np.arange(X.shape[1])[np.newaxis, :])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,205,"transformer.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,208,X_new = transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,234,"transformer.fit(X, y, sample_weight=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,236,"transformer.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,239,"transformer.fit(X, y, sample_weight=3 * sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,257,"transformer.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,258,X_new = transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,283,"transformer.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,285,X_new = transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,289,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,306,X_transform = transformer.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,307,"transformer.fit(np.vstack((data, data)), np.concatenate((y, y)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,308,"assert_array_almost_equal(X_transform, transformer.transform(data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,318,"transformer.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,320,"transformer.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,331,"model.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,332,X_transform = model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,333,"clf.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,335,"assert_array_almost_equal(model.transform(data), X_transform)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,340,"model.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,341,"assert_array_almost_equal(model.transform(data), X_transform)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,346,"model.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,352,"model.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,353,X_transform = model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,356,"est.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,366,"model.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,367,X_transform = model.transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,371,assert X_transform.shape[1] > model.transform(data).shape[1]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,384,"model.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,393,"model.fit(nan_data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,398,model.transform(nan_data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,429,"selector.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_from_model.py,430,assert selector.transform(data).shape[1] == 1
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,22,"sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,29,"sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,44,"sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,49,assert sfs.transform(X).shape[1] == n_features_to_select
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,71,"sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,100,"sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,110,"sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,111,sfs.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,123,"sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,124,sfs.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,128,"SequentialFeatureSelector(LinearRegression(), cv=2).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,141,"sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,142,sfs.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,147,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,148,pipe.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,161,sfs.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,162,assert sfs.transform(X).shape[1] == n_features_to_select
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_sequential.py,176,"sfs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,216,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,219,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,220,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,248,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,251,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,252,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,292,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,295,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,296,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,312,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,323,"univariate_filter.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,328,X_selected = univariate_filter.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,351,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,357,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,358,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,384,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,388,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,389,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,413,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,417,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,418,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,432,"SelectPercentile(percentile=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,434,"SelectPercentile(percentile=101).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,436,"GenericUnivariateSelect(mode=""percentile"", param=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,438,"GenericUnivariateSelect(mode=""percentile"", param=101).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,455,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,459,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,460,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,483,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,489,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,490,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,507,"filter_fdr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,512,"filter_kbest.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,517,"filter_percentile.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,522,"filter_fpr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,527,"filter_fwe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,550,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,553,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,554,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,592,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,595,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,596,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,650,"Xt = SelectKBest(chi2, k=2).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,654,"Xt = SelectPercentile(chi2, percentile=67).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,665,"Xt = SelectKBest(chi2, k=2).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,669,"Xt = SelectPercentile(chi2, percentile=67).fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,680,"sel = SelectKBest(chi2, k=n_features).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,681,"X_test = sel.transform([[0, 1, 2]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,713,"SelectFeatures(score_func=10).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,721,"SelectKBest(k=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,723,"SelectKBest(k=4).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,725,"GenericUnivariateSelect(mode=""k_best"", param=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,727,"GenericUnivariateSelect(mode=""k_best"", param=4).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,747,"SelectFwe(alpha=0.01).fit(X, y),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,748,"SelectFdr(alpha=0.01).fit(X, y),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,749,"SelectFpr(alpha=0.01).fit(X, y),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,750,"SelectPercentile(percentile=0).fit(X, y),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,751,"SelectKBest(k=0).fit(X, y),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,756,X_selected = selector.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,777,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,780,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,781,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,791,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,794,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,795,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,816,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,820,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,821,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,831,"X_r = univariate_filter.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,834,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_feature_select.py,835,.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_chi2.py,33,"chi2 = mkchi2(k=1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_chi2.py,34,"chi2 = mkchi2(k=1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_chi2.py,36,"assert_array_equal(chi2.transform(X), np.array(X)[:, [0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_chi2.py,38,"chi2 = mkchi2(k=2).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_chi2.py,42,"chi2 = mkchi2(k=2).fit(Xsp, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_chi2.py,44,Xtrans = chi2.transform(Xsp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_chi2.py,49,"Xtrans2 = mkchi2(k=2).fit_transform(Xsp, y).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_chi2.py,57,"mkchi2(k=2).fit_transform(Xcoo, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,44,"Xt_actual = sel.fit(X, y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,45,"Xt_actual2 = StepSelector().fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,50,assert np.int32 == sel.transform(X.astype(np.int32)).dtype
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,51,assert np.float32 == sel.transform(X.astype(np.float32)).dtype
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,54,names_t_actual = sel.transform([feature_names])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,59,"sel.transform(np.array([[1], [2]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,65,Xt_actual = sel.fit(sparse(X)).transform(sparse(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,66,Xt_actual2 = sel.fit_transform(sparse(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,71,assert np.int32 == sel.transform(sparse(X).astype(np.int32)).dtype
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,72,assert np.float32 == sel.transform(sparse(X).astype(np.float32)).dtype
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,76,"sel.transform(np.array([[1], [2]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,81,"Xinv_actual = sel.fit(X, y).inverse_transform(Xt)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,100,Xinv_actual = sel.fit(sparse(X)).inverse_transform(sparse(Xt))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/feature_selection/tests/test_base.py,114,"sel.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_partial_dependence.py,381,">>> gb = GradientBoostingClassifier(random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_permutation_importance.py,225,">>> clf = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/partial_dependence.py,73,">>> est1 = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/partial_dependence.py,74,">>> est2 = RandomForestRegressor().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/partial_dependence.py,283,">>> clf = GradientBoostingRegressor(n_estimators=10).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/partial_dependence.py,714,">>> est1 = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/partial_dependence.py,715,">>> est2 = RandomForestRegressor().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/partial_dependence.py,907,">>> clf = GradientBoostingRegressor(n_estimators=10).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/tests/test_plot_partial_dependence.py,47,"clf.fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/tests/test_plot_partial_dependence.py,320,"lr.fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/tests/test_plot_partial_dependence.py,445,"clf_int.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/tests/test_plot_partial_dependence.py,461,"clf_symbol.fit(iris.data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/tests/test_plot_partial_dependence.py,497,"clf = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/tests/test_plot_partial_dependence.py,619,"estimator = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/_plot/tests/test_plot_partial_dependence.py,642,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,103,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,217,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,234,mean_predictions.append(est.predict(X_).mean())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,287,"forest.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,288,"gbdt.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,289,"tree.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,330,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,378,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,387,new_X = PolynomialFeatures(degree=power).fit_transform(new_X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,389,"lr = LinearRegression().fit(new_X, new_y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,390,"r2 = r2_score(new_y, lr.predict(new_X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,414,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,501,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,519,"estimator = LogisticRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,531,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,545,"estimator.fit(df, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,559,"estimator.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,568,"gbc.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,600,"clf.fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,610,"clf.fit(X, y, sample_weight=np.ones(len(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,626,"clf.fit(scaler.fit_transform(iris.data), iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,627,"pipe.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,635,"scaler.transform(iris.data),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,682,"pipe.fit(df, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,691,X_proc = clone(preprocessor).fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,697,"clf = clone(estimator).fit(X_proc, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,741,"pipe.fit(df, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,780,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_partial_dependence.py,791,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,47,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,87,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,144,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,196,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,231,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,247,"lr = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,265,"lr = LinearRegression().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,314,"cat_column = binner.fit_transform(y.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,335,"rf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,381,"clf = DummyClassifier(strategy=""prior"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,409,"lr.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,442,"lr.fit(x, y, w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,466,"lr.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,501,"""r2"": r2_score(y, estimator.predict(X)),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,502,"""neg_mean_squared_error"": -mean_squared_error(y, estimator.predict(X)),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,512,"lr = LinearRegression().fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/inspection/tests/test_permutation_importance.py,537,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_base.py,315,) = libsvm.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_base.py,435,return libsvm.predict(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_base.py,791,y = super().predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_base.py,1140,y_ind = enc.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_bounds.py,57,Y = LabelBinarizer(neg_label=-1).fit_transform(y).T
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,177,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,186,">>> print(clf.predict([[0, 0, 0, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,411,">>> regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,419,">>> print(regr.predict([[0, 0, 0, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,722,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,726,">>> print(clf.predict([[-0.8, -1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,979,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,981,">>> print(clf.predict([[-0.8, -1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,1183,">>> regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,1371,">>> regr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,1547,>>> clf = OneClassSVM(gamma='auto').fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,1548,>>> clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,1631,"super().fit(X, np.ones(_num_samples(X)), sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/_classes.py,1685,y = super().predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,49,"dense_svm.fit(X_train.toarray(), y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,54,"sparse_svm.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,66,"dense_svm.predict(X_test_dense), sparse_svm.predict(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,84,dense_svm.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,130,"svm.SVC(kernel=""linear"", probability=True, random_state=0).fit(X, y).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,132,"sparse_svc = svm.SVC(kernel=""linear"", probability=True, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,155,"unsorted_svc = svm.SVC(kernel=""linear"", probability=True, random_state=0).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,170,"clf_lin = svm.SVC(kernel=""linear"").fit(X_sp, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,171,"clf_mylin = svm.SVC(kernel=kfunc).fit(X_sp, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,172,"assert_array_equal(clf_lin.predict(X_sp), clf_mylin.predict(X_sp))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,178,"sp_clf = svm.SVC(kernel=k).fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,179,"clf = svm.SVC(kernel=k).fit(iris.data.toarray(), iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,186,"clf.predict(iris.data.toarray()), sp_clf.predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,200,"clf = svc.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,207,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,209,prediction = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,222,"svm.SVC(C=-1).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,227,"clf.fit(X_sp, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,231,"clf.fit(X_sp, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,234,"clf.fit(X_sp, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,235,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,240,"clf = svm.LinearSVC(random_state=0).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,241,"sp_clf = svm.LinearSVC(random_state=0).fit(X_sp, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,248,"assert_array_almost_equal(clf.predict(X), sp_clf.predict(X_sp))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,250,"clf.fit(X2, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,251,"sp_clf.fit(X2_sp, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,260,"sp_clf = svm.LinearSVC(random_state=0).fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,261,"clf = svm.LinearSVC(random_state=0).fit(iris.data.toarray(), iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,268,"clf.predict(iris.data.toarray()), sp_clf.predict(iris.data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,273,"assert_array_almost_equal(pred, clf.predict(iris.data.toarray()))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,278,"assert_array_equal(pred, clf.predict(iris.data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,280,"assert_array_equal(pred, sp_clf.predict(iris.data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,296,"clf.fit(X_[:180], y_[:180])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,297,y_pred = clf.predict(X_[180:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,304,"clf.fit(X_sp, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,305,"assert_array_equal(clf.predict([X[2]]), [1.0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,308,"clf.fit(X_sp, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,309,"assert_array_equal(clf.predict([X[2]]), [2.0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,515,"clf = svm.SVC(kernel=""linear"").fit(X.toarray(), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,516,"sp_clf = svm.SVC(kernel=""linear"").fit(sparse.coo_matrix(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,528,"b.fit(X_sp, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,529,pred = b.predict(X_sp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,535,"pred_dense = dense_svm.fit(X, Y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,549,"sp.fit(X_sp, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,555,"proba_1 = a.fit(X, Y).predict_proba(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_sparse.py,558,"proba_2 = a.fit(X, Y).predict_proba(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_bounds.py,63,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_bounds.py,68,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,49,"clf = svm.SVC(kernel=""linear"").fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,54,"assert_array_equal(clf.predict(X), Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,62,"clf = svm.SVC(kernel=k).fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,63,assert np.mean(clf.predict(iris.data) == iris.target) > 0.9
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,69,"model = _libsvm.fit(iris.data, iris.target.astype(np.float64))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,70,"pred = _libsvm.predict(iris.data, *model)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,73,"model = _libsvm.fit(iris.data, iris.target.astype(np.float64), kernel=""linear"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,74,"pred = _libsvm.predict(iris.data, *model, kernel=""linear"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,98,"clf.fit(K, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,101,pred = clf.predict(KT)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,103,clf.predict(KT.T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,118,pred = clf.predict(KT)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,128,"clf.fit(np.array(X), Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,129,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,141,"clf.fit(K, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,142,"clf2.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,143,pred = clf.predict(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,156,pred = clf.predict(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,160,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,175,"clf.fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,176,"assert clf.score(diabetes.data, diabetes.target) > 0.02"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,180,"svm.SVR().fit(diabetes.data, np.ones(len(diabetes.data)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,181,"svm.LinearSVR().fit(diabetes.data, np.ones(len(diabetes.data)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,188,"lsvr = svm.LinearSVR(C=1e3).fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,189,"score1 = lsvr.score(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,191,"svr = svm.SVR(kernel=""linear"", C=1e3).fit(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,192,"score2 = svr.score(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,205,"lsvr = svm.LinearSVR(C=1e3, tol=1e-12, max_iter=10000).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,208,"score1 = lsvr.score(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,210,"lsvr_no_weight = svm.LinearSVR(C=1e3, tol=1e-12, max_iter=10000).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,213,"score2 = lsvr_no_weight.score(diabetes.data, diabetes.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,224,"lsvr_unflat = svm.LinearSVR(C=1e3, tol=1e-12, max_iter=10000).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,227,score3 = lsvr_unflat.score(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,233,"lsvr_flat = svm.LinearSVR(C=1e3, tol=1e-12, max_iter=10000).fit(X_flat, y_flat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,234,"score4 = lsvr_flat.score(X_flat, y_flat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,245,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,247,clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,253,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,254,pred = clf.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,281,clf.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,284,y_pred_test = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,286,y_pred_outliers = clf.predict(X_outliers)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,296,clf = svm.OneClassSVM(gamma=1).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,316,"clf.fit(X, **params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,321,# We change clf.dual_coef_ at run time and expect .predict() to change
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,327,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,329,"assert_array_equal(clf.predict([[-0.1, -0.1]]), [1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,331,"assert_array_equal(clf.predict([[-0.1, -0.1]]), [2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,342,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,346,"assert np.mean(np.argmax(prob_predict, 1) == clf.predict(iris.data)) > 0.9"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,358,"clf = svm.SVC(kernel=""linear"", C=0.1, decision_function_shape=""ovo"").fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,367,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,369,prediction = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,379,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,391,"clf = SVM(kernel=""linear"", decision_function_shape=""ovr"").fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,396,"assert_array_equal(clf.predict(iris.data), np.argmax(dec, axis=1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,402,"clf = SVM(kernel=""linear"", decision_function_shape=""ovr"").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,405,"assert_array_equal(clf.predict(X_test), np.argmax(dec, axis=1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,408,"clf = SVM(kernel=""linear"", decision_function_shape=""ovo"").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,413,"SVM(decision_function_shape=""bad"").fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,425,"reg = svm.SVR(kernel=""linear"", C=0.1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,428,"assert_array_almost_equal(dec.ravel(), reg.predict(X).ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,431,"reg = svm.SVR(kernel=""rbf"", gamma=1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,435,"assert_array_almost_equal(dec.ravel(), reg.predict(X).ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,442,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,444,"assert_array_almost_equal(clf.predict(X), [2] * 6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,456,"clf.fit(X_[:100], y_[:100])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,457,y_pred = clf.predict(X_[100:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,471,"estimator.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,477,"estimator.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,482,"estimator.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,497,"estimator.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,498,"y_pred = estimator.predict([[-1.0, 1.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,503,"estimator.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,504,"y_pred = estimator.predict([[-1.0, 1.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,508,"estimator.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,509,"y_pred = estimator.predict([[-1.0, 1.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,516,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,519,"clf.fit(X, Y, sample_weight=np.repeat(0.01, len(X)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,542,"est.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,564,"clf.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,584,"clf.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,599,"est.fit(X, Y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,630,"y_pred = clf.fit(X[unbalanced], y[unbalanced]).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,632,y_pred_balanced = clf.fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,635,).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,645,"svm.SVC(C=-1).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,650,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,654,"clf.fit(X, Y2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,664,"clf.fit(Xf, yf)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,665,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,670,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,673,"clf = svm.SVC().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,675,clf.predict(sparse.lil_matrix(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,678,"clf.fit(np.dot(X, Xt), Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,680,clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,683,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,685,clf.predict(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,703,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,709,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,720,"clf.fit(sparse_gram, [0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,730,"model.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,758,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,760,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,764,"svm.LinearSVC(loss=""l3"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,775,"svm.LinearSVC(loss=""SQuared_hinge"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,779,"svm.LinearSVC(penalty=""L2"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,784,"clf = svm.LinearSVC(random_state=0).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,789,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,795,").fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,796,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,799,"clf = svm.LinearSVC(penalty=""l2"", dual=True, random_state=0).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,800,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,804,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,805,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,815,"ovr_clf = svm.LinearSVC(random_state=0).fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,817,"cs_clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,820,assert (ovr_clf.predict(iris.data) == cs_clf.predict(iris.data)).mean() > 0.9
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,827,"cs_clf.predict(iris.data),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,838,"clf = svm.LinearSVC(random_state=0).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,839,"clf_unitweight = svm.LinearSVC(random_state=0, tol=1e-12, max_iter=1000).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,844,"assert_array_equal(clf_unitweight.predict(T), clf.predict(T))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,852,"lsvc_unflat = svm.LinearSVC(random_state=0, tol=1e-12, max_iter=1000).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,855,pred1 = lsvc_unflat.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,859,"lsvc_flat = svm.LinearSVC(random_state=0, tol=1e-12, max_iter=1000).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,862,pred2 = lsvc_flat.predict(T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,879,".fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,880,".score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,889,"clf = svm.LinearSVC(random_state=0).fit(iris.data, target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,891,assert np.mean(clf.predict(iris.data) == target) > 0.8
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,895,"assert_array_equal(pred, clf.predict(iris.data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,917,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,923,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,930,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,937,"clf = svm.LinearSVC().fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,948,"clf = svm.LinearSVC().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,959,"svm.SVC(kernel=""linear"").fit(iris.data, iris.target),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,960,"svm.NuSVC(kernel=""linear"").fit(iris.data, iris.target),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,961,"svm.SVR(kernel=""linear"").fit(iris.data, iris.target),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,962,"svm.NuSVR(kernel=""linear"").fit(iris.data, iris.target),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,963,"svm.OneClassSVM(kernel=""linear"").fit(iris.data),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,981,"clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,998,"svm_cloned.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1003,"svm_builtin.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1007,"assert_array_equal(svm_cloned.predict(iris.data), svm_builtin.predict(iris.data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1023,"svc.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1035,"a.fit(np.array(X), Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1043,clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1047,clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1054,"proba_1 = a.fit(X, Y).predict_proba(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1056,"proba_2 = a.fit(X, Y).predict_proba(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1066,"lsvc.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1071,"lsvr.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1082,"svr.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1084,"svr.predict(X), np.dot(X, svr.coef_.ravel()) + svr.intercept_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1101,"lsvc.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1108,"lsvc.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1118,"G.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1123,"G.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1140,"clf = OneVsRestClassifier(estimator(decision_function_shape=""ovr"")).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1143,assert len(clf.predict(X)) == len(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1167,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1169,y_pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1196,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1199,svm.predict(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1218,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1219,"pred = svm.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1225,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1226,"pred = svm.predict(np.c_[xx.ravel(), yy.ravel()])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1235,"svm.SVC(kernel=""linear"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1239,"svm.SVC(kernel=""precomputed"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1248,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1256,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1307,"est_no_weight = base.clone(base_estimator).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1308,est_with_weight = base.clone(base_estimator).fit(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1326,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1332,"reg = svm.SVR().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1360,"svc1 = Estimator(kernel=string_kernel).fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1361,"svc2 = Estimator(kernel=""linear"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1362,"svc3 = Estimator(kernel=""precomputed"").fit(K, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1364,"assert svc1.score(data, y) == svc3.score(K, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1365,"assert svc1.score(data, y) == svc2.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1369,"assert_array_equal(svc1.predict(data), svc2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1370,"assert_array_equal(svc1.predict(data), svc3.predict(K))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1372,"assert_allclose(svc1.predict(data), svc2.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1373,"assert_allclose(svc1.predict(data), svc3.predict(K))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1381,"clf = svm.SVC(kernel=""linear"").fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/svm/tests/test_svm.py,1386,clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_locally_linear.py,108,"knn = NearestNeighbors(n_neighbors=n_neighbors + 1, n_jobs=n_jobs).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_locally_linear.py,310,nbrs.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_locally_linear.py,673,>>> X_transformed = embedding.fit_transform(X[:100])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_locally_linear.py,716,self.nbrs_.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py,503,.fit(X_embedded)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py,728,...                   init='random').fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py,850,"""TSNE.fit(). With metric='precomputed', X """
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py,937,knn.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py,978,"X_embedded = pca.fit_transform(X).astype(np.float32, copy=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py,1132,self.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_isomap.py,149,>>> X_transformed = embedding.fit_transform(X[:100])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_isomap.py,190,self.nbrs_.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_isomap.py,257,self.embedding_ = self.kernel_pca_.fit_transform(G)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_isomap.py,280,G_center = KernelCenterer().fit_transform(G)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_isomap.py,365,return self.kernel_pca_.transform(G_X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_mds.py,112,"disparities_flat = ir.fit_transform(sim_flat_w, dis_flat_w)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_mds.py,423,>>> X_transformed = embedding.fit_transform(X[:100])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_mds.py,488,"self.fit_transform(X, init=init)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_spectral_embedding.py,482,>>> X_transformed = embedding.fit_transform(X[:100])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_spectral_embedding.py,562,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/_spectral_embedding.py,670,self.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,38,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,64,K = centerer.fit_transform(-0.5 * G ** 2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,74,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,81,K_iso = centerer.fit_transform(-0.5 * G_iso ** 2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,98,X_iso = iso.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,103,X_iso2 = iso.transform(X + noise)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,117,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,118,"assert 0.9 < clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,141,Xt_chain = est_chain.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,142,Xt_compact = est_compact.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,145,Xt_chain = est_chain.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,146,Xt_compact = est_compact.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,165,reference = manifold.Isomap().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,168,"embedding = manifold.Isomap(metric=metric, p=p).fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,182,"model.fit(np.random.rand(50, 2))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,198,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,205,manifold.Isomap(n_neighbors=2).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_isomap.py,214,"manifold.Isomap(n_neighbors=1, metric=""precomputed"").fit(X_graph)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_mds.py,45,mds_clf.fit(sim)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,172,nn = NearestNeighbors().fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,211,nn = NearestNeighbors().fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,287,X_embedded = tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,307,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,330,X_embedded = tsne.fit_transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,354,X_embedded = tsne.fit_transform(D)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,375,"tsne.fit_transform(np.array([[0.0], [0.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,384,"tsne.fit_transform(np.array([[0.0], [0.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,413,tsne.fit_transform(retype(D))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,427,"tsne.fit_transform(sp.csr_matrix([[0, 5], [5, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,441,tsne.fit_transform(bad_dist)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,460,Xt_dense = tsne.fit_transform(D)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,463,Xt_sparse = tsne.fit_transform(D_sparse.asformat(fmt))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,478,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,488,"tsne.fit_transform(np.array([[0.0], [1.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,496,"X_embedded = tsne.fit_transform(np.ones((100, 5)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,509,"tsne.fit(np.zeros((100, 100)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,518,"tsne.fit_transform(np.array([[0.0], [1.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,522,"tsne.fit_transform(np.array([[0.0], [1.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,531,"tsne.fit_transform(np.array([[0.0], [1.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,540,"tsne.fit_transform(np.array([[0.0], [1.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,550,"tsne.fit_transform(np.array([[0.0], [1.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,562,"tsne.fit_transform(np.array([[0.0], [1.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,569,"tsne.fit_transform(sp.csr_matrix([[0, 5], [5, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,578,"tsne.fit_transform(np.array([[0.0], [1.0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,600,X_embedded1 = tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,611,X_embedded2 = tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,634,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,751,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,771,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,781,X_embedded = tsne.fit(X).embedding_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,803,X_embedded = tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,829,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,855,.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,897,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,919,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,965,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1008,Y = tsne.fit_transform(X_2d_grid)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1019,Y = tsne.fit_transform(X_2d_grid)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1027,nn = NearestNeighbors(n_neighbors=1).fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1059,X_embeddeds[method] = tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1085,.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1135,).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1143,).fit_transform(dist_func(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1172,).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1180,).fit_transform(X_precomputed)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1202,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1205,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1222,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1225,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1228,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1245,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1248,tsne.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1259,TSNE(learning_rate=-50.0).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1277,).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_t_sne.py,1285,).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,122,embedded_coordinate = se_precomp.fit_transform(affinity)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,124,embedded_coordinate = se_precomp.fit_transform(affinity.astype(np.float32))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,143,"embed_precomp = se_precomp.fit_transform(rbf_kernel(X, gamma=gamma))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,144,embed_rbf = se_rbf.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,154,nn = NearestNeighbors(n_neighbors=n_neighbors + additional_neighbors).fit(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,163,.fit(graph)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,188,embed_rbf = se_rbf.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,189,embed_callable = se_callable.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,226,embed_amg = se_amg.fit_transform(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,227,embed_arpack = se_arpack.fit_transform(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,242,embed_amg = se_amg.fit_transform(affinity)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,243,embed_arpack = se_arpack.fit_transform(affinity)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,296,km.fit(se.fit_transform(S))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,311,se.fit(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_spectral_embedding.py,320,se.fit(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_locally_linear.py,59,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_locally_linear.py,70,X_reembedded = clf.transform(X + noise)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_locally_linear.py,93,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_locally_linear.py,113,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_locally_linear.py,118,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_locally_linear.py,134,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_locally_linear.py,135,"assert 0.9 < clf.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/manifold/tests/test_locally_linear.py,161,clf.fit(X)  # this previously raised a TypeError
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/_base.py,146,.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/_base.py,198,"self.fit_predict(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/_base.py,290,# fit_predict(X) are always consistent with fit(X).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/_bayesian_mixture.py,331,">>> bgm = BayesianGaussianMixture(n_components=2, random_state=42).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/_bayesian_mixture.py,335,">>> bgm.predict([[0, 0], [9, 3]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/_gaussian_mixture.py,623,">>> gm = GaussianMixture(n_components=2, random_state=0).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/_gaussian_mixture.py,627,">>> gm.predict([[0, 0], [12, 3]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/_gaussian_mixture.py,821,return -2 * self.score(X) * X.shape[0] + self._n_parameters() * np.log(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/_gaussian_mixture.py,838,return -2 * self.score(X) * X.shape[0] + 2 * self._n_parameters()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_mixture.py,18,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_mixture.py,31,estimator.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,83,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,101,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,119,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,125,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,129,"bgmm = BayesianGaussianMixture(n_components=n_components, random_state=rng).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,148,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,154,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,158,bgmm = BayesianGaussianMixture(random_state=rng).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,168,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,174,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,178,"bgmm = BayesianGaussianMixture(n_components=n_components, random_state=rng).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,197,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,203,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,210,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,227,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,242,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,255,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,269,bgmm.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,283,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,294,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,334,current_lower_bound = bgmm.fit(X).lower_bound_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,428,bgmm.fit(rand_data.X[covar_type])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,468,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,476,).fit(X + 100)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,510,Y_pred1 = bgmm1.fit(X).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,511,Y_pred2 = bgmm2.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,519,y_pred1 = gm.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,520,y_pred2 = gm.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,546,bgmm.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,548,bgmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_bayesian_mixture.py,549,Y_pred = bgmm.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,135,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,145,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,154,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,163,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,172,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,180,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,186,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,199,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,227,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,238,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,249,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,254,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,272,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,277,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,324,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,330,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,334,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,353,ecov.fit(X_resp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,369,ecov.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,559,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,588,g.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,590,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,591,Y_pred = g.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,624,# check if fit_predict(X) is equivalent to fit(X).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,626,Y_pred1 = f.fit(X).predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,627,Y_pred2 = g.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,636,y_pred1 = gm.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,637,y_pred2 = gm.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,657,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,710,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,711,ll.append(g.score(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,720,g_best.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,721,"assert_almost_equal(ll.min(), g_best.score(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,745,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,758,.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,759,.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,768,.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,769,.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,783,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,797,.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,807,.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,829,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,862,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,863,h.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,894,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,895,score1 = h.fit(X).score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,896,score2 = h.fit(X).score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,923,g.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,926,h.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,931,h.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,953,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,981,gmm1.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,986,gmm1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,987,gmm_score = gmm1.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,998,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,999,assert gmm2.score(X) > gmm1.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,1024,gmm_score_samples = gmm.fit(X).score_samples(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,1053,current_log_likelihood = gmm.fit(X).score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,1089,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,1091,gmm.set_params(reg_covar=1e-6).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,1107,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,1133,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,1187,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,1190,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/mixture/tests/test_gaussian_mixture.py,1246,gmm.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,364,>>> print(scaler.fit(data))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,368,>>> print(scaler.transform(data))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,373,">>> print(scaler.transform([[2, 2]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,622,X = s.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,624,X = s.fit_transform(X.T).T
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,750,>>> print(scaler.fit(data))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,754,>>> print(scaler.transform(data))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,759,">>> print(scaler.transform([[2, 2]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1107,>>> transformer = MaxAbsScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1110,>>> transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1334,X = s.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1336,X = s.fit_transform(X.T).T
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1445,>>> transformer = RobustScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1448,>>> transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1723,X = s.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1725,X = s.fit_transform(X.T).T
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1901,>>> transformer = Normalizer().fit(X)  # fit does nothing.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,1904,>>> transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,2069,>>> transformer = Binarizer().fit(X)  # fit does nothing.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,2072,>>> transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,2201,>>> transformer = KernelCenterer().fit(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,2204,>>> transformer.transform(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,2448,>>> qt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,2917,return n.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,2919,return n.fit_transform(X.T).T
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,3011,>>> print(pt.fit(data))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,3015,>>> print(pt.transform(data))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,3092,X = self._scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,3094,self._scaler.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,3123,X = self._scaler.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_data.py,3424,return pt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,317,>>> enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,321,">>> enc.transform([['Female', 1], ['Male', 4]]).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,332,>>> drop_enc = OneHotEncoder(drop='first').fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,335,">>> drop_enc.transform([['Female', 1], ['Male', 2]]).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,341,>>> drop_binary_enc = OneHotEncoder(drop='if_binary').fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,342,">>> drop_binary_enc.transform([['Female', 1], ['Male', 2]]).toarray()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,469,Equivalent to fit(X).transform(X) but more convenient.
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,488,"return super().fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,812,>>> enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_encoders.py,816,">>> enc.transform([['Female', 3], ['Male', 1]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_discretization.py,116,>>> est.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_discretization.py,118,>>> Xt = est.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_discretization.py,225,"centers = km.fit(column[:, None]).cluster_centers_[:, 0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_discretization.py,254,"self._encoder.fit(np.zeros((1, len(self.n_bins_))))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_discretization.py,338,Xt_enc = self._encoder.transform(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_polynomial.py,122,>>> poly.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_polynomial.py,127,>>> poly.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_polynomial.py,377,return self.transform(X.tocsc()).tocsr()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_polynomial.py,398,return self.transform(X.tocsr()).tocsc()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_polynomial.py,607,>>> spline.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,62,">>> le.fit([1, 2, 2, 6])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,66,">>> le.transform([1, 1, 2, 6])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,75,">>> le.fit([""paris"", ""paris"", ""tokyo"", ""amsterdam""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,79,">>> le.transform([""tokyo"", ""tokyo"", ""paris""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,227,">>> lb.fit([1, 2, 6, 4, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,231,">>> lb.transform([1, 6])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,238,">>> lb.fit_transform(['yes', 'no', 'no', 'yes'])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,247,">>> lb.fit(np.array([[0, 1, 1], [1, 0, 0]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,251,">>> lb.transform([0, 1, 2, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,324,return self.fit(y).transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,704,">>> mlb.fit_transform([(1, 2), (3,)])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,710,">>> mlb.fit_transform([{'sci-fi', 'thriller'}, {'comedy'}])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,719,">>> mlb.fit(['sci-fi', 'thriller', 'comedy'])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,728,">>> mlb.fit([['sci-fi', 'thriller', 'comedy']])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_label.py,789,return self.fit(y).transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_function_transformer.py,103,>>> transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/_function_transformer.py,135,X_round_trip = self.inverse_transform(self.transform(X[idx_selected]))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_common.py,72,Xt = est.fit(X_train).transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_common.py,80,Xt_class = est.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_common.py,100,"est.fit(_get_valid_samples_by_column(X_train, i))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_common.py,103,"Xt_col = est.transform(X_test[:, [i]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_common.py,108,"Xt_col_nonan = est.transform(_get_valid_samples_by_column(X_test, i))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_common.py,116,Xt_dense = est_dense.fit(X_train).transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_common.py,134,Xt_sp = est_sparse.fit(X_train_sp).transform(X_test_sp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_common.py,177,X_trans = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_common.py,178,X_df_trans = est.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,43,got = lb.fit_transform(inp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,50,got = lb.fit_transform(inp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,60,got = lb.fit_transform(inp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,72,got = lb.fit_transform(inp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,82,"got = lb.fit_transform([""b"", ""d"", ""e""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,88,"got = lb.transform([""a"", ""b"", ""c"", ""d"", ""e"", ""f""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,98,got = lb.fit_transform(inp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,115,got = lb.fit_transform(inp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,124,lb = LabelBinarizer().fit(one_class)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,128,lb.transform(multi_label)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,132,lb.transform([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,156,LabelBinarizer().fit_transform(y_seq_of_seqs)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,178,"LabelBinarizer().fit(np.array([[1, 3], [2, 1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,208,le.fit(values)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,210,"assert_array_equal(le.transform(values), [1, 0, 2, 0, 2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,213,ret = le.fit_transform(values)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,217,le.transform(unknown)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,222,"le.fit([1, 1, 4, 5, -1, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,224,"assert_array_equal(le.transform([0, 1, 4, 4, 5, -1, -1]), [1, 2, 3, 3, 4, 0, 0])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,229,"le.transform([0, 6])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,235,"le.fit(np.array([""apple"", ""orange""], dtype=dtype))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,238,"le.transform(""apple"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,245,le.transform([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,251,"le.fit([1, 2, 3, -1, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,275,le.fit(values)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,277,transformed = le.transform([])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,298,got = mlb.fit_transform(inp())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,310,got = mlb.fit(inp()).transform(inp())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,336,got = mlb.fit_transform(inp())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,343,got = mlb.fit(inp()).transform(inp())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,353,"assert_array_equal(mlb.fit_transform(y), Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,362,"matrix = mlb.fit(y).transform([[4, 1], [2, 0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,367,"matrix = mlb.fit(y).transform([[4, 1], [2, 0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,376,"assert_array_equal(mlb.fit_transform(inp), indicator_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,379,# fit().transform()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,381,"assert_array_equal(mlb.fit(inp).transform(inp), indicator_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,387,"mlb.fit_transform(inp), np.hstack(([[0], [0], [0]], indicator_mat))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,394,"assert_array_equal(mlb.fit(inp).transform(inp), indicator_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,403,mlb.fit(inp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,414,"assert_array_equal(mlb.fit_transform(inp), indicator_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,417,"assert_array_equal(mlb.fit_transform(inp), indicator_mat2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,426,"assert_array_equal(mlb.fit_transform(inp), indicator_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,429,# fit().transform()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,431,"assert_array_equal(mlb.fit(inp).transform(inp), indicator_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,447,"assert_array_equal(mlb.fit_transform(inp), indicator_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,452,# fit().transform()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,454,"assert_array_equal(mlb.fit(inp).transform(inp), indicator_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,461,"mlb.fit_transform([({}), ({}, {""a"": ""b""})])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,468,"assert_array_equal(mlb.fit_transform(inp), indicator_mat)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,474,mlb.fit_transform(inp)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_label.py,548,binarized = lb.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,26,X_trans_sparse = enc_sparse.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,27,X_trans_dense = enc_dense.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,49,oh.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,51,oh.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,55,oh.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,58,"oh.transform(X2_passed).toarray(),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,67,oh.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,79,enc.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,90,oh.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,93,"oh.transform(X2_passed).toarray(),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,107,"assert_array_equal(oh.fit_transform(X).toarray(), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,108,"assert_array_equal(oh.fit(X).transform(X).toarray(), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,111,"assert_array_equal(oh.fit_transform(X), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,112,"assert_array_equal(oh.fit(X).transform(X), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,123,"assert_array_equal(oh.fit_transform(X_df).toarray(), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,124,"assert_array_equal(oh.fit(X_df).transform(X_df).toarray(), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,127,"assert_array_equal(oh.fit_transform(X_df), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,128,"assert_array_equal(oh.fit(X_df).transform(X_df), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,143,enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,204,enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,217,"assert oh.fit_transform(X).toarray().shape == (2, 4)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,220,"assert oh.fit_transform(X).toarray().shape == (2, 5)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,225,Xtr1 = enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,228,Xtr2 = enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,266,"Xtr = OneHotEncoder(categories=""auto"").fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,275,X_tr = enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,281,X_tr = enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,294,X_tr = enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,304,X_tr = enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,336,enc = OneHotEncoder(sparse=sparse_).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,352,X_tr = ohe.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,365,ohe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,366,X_tr = ohe.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,370,"assert_allclose(ohe.transform(X), X_tr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,432,enc.fit(Xi)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,504,"assert_array_equal(enc.fit_transform(X).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,515,enc.fit(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,518,"assert_array_equal(enc.fit(X2).transform(X2).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,526,"assert_array_equal(enc.fit(X).transform(X).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,527,"assert_array_equal(enc.fit_transform(X).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,536,enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,542,enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,550,"assert_array_equal(enc.fit_transform(X).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,583,ohe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,599,result = ohe.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,609,result = ohe.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,626,"assert_array_equal(enc.fit_transform(X), exp.astype(""float64""))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,628,"assert_array_equal(enc.fit_transform(X), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,658,"assert_array_equal(enc.fit_transform(X), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,669,enc.fit(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,675,X_tr = enc.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,690,enc.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,692,X_trans_enc = enc.transform(X_trans)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,706,enc.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,708,X_trans_enc = enc.transform(X_trans)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,758,encoder.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,767,enc.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,768,"X_trans = enc.transform([[1], [2], [4]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,781,enc.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,792,enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,807,enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,809,"assert_array_equal(enc.transform(X).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,812,enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,814,"assert_array_equal(enc.transform(X).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,817,enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,819,"assert_array_equal(enc.transform(X).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,833,enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,835,"assert_array_equal(enc.transform(X).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,839,enc.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,841,"assert_array_equal(enc.transform(X).toarray(), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,859,trans = enc.fit_transform(X).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,910,enc.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,918,"enc.fit([[""abc"", 2, 55], [""def"", 1, 55], [""def"", 3, 59]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,927,ohe_base.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,928,ohe_test.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,949,enc = OneHotEncoder().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,971,"ohe = OneHotEncoder(categories=categories, sparse=False).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,976,X_trans = ohe.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,981,oe = OrdinalEncoder(categories=categories).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,982,X_trans = oe.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,995,"ohe = OneHotEncoder(sparse=False, handle_unknown=""ignore"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1050,df_trans = ohe.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1063,X_trans = ohe.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1084,X_trans = ohe.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1097,X_trans = ohe.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1118,X_trans = ohe.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1138,ohe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1148,X_trans = ohe.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1164,oe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1171,oe = OrdinalEncoder().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1176,X_trans = oe.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1201,oe = OrdinalEncoder().fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1206,df_trans = oe.transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1257,"assert_array_equal(oe.fit_transform(X), exp)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1266,oe.fit(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1299,X_trans = oe.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1302,"assert_allclose(oe.transform(X_test), [[-1.0]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1317,encoder.fit(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1319,encoder.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1321,X_trans = encoder.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1337,oe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1341,oe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1366,enc.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1368,X_trans = enc.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1386,encoder = OrdinalEncoder().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_encoders.py,1388,X_trans = encoder.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,26,"FunctionTransformer(_make_func(args_store, kwargs_store)).transform(X),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,45,).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,66,"FunctionTransformer(np.log1p).transform(X),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,77,"assert_array_equal(F.transform(X), np.around(X, decimals=3))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,88,"assert_array_equal(F.transform(X), np.around(X, decimals=1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,99,"assert_array_equal(F.transform(X), np.around(X, decimals=1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,112,"F.inverse_transform(F.transform(X)),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,141,trans.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,151,Xt = trans.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,161,trans.fit(X_dense)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,167,trans.fit(X_dense)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,175,X_df_trans = transformer.fit_transform(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_function_transformer.py,196,X_trans = trans.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,27,assert is_c_contiguous(est().fit_transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,28,"assert is_c_contiguous(est(order=""C"").fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,29,"assert np.isfortran(est(order=""F"").fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,90,SplineTransformer(**params).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,99,"st1 = SplineTransformer(degree=3, knots=knots, n_knots=None).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,101,"st2 = SplineTransformer(degree=3, knots=knots, n_knots=None).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,113,).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,122,"splt = SplineTransformer(n_knots=3, degree=3, include_bias=True).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,140,"splt = SplineTransformer(n_knots=3, degree=3, include_bias=False).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,182,splt.fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,184,"assert_allclose(np.sum(splt.transform(X), axis=1), 1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,206,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,207,"assert_allclose(pipe.predict(X), y, rtol=1e-3)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,262,splt.fit(X_1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,264,"assert_allclose(splt.transform(X_1), splt.transform(X_2))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,289,"pipe.fit(X, f(X[:, 0]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,293,predictions = pipe.predict(X_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,311,Xt = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,338,Xt_1 = transformer_1.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,339,Xt_2 = transformer_2.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,354,Xt = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,406,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,407,"assert_allclose(pipe.predict([[-10], [5]]), [-1, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,424,"pipe.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,425,"assert_allclose(pipe.predict([[-10], [5]]), [-10, 5])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,431,splt.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,433,splt.transform([[-10]])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,435,splt.transform([[5]])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,448,splines = splt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,451,kbins = kbd.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,465,splt.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,467,assert splt.transform(X).shape[1] == splt.n_features_out_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,487,PolynomialFeatures(**params).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,528,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,529,out = tf.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,602,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,603,out = tf.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,616,"poly = PolynomialFeatures(degree=2, include_bias=True).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,622,assert len(feature_names) == poly.transform(X).shape[1]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,624,"poly = PolynomialFeatures(degree=3, include_bias=False).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,650,assert len(feature_names) == poly.transform(X).shape[1]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,652,"poly = PolynomialFeatures(degree=(2, 3), include_bias=False).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,675,assert len(feature_names) == poly.transform(X).shape[1]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,679,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,682,assert len(feature_names) == poly.transform(X).shape[1]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,685,"poly = PolynomialFeatures(degree=1, include_bias=True).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,711,Xt_csc = est.fit_transform(X_csc.astype(dtype))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,712,Xt_dense = est.fit_transform(X.astype(dtype))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,738,Xt_csr = est.fit_transform(X_csr.astype(dtype))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,739,"Xt_dense = est.fit_transform(X.astype(dtype, copy=False))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,768,est.fit(x)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,797,Xt_csr = est.fit_transform(X_csr.astype(dtype))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,798,Xt_dense = est.fit_transform(X.astype(dtype))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,828,Xt_csr = est.fit_transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,829,Xt_dense = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,849,Xt_csr = est.fit_transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,850,Xt_dense = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,877,Xt_csr = est.fit_transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,878,Xt_dense = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,895,PolynomialFeatures().fit(X).n_input_features_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_polynomial.py,902,poly = Transformer().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,27,est.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,28,"assert_array_equal(expected, est.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,32,KBinsDiscretizer(n_bins=2).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,33,KBinsDiscretizer(n_bins=np.array([2])[0]).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,34,assert KBinsDiscretizer(n_bins=2).fit(X).n_bins_.dtype == np.dtype(int)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,44,est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,52,est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,61,est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,68,est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,79,est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,90,est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,104,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,105,"assert_array_equal(expected, est.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,121,est.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,124,Xt = est.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,132,est.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,135,"est.fit(X.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,137,est.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,147,"Xt = KBinsDiscretizer(n_bins=2, encode=""ordinal"").fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,159,est.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,163,"est = KBinsDiscretizer(n_bins=[2, 3, 3, 3], encode=""ordinal"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,164,Xt_1 = est.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,165,"est = KBinsDiscretizer(n_bins=[2, 3, 3, 3], encode=""onehot-dense"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,166,Xt_2 = est.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,171,").fit_transform(Xt_1),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,174,"est = KBinsDiscretizer(n_bins=[2, 3, 3, 3], encode=""onehot"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,175,Xt_3 = est.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,179,.fit_transform(Xt_1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,193,est.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,211,Xt = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,216,Xt = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,221,Xt = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,260,Xt = kbd.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,269,kbd.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,272,X2t = kbd.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,282,Xt = est.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,299,kbd.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,310,kbd.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,313,"assert_array_almost_equal(kbd.transform(X), Xt)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,326,kbd.fit(X_input)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,328,kbd.fit(X_input)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,338,Xt = kbd.transform(X_input)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,351,kbd_32.fit(X_input)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,352,Xt_32 = kbd_32.transform(X_input)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,356,kbd_64.fit(X_input)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_discretization.py,357,Xt_64 = kbd_64.transform(X_input)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,108,"scaler.fit(X, y, sample_weight=sample_weight_notOK)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,141,"scaler_w.fit(Xw, yw, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,146,"scaler.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,152,"assert_almost_equal(scaler.transform(X_test), scaler_w.transform(X_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,159,"X_scaled = scaler.fit(X).transform(X, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,184,"X_scaled = scaler.fit(X).transform(X, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,213,"X_scaled = scaler.fit(X, sample_weight=sample_weight).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,248,"X_scaled = scaler.fit(X, **fit_params).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,293,scaler = StandardScaler(with_mean=False).fit(X_array)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,387,"X_scaled = scaler.fit(X).transform(X, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,412,"X_scaled = scaler.fit(X).transform(X, copy=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,422,"X_scaled = scaler.fit(X).transform(X, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,438,scaler = StandardScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,439,X_scaled = scaler.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,442,X_scaled_f64 = StandardScaler().fit_transform(X.astype(np.float64))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,471,scaler_batch = MinMaxScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,486,scaler_batch = MinMaxScaler().fit(X[batch0])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,497,scaler_batch = MinMaxScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,519,scaler_batch = StandardScaler(with_std=False).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,545,scaler_batch = StandardScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,572,scaler_batch = StandardScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,594,scaler = StandardScaler(with_mean=False).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,621,"X_null = null_transform.partial_fit(X, sample_weight=sample_weight).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,642,scaled_batch = StandardScaler().fit_transform(X_sofar)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,645,scaled_batch = StandardScaler().fit_transform(
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,651,scaled_incr = scaler_incr.transform(X_sofar)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,687,scaler.fit(x)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,699,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,707,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,715,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,724,scaler.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,735,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,741,X_trans_new = scaler.transform(X_new)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,747,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,770,X_scaled = scaler.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,790,X_scaled = scaler.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,816,StandardScaler().fit(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,818,StandardScaler().fit(X_csc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,821,X_null = null_transform.fit_transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,826,"scaler = StandardScaler(with_mean=False).fit(X, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,827,"X_scaled = scaler.transform(X, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,830,"scaler_csr = StandardScaler(with_mean=False).fit(X_csr, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,831,"X_csr_scaled = scaler_csr.transform(X_csr, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,834,"scaler_csc = StandardScaler(with_mean=False).fit(X_csc, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,835,"X_csc_scaled = scaler_csc.transform(X_csc, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,893,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,913,X_trans_dense = transformer_dense.fit_transform(X_dense)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,916,X_trans_csr = transformer_csr.fit_transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,919,X_trans_csc = transformer_csc.fit_transform(X_csc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,939,transformer_dense.fit(X_dense)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,940,transformer_csr.fit(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,941,transformer_csc.fit(X_csc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,960,X_null = null_transform.fit_transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,966,scaler = StandardScaler(with_mean=False).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,967,"X_scaled = scaler.transform(X, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,971,scaler_csr = StandardScaler(with_mean=False).fit(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,972,"X_csr_scaled = scaler_csr.transform(X_csr, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,976,scaler_csc = StandardScaler(with_mean=False).fit(X_csc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,977,"X_csc_scaled = scaler_csc.transform(X_csc, copy=True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1028,StandardScaler(copy=False).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1032,"StandardScaler(with_mean=False, copy=False).fit(X_csr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1036,"StandardScaler(with_mean=False, copy=False).fit(X_csc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1050,StandardScaler(with_mean=True).fit(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1055,StandardScaler(with_mean=True).fit(X_csc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1058,scaler = StandardScaler(with_mean=True).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1060,scaler.transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1062,scaler.transform(X_csc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1064,X_transformed_csr = sparse.csr_matrix(scaler.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1068,X_transformed_csc = sparse.csc_matrix(scaler.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1087,scaler.fit(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1099,scaler.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1119,scaler.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1122,X_trans = scaler.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1133,X_scaled = scaler.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1155,scaler_sparse.fit(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1156,scaler_dense.fit(X_dense)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1167,scaler = scaler.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1168,row_trans = scaler.transform(sparse.csr_matrix(single_row))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1178,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1190,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1203,X_trans = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1208,X_trans = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1214,X_sparse_tran = transformer.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1239,QuantileTransformer(n_quantiles=0).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1242,QuantileTransformer(subsample=0).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1249,QuantileTransformer(subsample=10).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1254,transformer.fit(X_neg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1255,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1258,transformer.transform(X_neg)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1276,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1279,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1280,X_tran = transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1287,transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1297,transformer.transform(10)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1302,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1319,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1322,X_trans = transformer.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1331,X_trans = transformer.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1352,X_trans = transformer.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1363,X_trans = transformer.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1374,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1378,X_trans = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1394,"assert_array_almost_equal(transformer.transform(X_test), X_expected)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1418,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1437,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1466,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1468,X_trans = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1475,transformer_dense = QuantileTransformer(n_quantiles=10).fit(X.toarray())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1477,X_trans = transformer_dense.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1500,"X_trans = QuantileTransformer(n_quantiles=3, random_state=0).fit_transform(X_dense)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1502,"X_trans_sp = QuantileTransformer(n_quantiles=3, random_state=0).fit_transform("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1512,transformer = QuantileTransformer(n_quantiles=3).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1513,X_trans = transformer.transform(X1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1519,transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1520,assert transformer.transform([[-10]]) == transformer.transform([[np.min(X)]])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1521,assert transformer.transform([[10]]) == transformer.transform([[np.max(X)]])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1535,X_trans = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1544,transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1563,qt = QuantileTransformer(n_quantiles=n_quantiles).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1583,scaler.fit(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1645,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1660,X_trans_new = scaler.transform(X_new)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1673,"robust_scaler = RobustScaler(quantile_range=quantile_range, unit_variance=True).fit("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1676,X_trans = robust_scaler.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1688,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1701,X_trans_new = scaler.transform(X_new)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1713,X_trans_csr = scaler.fit_transform(X_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1714,X_trans_csc = scaler.fit_transform(X_csc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1739,X_trans = scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1753,scaler = scaler.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1754,X_trans = scaler.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1766,X_scaled = scaler.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1784,X_scaled = scaler.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1802,scaler_batch = MaxAbsScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1823,"assert_array_almost_equal(scaler_batch.transform(X), scaler_incr.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1827,scaler_batch = MaxAbsScaler().fit(X[batch0])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1833,"assert_array_almost_equal(scaler_batch.transform(X), scaler_incr.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1836,scaler_batch = MaxAbsScaler().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1870,X_norm = normalizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1875,X_norm = normalizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1888,"X_norm = normalizer = Normalizer(norm=""l2"", copy=False).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1919,X_norm1 = normalizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1924,X_norm2 = normalizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1936,"X_norm = normalizer = Normalizer(norm=""l2"", copy=False).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1967,X_norm1 = normalizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1972,X_norm2 = normalizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,1985,"X_norm = normalizer = Normalizer(norm=""l2"", copy=False).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2010,X_norm = normalizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2073,X_bin = toarray(binarizer.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2076,X_bin = binarizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2079,binarizer = Binarizer(copy=True).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2080,X_bin = toarray(binarizer.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2086,X_bin = binarizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2093,X_bin = binarizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2099,X_bin = binarizer.transform(X_float)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2111,X_bin = toarray(binarizer.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2114,X_bin = binarizer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2118,binarizer.transform(sparse.csc_matrix(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2127,scaler.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2128,X_fit_centered = scaler.transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2134,K_fit_centered2 = centerer.fit_transform(K_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2140,X_pred_centered = scaler.transform(X_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2142,K_pred_centered2 = centerer.transform(K_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2184,phi_X_center = scaler.fit_transform(phi_X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2185,phi_X_test_center = scaler.transform(phi_X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2194,kernel_centerer.fit(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2196,"assert_allclose(kernel_centerer.transform(K), K_center)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2197,"assert_allclose(kernel_centerer.transform(K_test), K_test_center)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2208,"assert_allclose(kernel_centerer.transform(K), K_centered)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2216,"assert_allclose(kernel_centerer.transform(K_test), K_test_centered)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2256,X_transformed = obj.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2257,X_transformed2 = obj.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2300,scaler.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2303,scaler.fit_transform(X_2d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2320,pt.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2333,X_trans = pt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2343,X_trans = pt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2367,X_trans_class = pt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2393,pt.fit(np.abs(X_2d))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2398,pt.transform(X_with_negatives)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2401,pt.fit(X_with_negatives)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2407,pt.transform(np.zeros(X_2d.shape))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2410,pt.fit(np.zeros(X_2d.shape))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2426,pt.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2435,"pt.transform(X[:, 0:1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2448,pt.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2457,X_trans = pt.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2467,X_trans = pt.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2497,X_inv_trans = pt.fit_transform(X_inv)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2509,"lmbda = PowerTransformer(method=""yeo-johnson"").fit(X).lambdas_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2520,pt.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2527,pt.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2532,X_trans = pt.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2539,# check that fit_transform() and fit().transform() return the same values
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2545,"assert_array_almost_equal(pt.fit(X).transform(X), pt.fit_transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2563,pt.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2565,X_trans = pt.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2568,X_trans = pt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2591,pt.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2594,X_trans = pt.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2599,X_trans = pt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2618,scaler.fit(X_1).partial_fit(X_2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2626,"scaler = MinMaxScaler(feature_range=feature_range, clip=True).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2629,X_transformed = scaler.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2642,scaler = StandardScaler().fit(X_2d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2661,tr = Transformer().fit(iris.data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/preprocessing/tests/test_data.py,2682,tr = Transformer().fit(df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_search.py,521,return self.best_estimator_.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_search.py,612,return self.best_estimator_.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_search.py,926,"self.best_estimator_.fit(X, y, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_search.py,928,"self.best_estimator_.fit(X, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_search.py,1349,">>> clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_search.py,1726,">>> search = clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_validation.py,679,"estimator.fit(X_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_validation.py,681,"estimator.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_validation.py,953,y = le.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_validation.py,957,"y_enc[:, i_label] = LabelEncoder().fit_transform(y[:, i_label])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_validation.py,1043,"estimator.fit(X_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_validation.py,1045,"estimator.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_validation.py,1329,"estimator.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_search_successive_halving.py,262,"super().fit(X, y=y, groups=groups, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_search_successive_halving.py,674,"...                              random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/_search_successive_halving.py,1016,"...                                random_state=0).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,171,"return super().fit(X_subset, y_subset)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,280,"assert_array_equal(scores, clf.score(X, y2))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,285,"assert_array_equal(scores, clf.score(X_sparse, multioutput_y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,288,"assert_array_equal(scores, clf.score(X_sparse, y2))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,292,"assert_array_equal(scores, clf.score(X_sparse, multioutput_y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,430,"est = clone(reg).fit(X[train], y[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,514,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,914,"est.fit(X[train], y[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,915,preds2[test] = est.predict(X[test])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,1759,"est = clone(est).fit(X[train], y[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,1785,"est = clone(est).fit(X[train], y_enc[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,1830,"est = clone(est).fit(X[train], y_enc[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,1974,"est.fit(X[train], y[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,2023,y = le.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,2115,assert failing_clf.score() == 0.0  # FailingClassifier coverage
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,2178,"clf = LogisticRegression(max_iter=5).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,2210,"clf = LogisticRegression(max_iter=5).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,2324,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_validation.py,2330,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,195,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,202,"grid_search.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,205,grid_search.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,210,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,218,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,242,"searcher.fit(X, y, spam=np.ones(10))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,246,"searcher.fit(X, y, spam=np.ones(1), eggs=np.zeros(10))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,247,"searcher.fit(X, y, spam=np.ones(10), eggs=np.zeros(10))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,258,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,262,"grid_search_no_score.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,267,"assert grid_search.score(X, y) == grid_search_no_score.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,272,grid_search_no_score.fit([[1]])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,280,"search_no_scoring = GridSearchCV(clf, grid, scoring=None).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,281,"search_accuracy = GridSearchCV(clf, grid, scoring=""accuracy"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,284,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,285,"search_auc = GridSearchCV(clf, grid, scoring=""roc_auc"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,289,"score_no_scoring = search_no_scoring.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,290,"score_accuracy = search_accuracy.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,291,"score_no_score_auc = search_no_score_method_auc.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,292,"score_auc = search_auc.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,324,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,325,"gs.fit(X, y, groups=groups)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,331,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,341,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,346,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,355,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,363,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,367,"random_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,376,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,407,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,417,"cv.fit(X_[:180], y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,426,"cv.fit(X_, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,429,"clf.fit(X_, y_)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,439,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,486,"cv.fit(X_[:180], y_[:180])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,487,y_pred = cv.predict(X_[180:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,493,"cv.fit(X_[:180].tocoo(), y_[:180])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,494,y_pred2 = cv.predict(X_[180:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,506,"cv.fit(X_[:180], y_[:180])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,507,y_pred = cv.predict(X_[180:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,513,"cv.fit(X_[:180], y_[:180])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,514,y_pred2 = cv.predict(X_[180:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,520,"# np.testing.assert_allclose(f1_score(cv.predict(X_[:180]), y[:180]),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,521,"#                            cv.score(X_[:180], y[:180]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,529,"cv.fit(X_[:180], y_[:180])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,530,y_pred3 = cv.predict(X_[180:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,548,"cv.fit(K_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,556,y_pred = cv.predict(K_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,563,"cv.fit(K_train.tolist(), y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,574,"cv.fit(K_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,602,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,626,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,643,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,671,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,697,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,722,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,746,"grid_search.fit(X_4d, y_3d).score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,761,"grid_search.fit(X.tolist(), y).score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,776,"grid_search.fit(X, y.tolist()).score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,807,"grid_search.fit(X_df, y_ser).score(X_df, y_ser)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,808,grid_search.predict(X_df)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,823,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,831,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,836,grid_search.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,852,search.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,953,"search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1026,"search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1081,"search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1144,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1177,"random_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1238,"assert_almost_equal(search_multi.score(X, y), search_acc.score(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1257,"search_cv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1306,"search_cv.fit(X, y_true)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1328,"search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1360,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1388,"search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1413,"cv_results = grid_search.fit(X, y).cv_results_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1433,"clf.fit(X[train], y[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1435,"correct_score = f1_score(y[test], clf.predict(X[test]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1446,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1448,"assert_array_almost_equal(grid_search.predict(X), grid_search_pickled.predict(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1453,"random_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1456,"random_search.predict(X), random_search_pickled.predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1476,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1482,"est.fit(X[train], y[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1483,"correct_score = est.score(X[test], y[test])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1492,"random_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1498,"est.fit(X[train], y[train])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1499,"correct_score = est.score(X[test], y[test])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1511,"gs = GridSearchCV(clf, {}, cv=2).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1526,"GridSearchCV(p, {""classifier__foo_param"": [1, 2, 3]}, cv=2).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1577,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1613,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1649,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1707,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1720,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1730,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1745,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1753,"gs2.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1766,"gs3.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1774,"gs4.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1810,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1832,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1833,X_round_trip = grid_search.inverse_transform(grid_search.transform(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1853,"return GridSearchCV(clf, param_grid, return_train_score=True).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1871,"mycv = CustomSearchCV(clf, return_train_score=True).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1897,"NoRunSearchSearchCV(SVC()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1905,"BadSearchCV(SVC()).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1930,"ridge.fit(X[:train_size], y[:train_size])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1955,"ridge.fit(X[:train_size], y[:train_size])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,1999,"grid.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2011,y_pred = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2019,"search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2025,y_pred = search.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2027,"assert search.score(X, y) == pytest.approx(cm[0, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2033,y_pred = est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2048,"search_callable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2049,"search_str.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2053,"assert search_callable.score(X, y) == pytest.approx(search_str.score(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2059,y_pred = est.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2071,"search_callable.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2072,"search_str.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2073,"search_list_str.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2077,"assert search_callable.score(X, y) == pytest.approx(search_str.score(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2081,"assert search_list_str.score(X, y) == pytest.approx(search_str.score(X, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2102,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2128,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2154,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2168,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2169,"rs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2229,"cv.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2230,preds_original = cv.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2236,"cv.fit(X_precomputed, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2237,preds_precomputed = cv.predict(X_precomputed)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2263,"model.fit(X, y, r=42)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2295,"super().fit(X, y, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2320,"model.fit(X_train, y_train, **fit_params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2343,"search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2347,y_pred = search.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2350,"assert search.score(X, y) == pytest.approx(accuracy_score(y, y_pred))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2353,"assert search.score(X, y) == pytest.approx(r2_score(y, y_pred))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_search.py,2371,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,108,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,170,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,217,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,232,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,247,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,260,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,290,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,319,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,363,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,387,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,503,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,593,"return super().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,597,return super().predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,621,"sh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,670,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,671,"gs.fit(X, y, groups=groups)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,677,"gs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/model_selection/tests/test_successive_halving.py,691,"search.fit(X, [])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_factor_analysis.py,157,>>> X_transformed = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_nmf.py,1326,>>> W = model.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_nmf.py,1667,"self.fit_transform(X, **params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_sparse_pca.py,117,>>> transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_sparse_pca.py,119,>>> X_transformed = transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_sparse_pca.py,340,>>> transformer.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_sparse_pca.py,342,>>> X_transformed = transformer.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_kernel_pca.py,224,>>> X_transformed = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_kernel_pca.py,309,K = self._centerer.fit_transform(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_kernel_pca.py,456,"self.fit(X, **params)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_kernel_pca.py,484,"K = self._centerer.transform(self._get_kernel(X, self.X_fit_))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_incremental_pca.py,176,>>> X_transformed = transformer.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_incremental_pca.py,379,>>> ipca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_incremental_pca.py,381,>>> ipca.transform(X) # doctest: +SKIP
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_incremental_pca.py,389,output.append(super().transform(X[batch].toarray()))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_incremental_pca.py,392,return super().transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_fastica.py,428,>>> X_transformed = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_pca.py,160,"fit(X).transform(X) will not yield the expected results,"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_pca.py,322,>>> pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_pca.py,330,>>> pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_pca.py,338,>>> pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_truncated_svd.py,132,>>> svd.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_truncated_svd.py,173,self.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_dict_learning.py,155,"lasso_lars.fit(dictionary.T, X.T, Xy=cov)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_dict_learning.py,179,"clf.fit(dictionary.T, X.T, check_input=check_input)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_dict_learning.py,196,"lars.fit(dictionary.T, X.T, Xy=cov)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_dict_learning.py,1222,>>> coder.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_dict_learning.py,1485,>>> X_transformed = dict_learner.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_dict_learning.py,1761,>>> X_transformed = dict_learner.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_lda.py,313,>>> lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/_lda.py,316,>>> lda.transform(X[-2:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,50,"dico = DictionaryLearning(n_components, random_state=0).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,54,"dico = DictionaryLearning(n_components, random_state=0).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,56,"assert dico.transform(X).shape == (X.shape[0], n_components)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,61,"dico = DictionaryLearning(n_components, random_state=0).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,111,model.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,118,model.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,149,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,151,code = dico.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,171,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,187,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,192,dico.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,200,code = dico.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,204,code = dico.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,221,code = dico.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,225,code = dico.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,240,code = dico.fit(X_read_only).transform(X_read_only)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,254,"code = dico.fit(X).transform(X[np.newaxis, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,258,"code = dico.transform(X[np.newaxis, 1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,266,dico.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,274,code = dico.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,276,split_code = dico.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,322,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,324,code = dico.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,345,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,390,dico.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,394,dico.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,410,dico.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,416,"dico = MiniBatchDictionaryLearning(n_components, n_iter=20, random_state=0).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,426,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,437,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,453,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,475,dict1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,563,).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,583,"np.testing.assert_allclose(cloned.transform(data), coder.transform(data))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,602,sc.fit_transform(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_dict_learning.py,666,dl.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,87,X = pca.fit_transform(m.T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,118,sources = ica.fit_transform(m.T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,123,"assert_array_almost_equal(sources, ica.transform(m.T))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,130,ica.fit(m.T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,133,FastICA(fun=range(10)).fit(m.T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,143,ica.fit(m)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,174,ica.fit(m.T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,229,Xt = ica.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,234,ica.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,236,Xt2 = ica.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_fastica.py,260,Xt = ica.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,31,"Xa = svd_a.fit_transform(X)[:, :6]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,32,"Xr = svd.fit_transform(X)[:, :6]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,45,tsvd = TruncatedSVD(n_components).fit(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,56,tsvd.fit(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,64,Xtrans = tsvd.fit_transform(Xfmt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,66,Xtrans = tsvd.transform(Xfmt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,75,Xt = tsvd.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,84,Xtrans = tsvd.fit_transform(Xint)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,94,X_tr = svd.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,116,"svd_10 = TruncatedSVD(10, algorithm=solver, n_iter=10).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,117,"svd_20 = TruncatedSVD(20, algorithm=solver, n_iter=10).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,139,"pca = TruncatedSVD(n_components=2, algorithm=solver, random_state=rng).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,142,X_pca = pca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,165,X_pca = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,172,pca.fit(X_hat_pca)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,188,Xt_svd = svd.fit_transform(X_c)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,189,Xt_pca = pca.fit_transform(X_c)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,201,# fit_transform(X) should equal fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,206,X_transformed_1 = svd.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_truncated_svd.py,207,X_transformed_2 = svd.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,30,"NMF(solver=solver, max_iter=1).fit(A)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,49,"NMF(solver=name, init=init).fit(A)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,52,NMF(init=name).fit(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,58,"NMF(regularization=name, init=init).fit(A)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,62,"NMF(solver=""mu"", init=init, beta_loss=name).fit(A)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,65,"NMF(solver=""cd"", init=init, beta_loss=1.0).fit(A)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,69,NMF(init=init).fit(-A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,72,"clf = NMF(2, tol=0.1, init=init).fit(A)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,74,clf.transform(-A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,82,"NMF(3, init=init).fit(A)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,130,transf = model.fit_transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,146,assert pnmf.fit(X).reconstruction_err_ < 0.1
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,161,ft = m.fit_transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,162,t = m.transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,176,"m.fit_transform(A, W=W_init, H=H_init)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,177,m.transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,192,ft = m.fit_transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,203,"NMF(n_components=15, random_state=0, tol=1e-2, init=init).fit(A)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,229,W1 = est1.fit_transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,230,W2 = est2.fit_transform(A_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,249,A_fit_tr = model.fit_transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,250,A_tr = model.transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,294,W_cls = model_class.fit_transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,295,W_cls_2 = model_class.transform(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,558,W_regul = regul.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,559,W_model = model.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,592,W_regul = regul.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,593,W_model = model.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,692,assert nmf.fit(X).transform(X).dtype == dtype_out
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,693,assert nmf.fit_transform(X).dtype == dtype_out
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,705,W32 = nmf32.fit_transform(X.astype(np.float32))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,707,W64 = nmf64.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,721,"NMF(init=""custom"").fit(X, H=H, W=W)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_nmf.py,741,NMF().fit(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,48,topic_distr_1 = lda_1.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,49,topic_distr_2 = lda_2.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,63,lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,83,lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,119,lda.fit(X.toarray())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,135,X_trans = lda.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,149,X_fit = lda.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,150,X_trans = lda.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,167,model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,176,lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,206,lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,247,lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,277,lda_1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,280,lda_2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,308,lda_1.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,309,score_1 = lda_1.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,311,lda_2.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,312,score_2 = lda_2.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,327,lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,339,lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,342,score = lda.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,358,lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,373,lda = LatentDirichletAllocation(max_iter=750).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_online_lda.py,408,lda.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,49,X_fit_transformed = kpca.fit_transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,50,X_fit_transformed2 = kpca.fit(X_fit).transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,60,X_pred_transformed = kpca.transform(X_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,72,"KernelPCA(eigen_solver=""unknown"").fit(np.random.randn(10, 10))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,95,kpca = KernelPCA(random_state=state).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,96,transformed1 = kpca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,100,transformed2 = kpca.transform(X_copy)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,117,"transformed_X[i, :] = kpca.fit_transform(X)[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,141,X_fit_transformed = kpca.fit_transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,142,X_fit_transformed2 = kpca.fit(X_fit).transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,148,X_pred_transformed = kpca.transform(X_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,175,"np.abs(KernelPCA(n_comps, eigen_solver=solver).fit(X_fit).transform(X_pred)),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,178,.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,179,.transform(X_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,197,shape = kpca.fit(X_fit).transform(X_pred).shape
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,212,Xt = kpca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,216,Xt = kpca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,220,Xt = kpca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,227,This test checks that fit().transform() returns the same result as
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,237,A = k.fit(X_fit).transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,239,B = k.fit_transform(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,260,.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,261,.transform(X_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,268,".fit(np.dot(X_fit, X_fit.T))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,269,".transform(np.dot(X_pred, X_fit.T))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,274,").fit_transform(np.dot(X_fit, X_fit.T))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,280,".fit(np.dot(X_fit, X_fit.T))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,281,".transform(np.dot(X_fit, X_fit.T))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,302,kpca.fit(K)  # no error
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,309,kpca_c.fit(Kc)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,325,kpca.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,339,"grid_search.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,355,"grid_search.fit(X_kernel, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,369,"train_score = Perceptron(max_iter=5).fit(X, y).score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,380,X_kpca = kpca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,383,"train_score = Perceptron(max_iter=5).fit(X_kpca, y).score(X_kpca, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,396,kpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,435,kpca.fit(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,449,kpca.fit(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,452,kpca.fit(K)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,469,.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,470,.transform(X_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,476,.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,477,.transform(X_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,485,.fit(X_fit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,486,.transform(X_pred)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,504,X_trans = kpca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,512,kpca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,526,X = StandardScaler().fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_kernel_pca.py,531,assert kpca.fit_transform(X).shape == kpca.fit_transform(X.astype(np.float32)).shape
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,47,U = spca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,52,U = spca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,62,spca_lars.fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,66,spca_lasso.fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,76,spca_lars.fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,77,U1 = spca_lars.transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,81,).fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,82,U2 = spca.transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,94,assert not np.any(np.isnan(estimator.fit_transform(Y)))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,101,U1 = spca_lars.fit_transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,103,U2 = spca_lasso.fit(Y).transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,114,"model.fit(rng.randn(5, 4))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,122,U = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,127,U = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,138,"spca_lars = MiniBatchSparsePCA(n_components=3, random_state=0, alpha=alpha).fit(Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,139,U1 = spca_lars.transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,150,U2 = spca.fit(Y).transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,155,U2 = spca.fit(Y).transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,161,).fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,170,results_train = spca_lars.fit_transform(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,171,results_test = spca_lars.transform(Y[:10])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,181,pca.fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,182,spca.fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,183,results_test_pca = pca.transform(Z)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,184,results_test_spca = spca.transform(Z)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_sparse_pca.py,200,model = SPCA(n_components=n_components).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_factor_analysis.py,42,fa_fail.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_factor_analysis.py,46,fa.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_factor_analysis.py,49,X_t = fa.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_factor_analysis.py,53,"assert_almost_equal(fa.score_samples(X).mean(), fa.score(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_factor_analysis.py,69,"fa.fit(X[:, :2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_factor_analysis.py,81,fa1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_factor_analysis.py,87,fa.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_factor_analysis.py,98,results[method] = fa_var.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_factor_analysis.py,105,"FactorAnalysis(rotation=""not_implemented"").fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,23,pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,25,X_transformed = ipca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,36,ipca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,51,pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,56,X_transformed = ipca.fit_transform(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,67,ipca.fit(X_sparse)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,96,Yt = IncrementalPCA(n_components=2).fit(X).transform(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,116,"ipca = IncrementalPCA(n_components=2, batch_size=10).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,117,Y = ipca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,136,"IncrementalPCA(n_components, batch_size=10).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,178,ipca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,199,ipca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,213,"ipca = IncrementalPCA(n_components=None, batch_size=batch_size).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,229,"ipca = IncrementalPCA(n_components=None, batch_size=batch_size).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,245,"ipca = IncrementalPCA(n_components=20, batch_size=batch_size).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,263,"ipca = IncrementalPCA(n_components=2, batch_size=batch_size).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,276,Y_pca = PCA(n_components=2).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,277,"Y_ipca = IncrementalPCA(n_components=2, batch_size=25).fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,289,Y_pca = PCA(n_components=3).fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,290,"Y_ipca = IncrementalPCA(n_components=3, batch_size=25).fit_transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,303,pca = PCA(n_components=nc).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,304,"ipca = IncrementalPCA(n_components=nc, batch_size=100).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,325,"pca = PCA(n_components=10, svd_solver=""full"", random_state=rng).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,326,"ipca = IncrementalPCA(n_components=10, batch_size=100).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,330,X_pca = pca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,331,X_ipca = ipca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,359,X_pca = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,365,pca.fit(X_hat)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,366,ipca.fit(X_hat)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,379,"pca = PCA(whiten=True, n_components=nc).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,380,"ipca = IncrementalPCA(whiten=True, n_components=nc, batch_size=250).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,382,Xt_pca = pca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,383,Xt_ipca = ipca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,424,ipca.fit(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_incremental_pca.py,427,pca.fit(A)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,25,X_r = pca.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,29,X_r2 = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,31,X_r = pca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,47,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,86,X_whitened = pca.fit_transform(X_.copy())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,88,X_whitened2 = pca.transform(X_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,97,).fit(X_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,98,X_unwhitened = pca.transform(X_)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,115,pca_full.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,116,pca_other.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,139,X_pca = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,156,pca_full.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,157,pca_other.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,169,X_trans = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,183,X_trans = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,188,pca.fit(X_hat)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,201,"Yt = PCA(n_components=2, svd_solver=svd_solver).fit(X).transform(Xt)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,212,X_trans = pca.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,230,"pca = PCA(n_components=2, svd_solver=svd_solver, whiten=whiten).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,231,Y = pca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,278,pca_fitted.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,290,"PCA(n_components, svd_solver=svd_solver).fit(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,304,pca.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,315,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,331,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,340,"pca = PCA(n_components=""mle"", svd_solver=""full"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,356,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,371,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,384,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,399,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,411,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,413,ll1 = pca.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,417,"ll2 = pca.score(rng.randn(n, p) * 0.2 + np.array([3, 4, 5]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,421,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,422,ll2 = pca.score(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,435,pca.fit(Xl)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,436,ll[k] = pca.score(Xt)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,449,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,459,pca_full.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,460,pca_other.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,461,"assert_allclose(pca_full.score(X), pca_other.score(X), rtol=5e-6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,474,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,477,pca.fit(X.T)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,498,pca_auto.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,499,pca_test.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,511,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,518,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,529,"transformed_X[i, :] = pca.fit_transform(X)[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,544,"pca_64 = PCA(n_components=3, svd_solver=svd_solver, random_state=0).fit(X_64)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,545,"pca_32 = PCA(n_components=3, svd_solver=svd_solver, random_state=0).fit(X_32)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,549,assert pca_64.transform(X_64).dtype == np.float64
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,550,assert pca_32.transform(X_32).dtype == np.float32
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,564,"pca_64 = PCA(n_components=3, svd_solver=svd_solver, random_state=0).fit(X_i64)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,565,"pca_32 = PCA(n_components=3, svd_solver=svd_solver, random_state=0).fit(X_i32)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,569,assert pca_64.transform(X_i64).dtype == np.float64
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,570,assert pca_32.transform(X_i32).dtype == np.float64
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,580,"pca1 = PCA().fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,583,"pca2 = PCA(n_components=n_components).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,620,"pca = PCA(n_components=""mle"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,634,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/decomposition/tests/test_pca.py,644,pca_skl.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,477,"return self.fit(X, y).transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,529,"""est.transform(X) on the training data instead."","
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,542,"""est.transform(X) on the training data instead."","
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,639,">>> pls2.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,641,>>> Y_pred = pls2.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,648,"#     - ""pls"" with function oscorespls.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,766,">>> plsca.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,768,">>> X_c, Y_c = plsca.transform(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,894,">>> cca.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,896,">>> X_c, Y_c = cca.transform(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,992,">>> pls = PLSSVD(n_components=2).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,993,">>> X_c, Y_c = pls.transform(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,1065,"""will be removed in 1.1 (renaming of 0.26). Use est.transform(X) on """
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,1075,"""will be removed in 1.1 (renaming of 0.26). Use est.transform(X, Y) """
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/_pls.py,1164,"return self.fit(X, y).transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,33,"pls.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,53,Xt = pls.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,55,"Xt, Yt = pls.transform(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,73,"pls.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,131,"pls.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,181,"pls.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,251,"pls.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,345,"pls_nipals.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,357,"pls.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,376,"one_d_coeff = est.fit(X, Y[:, 0]).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,377,"two_d_coeff = est.fit(X, Y[:, :1]).coef_"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,392,"pls = Est(copy=True).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,397,"Est(copy=False).fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,405,"pls.transform(X, Y, copy=False),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,410,"pls.predict(X, copy=False),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,415,"pls.transform(X, Y, copy=True), pls.transform(X.copy(), Y.copy(), copy=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,418,"pls.predict(X, copy=True), pls.predict(X.copy(), copy=False)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,462,"X_score, Y_score = Est(scale=True).fit_transform(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,463,"X_s_score, Y_s_score = Est(scale=False).fit_transform(X_s, Y_s)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,479,"est.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,481,assert est.transform(X).shape[1] == 3
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,493,"est.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,495,assert est.transform(X).shape[1] == 5
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,507,"est = Est().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,509,"assert_allclose(est.x_scores_, est.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,511,"assert_allclose(est.y_scores_, est.transform(X, Y)[1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,519,"est = Est().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,531,"estimator = Estimator().fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,556,"svd = PLSSVD(n_components=1).fit(X, Y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,557,"reg = PLSRegression(n_components=1).fit(X, Y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,558,"canonical = PLSCanonical(n_components=1).fit(X, Y).transform(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,586,"cca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/cross_decomposition/tests/test_pls.py,605,"pls.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_classification.py,147,">>> neigh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_classification.py,149,>>> print(neigh.predict([[1.1]]))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_classification.py,438,">>> neigh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_classification.py,440,>>> print(neigh.predict([[1.5]]))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nca.py,165,">>> nca.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nca.py,168,">>> knn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nca.py,170,">>> print(knn.score(X_test, y_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nca.py,172,">>> knn.fit(nca.transform(X_train), y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nca.py,174,">>> print(knn.score(nca.transform(X_test), y_test))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nca.py,331,y = LabelEncoder().fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nca.py,461,pca.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nca.py,470,"lda.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_base.py,683,>>> neigh.fit(samples)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_base.py,862,>>> neigh.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_base.py,1019,>>> neigh.fit(samples)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_base.py,1197,>>> neigh.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_graph.py,119,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_graph.py,212,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_graph.py,341,>>> X_dist_graph = transformer.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_graph.py,432,return self.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_graph.py,564,>>> X_clustered = estimator.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_graph.py,654,return self.fit(X).transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_regression.py,149,">>> neigh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_regression.py,151,>>> print(neigh.predict([[1.5]]))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_regression.py,371,">>> neigh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_regression.py,373,>>> print(neigh.predict([[1.5]]))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nearest_centroid.py,92,">>> clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nearest_centroid.py,94,">>> print(clf.predict([[-0.8, -1]]))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_nearest_centroid.py,135,y_ind = le.fit_transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_unsupervised.py,113,>>> neigh.fit(samples)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_kde.py,109,">>> kde = KernelDensity(kernel='gaussian', bandwidth=0.5).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_lof.py,189,>>> clf.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/_lof.py,255,return self.fit(X)._predict()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,32,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,33,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,37,"clf.fit(X_csr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,38,"assert_array_equal(clf.predict(T_csr), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,42,"clf.fit(X_csr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,43,"assert_array_equal(clf.predict(T), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,47,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,48,"assert_array_equal(clf.predict(T_csr), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,52,"clf.fit(X_csr.tocoo(), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,53,"assert_array_equal(clf.predict(T_csr.tolil()), true_result)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,59,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,65,"clf = NearestCentroid(metric=metric).fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,66,score = np.mean(clf.predict(iris.data) == iris.target)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,75,"clf = clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,76,score = np.mean(clf.predict(iris.data) == iris.target)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,85,"obj.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,86,"score = obj.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,91,"score2 = obj2.score(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,108,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,117,"clf.fit(X, y_ind)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,119,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,131,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,132,y_init = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,135,"clf.fit(X_noise, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,136,y_translate = clf.predict(X_noise)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,144,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,146,"clf.fit(X_csr, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nearest_centroid.py,162,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,39,log_dens = kde.fit(X).score_samples(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,42,"np.exp(kde.score(Y)), np.prod(dens_true), atol=atol, rtol=max(1e-7, rtol)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,73,"kde = KernelDensity(bandwidth=bandwidth, kernel=kernel).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,78,nbrs = NearestNeighbors(n_neighbors=1).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,90,"kde = KernelDensity(bandwidth=bandwidth, kernel=kernel).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,96,"kde = KernelDensity(kernel=""gaussian"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,115,kde.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,141,"kde.fit(np.random.random((200, 10)), sample_weight=np.random.random((200, 10)))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,143,"kde.fit(np.random.random((200, 10)), sample_weight=-np.random.random(200))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,155,search.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,176,"kde.fit(X, sample_weight=weights_neutral)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,179,kde.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,186,"kde.fit(X, sample_weight=weights)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,189,kde.fit(X_repetitions)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,201,"kde.fit(X, sample_weight=(scale_factor * weights))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,214,"kde.fit(data, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_kde.py,225,"kde.fit(data, sample_weight=sample_weight)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,45,labels_compact = est_compact.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,46,labels_chain = est_chain.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,76,St_compact = est_compact.fit_transform(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,77,St_chain = est_chain.fit_transform(S)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,94,labels_chain = est_chain.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,95,labels_compact = est_compact.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,117,Xt_chain = est_chain.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,118,Xt_compact = est_compact.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,121,Xt_chain = est_chain.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,122,Xt_compact = est_compact.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,162,Xt_chain = est_chain.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,163,Xt_compact = est_compact.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,188,pred_chain = est_chain.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,189,pred_compact = est_compact.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,215,pred_chain = est_chain.fit(X1).predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,216,pred_compact = est_compact.fit(X1).predict(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,261,"y_pred_chain = reg_chain.fit(X, y).predict(X2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors_pipeline.py,262,"y_pred_compact = reg_compact.fit(X, y).predict(X2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,39,score = clf.fit(X).negative_outlier_factor_
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,46,"clf = neighbors.LocalOutlierFactor(contamination=0.25, n_neighbors=5).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,48,"assert_array_equal(clf.fit_predict(X), 6 * [1] + 2 * [-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,63,clf = neighbors.LocalOutlierFactor(novelty=True).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,77,).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,78,"clf2 = neighbors.LocalOutlierFactor(n_neighbors=2, novelty=True).fit(X_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,102,lof_X.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,104,pred_X_Y = lof_X.predict(Y)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,110,lof_D.fit(DXX)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,112,pred_D_Y = lof_D.predict(DYX)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,120,clf = neighbors.LocalOutlierFactor(n_neighbors=500).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,126,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,134,).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,135,"clf2 = neighbors.LocalOutlierFactor(n_neighbors=2, novelty=True).fit(X_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,153,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,161,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,182,clf_1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,187,clf_2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,199,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,207,clf.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_lof.py,230,y_pred = clf.fit_predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,45,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,46,X_t = nca.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,84,"X_t = nca.fit_transform(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,125,"NCA(max_iter=""21"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,127,"NCA(verbose=""true"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,129,"NCA(tol=""1"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,131,"NCA(n_components=""invalid"").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,133,"NCA(warm_start=1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,141,"NCA(init=1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,143,"NCA(max_iter=-1).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,151,"NCA(init=init).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,159,"NCA(n_components=n_components).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,169,"NeighborhoodComponentsAnalysis(init=transformation).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,176,"NeighborhoodComponentsAnalysis(init=transformation).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,180,"NeighborhoodComponentsAnalysis(init=transformation).fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,200,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,211,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,215,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,224,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,228,"nca_random.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,232,"nca_auto.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,236,"nca_pca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,240,"nca_lda.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,244,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,255,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,266,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,279,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,306,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,313,"nca_other.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,328,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,344,"nca.fit(X_less_features, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,352,"nca_warm.fit(iris_data, iris_target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,355,"nca_warm.fit(iris_data, iris_target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,359,"nca_cold.fit(iris_data, iris_target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,362,"nca_cold.fit(iris_data, iris_target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,397,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,429,"nca.fit(iris_data, iris_target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,446,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,457,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,467,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,468,"assert_array_equal(X, nca.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,478,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,479,"assert_array_equal(X, nca.transform(X))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,488,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,499,"nca.fit(iris_data, iris_target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,528,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,537,"nca.fit(iris_data, iris_target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_nca.py,556,"nca.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_graph.py,24,Xt = nnt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_graph.py,30,X2t = nnt.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_graph.py,40,Xt = nnt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_graph.py,46,X2t = nnt.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_graph.py,69,Xt = nnt.fit_transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_graph.py,73,Xt = nnt.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_graph.py,78,X2t = nnt.transform(X2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,89,neigh.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,114,nbrs_fid.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,121,"nbrs.fit(data, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,137,neighbors_.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,168,nbrs_X.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,175,nbrs_D.fit(DXX)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,184,nbrs_D.fit(DXX)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,203,"pred_X = est.fit(X, target).predict(Y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,205,"pred_D = est.fit(DXX, target).predict(DYX)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,228,nn = neighbors.NearestNeighbors(n_neighbors=3 + 1).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,246,nn = neighbors.NearestNeighbors(radius=1).fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,308,neigh.fit(dist_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,315,neigh.fit(dist_csr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,360,neigh.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,405,"knn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,407,y_pred = knn.predict(X[:n_test_pts] + epsilon)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,410,"knn.fit(X, y_str)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,411,y_pred = knn.predict(X[:n_test_pts] + epsilon)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,424,"knn.fit(X, y.astype(float))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,426,y_pred = knn.predict(X[:n_test_pts] + epsilon)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,435,"cls.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,449,"cls.fit(X, y.astype(str))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,454,"cls.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,476,"neigh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,478,y_pred = neigh.predict(X[:n_test_pts] + epsilon)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,480,"neigh.fit(X, y_str)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,481,y_pred = neigh.predict(X[:n_test_pts] + epsilon)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,523,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,524,"assert_array_equal(np.array([1, 2]), clf.predict(z1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,527,clf.predict(z2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,551,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,552,"assert_array_equal(correct_labels1, clf.predict(z1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,553,"assert_array_equal(correct_labels2, clf.predict(z2))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,564,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,572,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,579,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,585,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,588,"pred = clf.predict([[1], [15]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,594,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,614,"clf.fit(X, y_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,617,"pred = clf.predict([[7], [15]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,634,"clf.fit(X, y_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,638,"pred = clf.predict([[7], [15]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,644,"clf.fit(X, y_multi)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,667,"clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,671,"assert_array_equal(correct_labels1, clf.predict(z1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,694,"rnn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,695,"assert_array_almost_equal(rnn_correct_labels, rnn.predict(z))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,703,"knn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,704,"assert_array_almost_equal(corr_labels, knn.predict(z))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,718,"nbrs = neighbors.NearestNeighbors(radius=radius, algorithm=algorithm).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,735,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,757,nn = neighbors.NearestNeighbors(algorithm=algorithm).fit(equidistant_points)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,780,model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,822,"rnn.fit(X_train, y_train[:, o])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,823,y_pred_so.append(rnn.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,832,"rnn_mo.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,833,y_pred_mo = rnn_mo.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,851,"knn.fit(sparsemat(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,855,y_pred = knn.predict(X_eps)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,879,"knn.fit(X_train, y_train[:, o])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,880,y_pred_so.append(knn.predict(X_test))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,889,"knn_mo.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,890,y_pred_mo = knn_mo.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,921,"knn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,923,y_pred = knn.predict(X[:n_test_pts] + epsilon)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,940,"knn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,945,y_pred = knn.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,969,"knn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,971,y_pred = knn.predict(X[:n_test_pts] + epsilon)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,995,"neigh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,997,y_pred = neigh.predict(X[:n_test_pts] + epsilon)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1005,"neigh.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1012,pred = neigh.predict(X_test_nan)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1031,"rnn.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1037,y_pred = rnn.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1059,"rnn.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1061,y_pred = rnn.predict(X[:n_test_pts] + epsilon)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1079,"knn.fit(sparsemat(X), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1084,"knn_pre.fit(pairwise_distances(X, metric=""euclidean""), y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1088,assert np.mean(knn.predict(X2).round() == y) > 0.95
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1094,knn_pre.predict(X2_pre)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1096,assert np.mean(knn_pre.predict(X2_pre).round() == y) > 0.95
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1106,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1107,"assert_array_equal(clf.predict(iris.data), iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1110,"clf.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1111,assert np.mean(clf.predict(iris.data) == iris.target) > 0.95
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1114,"rgs.fit(iris.data, iris.target)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1115,assert np.mean(rgs.predict(iris.data).round() == iris.target) > 0.95
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1132,"score_uint8 = clf.fit(X_train, Y_train).score(X_test, Y_test)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1133,"score_float = clf.fit(X_train.astype(float, copy=False), Y_train).score("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1225,est.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1235,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1238,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1241,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1245,nbrs.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1247,"ignore_warnings(nbrs.fit(Xsparse, y))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1250,"nbrs.fit(X3, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1253,nbrs.predict(X3)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1257,"nbrs.fit(np.ones((0, 2)), np.ones(0))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1259,"nbrs.fit(X[:, :, None], y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1260,"nbrs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1262,nbrs.predict([[]])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1268,"nbrs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1270,nbrs = neighbors.NearestNeighbors().fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1315,est.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1328,"neigh.fit(X[:, feature_sl])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1363,nbrs1.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1364,nbrs2.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1389,nn.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1392,"nn.fit(X[:, :2])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1402,nb_p.fit(DXX)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1409,).fit(Xcsr)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1422,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1431,"est.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1441,"model.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1443,model.predict(csr_matrix(X))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1460,"nbrs1 = neighbors.NearestNeighbors(n_neighbors=3, metric=metric).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1468,"nbrs1 = neighbors.NearestNeighbors(metric=metric, radius=radius).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1473,X_nbrs.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1477,X_nbrs.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1495,nn.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1523,nn.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1542,nn.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1554,"nn.fit([[0], [1]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1578,nn.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1616,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1617,y = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1622,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1623,y_parallel = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1641,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1642,y = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1647,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1648,y_parallel = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1673,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1674,clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1685,"result = classifier.fit(X, y).predict(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1702,).fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1721,"nn1 = NN(metric=""jaccard"", algorithm=""brute"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1722,"nn2 = NN(metric=""jaccard"", algorithm=""ball_tree"").fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1739,"clf.fit(X_tr, y_tr)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1740,pred = clf.predict(X_te)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1788,"y_pred_chain = reg_chain.fit(X, y).predict(X2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1789,"y_pred_compact = reg_compact.fit(X, y).predict(X2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/sklearn/neighbors/tests/test_neighbors.py,1808,model.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/ndimage/tests/test_c_api.py,25,"lambda shift: _ctest.transform(shift),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/ndimage/tests/test_c_api.py,26,"lambda shift: _cytest.transform(shift, with_signature=False),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/ndimage/tests/test_c_api.py,27,"lambda shift: LowLevelCallable(_cytest.transform(shift, with_signature=True)),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/linalg/tests/test_fblas.py,568,"#desired_a = alpha*transpose(x[:,newaxis]*self.transform(y)) + a"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/linalg/tests/test_fblas.py,576,"#    desired_a = alpha*transpose(x[::2,newaxis]*self.transform(y)) + a"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/linalg/tests/test_fblas.py,581,"#    desired_a = alpha*transpose(x[:,newaxis]*self.transform(y[::2])) + a"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py,2438,">>> a1, b1, loc1, scale1 = beta.fit(x)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py,2443,">>> a1, b1, loc1, scale1 = beta.fit(x, floc=0, fscale=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py,2451,">>> a1, b1, loc1, scale1 = beta.fit(x, fa=1, floc=0, fscale=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py,2460,">>> loc1, scale1 = norm.fit(x)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,60,"return super(type(self), self).fit(*args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,662,"return super().fit(data, *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,2706,"return super().fit(data, *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,2820,"return super().fit(data, *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,3285,"return super().fit(data, *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,3379,"loc_r, scale_r, = gumbel_r.fit(-np.asarray(data), *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,3765,"return super().fit(data, *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,3782,"return super().fit(data, *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,5192,"return super().fit(data, *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,5414,"return super().fit(data, *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,6524,"return super().fit(data, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,6767,"return super(type(self), self).fit(data, *args, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,8456,">>> loc, scale = uniform.fit(x)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,8465,">>> loc, scale = uniform.fit(x, floc=0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/_continuous_distns.py,8474,">>> loc, scale = uniform.fit(x, fscale=12)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/morestats.py,1891,"xbar, s = distributions.gumbel_r.fit(x)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/morestats.py,1898,"xbar, s = distributions.gumbel_l.fit(x)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_morestats.py,242,"xbar, s = stats.gumbel_l.fit(v)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_continuous_basic.py,459,"loc, scale = super(type(stats.uniform), stats.uniform).fit(x, method=""MM"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_continuous_basic.py,662,"vals = distfn.fit(rvs, method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_continuous_basic.py,663,"vals2 = distfn.fit(rvs, optimizer='powell', method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_continuous_basic.py,674,"vals = distfn.fit(rvs, floc=0, method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_continuous_basic.py,675,"vals2 = distfn.fit(rvs, fscale=1, method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_continuous_basic.py,681,"vals3 = distfn.fit(rvs, f0=arg[0], method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_continuous_basic.py,685,"vals4 = distfn.fit(rvs, f1=arg[1], method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_continuous_basic.py,689,"vals5 = distfn.fit(rvs, f2=arg[2], method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_fit.py,104,"est = distfn.fit(rvs, method=method)  # start with default values"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_fit.py,126,actual = d.fit(data)[-2:]
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_fit.py,140,"phat = stats.expon.fit(data, floc=0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,134,func) of the result computed using dist.fit() is less than or equal
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,139,"mle_analytical = dist.fit(data, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,140,"numerical_opt = super(type(dist), dist).fit(data, **kwds)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,157,"dist.fit(data, **all_fixed)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,160,dist.fit([np.nan])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,163,dist.fit([np.inf])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,165,"dist.fit(data, extra_keyword=2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,167,"dist.fit(data, *[1]*(len(param) - 1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1236,fit_method = stats.logistic.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1313,"loc, scale = dist.fit(z)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1399,"shape_mle_analytical1 = stats.pareto.fit(data, floc=0, f0=1.04)[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1400,"shape_mle_analytical2 = stats.pareto.fit(data, floc=0, fix_b=1.04)[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1401,"shape_mle_analytical3 = stats.pareto.fit(data, floc=0, fb=1.04)[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1408,"shape_mle_a, loc_mle_a, scale_mle_a = stats.pareto.fit(data, floc=2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1951,"mu, loc, scale = stats.invgauss.fit(data, floc=rvs_loc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1965,"mu, loc, scale = stats.invgauss.fit(data, floc=rvs_loc - 1,"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1971,"shape_mle1 = stats.invgauss.fit(data, fmu=1.04)[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1972,"shape_mle2 = stats.invgauss.fit(data, fix_mu=1.04)[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1973,"shape_mle3 = stats.invgauss.fit(data, f0=1.04)[0]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1985,invgauss_fit = stats.invgauss.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,1990,"invgauss_fit = stats.invgauss.fit(data, floc=0, fmu=2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2020,"stats.invgauss.fit([1, 2, 3], floc=2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2089,"loc, scale = stats.laplace.fit(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2094,"loc, scale = stats.laplace.fit(data, floc=loc_mle)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2096,"loc, scale = stats.laplace.fit(data, fscale=scale_mle)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2106,"loc, scale = stats.laplace.fit(data, floc=loc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2111,"loc, scale = stats.laplace.fit(data, fscale=scale_mle)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2135,"loc, scale = stats.laplace.fit(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2137,stats.laplace).fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2146,"loc, scale = stats.laplace.fit(data, floc=6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,2149,"loc, scale = stats.laplace.fit(data, fscale=6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3320,"assert_allclose(np.array(stats.lognorm.fit(x, floc=0, fscale=20)),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3326,"loc, scale = stats.norm.fit(x)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3330,"loc, scale = stats.norm.fit(x, floc=2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3334,"loc, scale = stats.norm.fit(x, fscale=2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3344,"a, loc, scale = stats.gamma.fit(x, floc=floc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3355,"a, loc, scale = stats.gamma.fit(x, f0=f0, floc=floc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3362,"a, loc, scale = stats.gamma.fit(x, f0=f0, floc=floc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3370,"a, loc, scale = stats.gamma.fit(x, floc=floc, fscale=fscale)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3392,"a, b, loc, scale = stats.beta.fit(x, floc=0, fscale=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3400,"a, b, loc, scale = stats.beta.fit(x, f0=2, floc=0, fscale=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3410,"a2, b2, loc2, scale2 = stats.beta.fit(x2, f1=2, floc=0, fscale=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3434,"loc, scale = stats.expon.fit(x)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3438,"loc, scale = stats.expon.fit(x, fscale=3)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3442,"loc, scale = stats.expon.fit(x, floc=0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3450,"shape, loc, scale = stats.lognorm.fit(x, floc=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3455,"shape, loc, scale = stats.lognorm.fit(x, floc=1, fscale=6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3461,"shape, loc, scale = stats.lognorm.fit(x, floc=1, fix_s=0.75)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3469,"loc, scale = stats.uniform.fit(x)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3473,"loc, scale = stats.uniform.fit(x, floc=0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3477,"loc, scale = stats.uniform.fit(x, fscale=10)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3490,"res_1 = stats.beta.fit(x, f0=3., method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3491,"res_2 = stats.beta.fit(x, fa=3., method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3494,"res_2 = stats.beta.fit(x, fix_a=3., method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3497,"res_3 = stats.beta.fit(x, f1=4., method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3498,"res_4 = stats.beta.fit(x, fb=4., method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3501,"res_4 = stats.beta.fit(x, fix_b=4., method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3513,"res_5 = stats.beta.fit(x, fa=3., floc=0, fscale=1, method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,3520,"aa, ll, ss = stats.gamma.fit(data, fa=a, method=method)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4066,# values as gamma.fit(...).
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4068,"result_erlang = stats.erlang.fit(data, f0=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4069,"result_gamma = stats.gamma.fit(data, f0=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4099,"loc, scale = stats.rayleigh.fit(data, floc=rvs_loc)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4104,"loc, scale = stats.rayleigh.fit(data, fscale=.6)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4110,"loc, scale = stats.rayleigh.fit(data)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4728,"params = np.array(stats.lognorm.fit(x, floc=0.))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4732,"params = np.array(stats.lognorm.fit(x, fscale=0.5, loc=0))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4735,"params = np.array(stats.lognorm.fit(x, f0=0.25, loc=0))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4738,"params = np.array(stats.lognorm.fit(x, f0=0.25, floc=0))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4745,"params = np.array(stats.norm.fit(x, floc=floc))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4754,params = stats.cauchy.fit(rvs)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4764,"loc, scale = stats.cauchy.fit(x + offset)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,4883,stats.ksone.fit(d)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,5006,"stats.gamma.fit(stats.gamma.rvs(2., size=7), 2.)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,5632,"c, loc, scale = stats.invweibull.fit(x, floc=0, optimizer=optimizer)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,5932,"nu_est, loc_est, scale_est = stats.nakagami.fit(samples)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/scipy/stats/tests/test_distributions.py,5963,"nu_est, loc_est, scale_est = stats.nakagami.fit(samples, f0=nu)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/resample.py,363,>>> resampled.transform(lambda x: (x - x.mean()) / x.std())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/resample.py,365,"return self._selected_obj.groupby(self.groupby).transform(arg, *args, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/series.py,4244,).transform()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/sorting.py,618,df.groupby(key)[col].transform('first')
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/frame.py,8579,result = op.transform()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/shared_docs.py,317,>>> df.transform(lambda x: x + 1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/shared_docs.py,332,">>> s.transform([np.sqrt, np.exp])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/shared_docs.py,356,>>> df.groupby('Date')['Data'].transform('sum')
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/shared_docs.py,380,>>> df['size'] = df.groupby('c')['type'].transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/apply.py,199,"return obj.T.transform(func, 0, *args, **kwargs).T"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/apply.py,261,"results[name] = colg.transform(how, 0, *args, **kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/apply.py,497,# Support for `frame.transform('method')`
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/groupby/generic.py,1433,output[i] = sgb.transform(wrapper)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/groupby/groupby.py,412,>>> grouped.transform(lambda x: (x - x.mean()) / x.std())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/groupby/groupby.py,423,>>> grouped.transform(lambda x: x.max() - x.min())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/groupby/groupby.py,437,">>> grouped[['C', 'D']].transform(lambda x: x.astype(int).max())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/core/groupby/base.py,142,# Valid values  of `name` for `groupby.transform(name)`
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/test_downstream.py,102,"smf.ols(""Lottery ~ Literacy + np.log(Pop1831)"", data=df).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/test_downstream.py,117,"clf.fit(digits.data[:-1], digits.target[:-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/test_downstream.py,118,clf.predict(digits.data[-1:])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/test_multilevel.py,35,"expected = ymd.groupby(level=""month"").transform(np.sum)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/test_multilevel.py,41,"expected = ymd[""A""].groupby(level=""month"").transform(np.sum)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/test_multilevel.py,48,"expected = ymd.groupby(level=""month"").transform(np.sum).T"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/test_multilevel.py,60,"broadcasted = ymd.groupby(level=""month"").transform(np.sum)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/test_multilevel.py,67,"broadcasted = ymd[""A""].groupby(level=""month"").transform(np.sum)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/test_multilevel.py,112,expected = grouped.transform(lambda x: x * 2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_invalid_arg.py,143,"df.transform({""a"": int, 1: str, ""b"": int})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_invalid_arg.py,161,"Series([1]).transform(""sum"", axis=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_invalid_arg.py,279,"df.transform({""a"": int})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_invalid_arg.py,330,"float_frame.transform(func, axis=axis)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_invalid_arg.py,339,string_series.transform(func)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_invalid_arg.py,356,obj.transform(op)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_transform.py,26,"expected = string_series.groupby(ones).transform(op, *args)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_transform.py,27,"result = string_series.transform(op, 0, *args)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_transform.py,45,result = string_series.transform(ops)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_transform.py,55,"result = string_series.transform(box({""foo"": np.sqrt, ""bar"": np.abs}))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_transform.py,62,"result = df.transform({""b"": [""sqrt"", ""abs""], ""c"": ""sqrt""})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,304,"expected = ser.transform([""shift""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,305,"result = ser.transform([op, ""shift""])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,308,"expected = ser.transform({""B"": ""shift""})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,309,"result = ser.transform({""A"": op, ""B"": ""shift""})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,312,"expected = ser.transform({""B"": [""shift""]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,313,"result = ser.transform({""A"": [op], ""B"": [""shift""]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,316,"expected = ser.transform({""A"": [""shift""], ""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,317,"result = ser.transform({""A"": [op, ""shift""], ""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,333,expected = ser.transform([noop])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,335,"result = ser.transform([noop, raising_op])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,338,"expected = ser.transform({""B"": noop})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,340,"result = ser.transform({""A"": raising_op, ""B"": noop})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,343,"expected = ser.transform({""B"": [noop]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,345,"result = ser.transform({""A"": [raising_op], ""B"": [noop]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,348,"expected = ser.transform({""A"": [noop], ""B"": [noop]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_series_apply.py,350,"result = ser.transform({""A"": [noop, raising_op], ""B"": [noop]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,36,"result = obj.transform(np.sqrt, axis=axis)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,57,"expected = float_frame.groupby(ones, axis=axis).transform(op, *args)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,58,"result = float_frame.transform(op, axis, *args)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,70,"expected2 = float_frame.groupby(ones, axis=axis).transform(op, *args)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,71,"result2 = float_frame.transform(op, axis, *args)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,93,"result = float_frame.transform(ops, axis=axis)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,102,obj.transform(ops)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,110,expected = float_frame[[e]].transform(np.abs)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,113,expected = float_frame.iloc[[0]].transform(np.abs)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,114,"result = float_frame.transform(box({e: np.abs}), axis=axis)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,121,"result = df.transform({""b"": [""sqrt"", ""abs""], ""c"": ""sqrt""})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,144,obj.transform(ops)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,160,"result = obj.transform(func, axis=axis)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,169,result = df.transform(method)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,196,obj.transform(op)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,198,obj.transform([op])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,200,"obj.transform({""A"": op})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,202,"obj.transform({""A"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,215,"expected = df[[""B""]].transform([op])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,216,result = df.transform([op])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,219,"expected = df[[""B""]].transform({""B"": op})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,220,"result = df.transform({""A"": op, ""B"": op})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,223,"expected = df[[""B""]].transform({""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,224,"result = df.transform({""A"": [op], ""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,227,"expected = df.transform({""A"": [""shift""], ""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,228,"result = df.transform({""A"": [op, ""shift""], ""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,243,"expected = df[[""B""]].transform([op])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,245,result = df.transform([op])
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,248,"expected = df[[""B""]].transform({""B"": op})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,250,"result = df.transform({""A"": op, ""B"": op})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,253,"expected = df[[""B""]].transform({""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,255,"result = df.transform({""A"": [op], ""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,258,"expected = df.transform({""A"": [""shift""], ""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,260,"result = df.transform({""A"": [op, ""shift""], ""B"": [op]})"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,280,"frame_or_series([1]).transform(f, 0, *expected_args, **expected_kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,286,result = df.transform(lambda x: x + 10)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/apply/test_frame_transform.py,289,"result = df[""col1""].transform(lambda x: x + 10)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/extension/test_boolean.py,311,"result = df.groupby(""B"").A.transform(len)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/extension/base/groupby.py,64,"result = df.groupby(""B"").A.transform(len)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/resample/test_resample_api.py,247,"expected = test_series.groupby(pd.Grouper(freq=""20min"")).transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/resample/test_resample_api.py,248,"result = r.transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_timegrouper.py,664,"result = df.groupby(""A"")[""B""].transform(min)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_nunique.py,182,"result = df.groupby([0, 0, 1])[""date""].transform(""nunique"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,119,result = g.transform(lambda x: x)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,140,"result = df.a.groupby(c, observed=False).transform(sum)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,144,"df.a.groupby(c, observed=False).transform(lambda xs: np.sum(xs)), df[""a""]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,146,"tm.assert_frame_equal(df.groupby(c, observed=False).transform(sum), df[[""a""]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,148,"df.groupby(c, observed=False).transform(lambda xs: np.max(xs)), df[[""a""]]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,159,"result = df.a.groupby(c, observed=False).transform(sum)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,163,"df.a.groupby(c, observed=False).transform(lambda xs: np.sum(xs)), df[""a""]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,165,"tm.assert_frame_equal(df.groupby(c, observed=False).transform(sum), df[[""a""]])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,167,"df.groupby(c, observed=False).transform(lambda xs: np.sum(xs)), df[[""a""]]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,1643,"df[""last_status""] = df.groupby(""package_id"")[""status""].transform(max)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_categorical.py,1670,# .transform(max) should preserve ordered categoricals
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_apply.py,433,expected = grouped.transform(lambda x: x * 2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_apply.py,819,result = g.transform(lambda x: x / x.sum())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby_dropna.py,210,result = gb.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby_dropna.py,214,"result = gb[[""B""]].transform(len)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby_dropna.py,218,"result = gb[""B""].transform(len)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_function.py,816,result = grouped.transform(method)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,60,transformed = grouped.transform(lambda x: x * x.sum())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,222,"trans_result = ts_grouped.transform(np.percentile, 80, axis=0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,225,trans_expected = ts_grouped.transform(g)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,233,"trans_result = ts_grouped.transform(f, q=80)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,426,transformed = grouped.transform(lambda x: x - x.mean())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,431,transformed = grouped.transform(lambda x: x.mean())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,462,"tm.assert_frame_equal(groupedT.transform(tf).T, grouped.transform(tf))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,1496,grouped.transform(f)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,1501,"grouped[""C""].transform(f)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,1686,"result = gb.transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,1689,"expected = gb2.transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_groupby.py,2121,"actual = df.groupby(""g"")[""x""].transform(""sum"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,182,"old_way = s[grouped.transform(f).astype(""bool"")]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,191,"old_way = s[grouped.transform(f).astype(""bool"")]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,211,"old_way = df[grouped.floats.transform(lambda x: x.mean() > N / 20).astype(""bool"")]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,218,"old_way = df[grouped.letters.transform(lambda x: len(x) < N / 10).astype(""bool"")]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,224,"old_way = df[grouped.ints.transform(lambda x: x.mean() > N / 20).astype(""bool"")]"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,315,"result = grouped[""A""].transform(len)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,322,"result = grouped.transform(""sum"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,326,result = grouped.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,365,actual = grouped_ser.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,370,actual = grouped_df.pid.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,408,actual = grouped_ser.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,413,actual = grouped_df.pid.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,451,actual = grouped_ser.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,456,actual = grouped_df.pid.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,497,actual = grouped_ser.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,502,actual = grouped_df.pid.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,540,actual = grouped_ser.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py,545,actual = grouped_df.pid.transform(len)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/aggregate/test_aggregate.py,478,"lambda x: x.transform(""sum""),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/aggregate/test_aggregate.py,479,"lambda x: x.transform(""cumsum""),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,42,transformed = grouped.transform(lambda x: x * x.sum())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,55,.transform(lambda x: x - x.mean())
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,59,result = df.groupby(key).transform(lambda x: x - x.mean()).groupby(key).mean()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,71,result = people.groupby(key).transform(demean).groupby(key).mean()
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,78,g.transform(lambda x: x - 1)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,82,"result = df.groupby(""a"").transform(max)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,96,result = grp.transform(np.mean)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,99,"result = grp.transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,112,"result = df.groupby(""grouping"").transform(""first"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,127,"result = df.groupby(""grouping"")[[""f"", ""i""]].transform(""first"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,133,"result = df.groupby(""g"").transform(""first"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,140,result = grouped.transform(np.mean)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,147,result = grouped.transform(np.mean)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,157,result = grouped.transform(np.mean)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,183,"result = df.groupby([0, 0, 1], axis=1).transform(transformation_func, *args)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,184,"expected = df.T.groupby([0, 0, 1]).transform(transformation_func, *args).T"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,210,"result = ts - grouped.transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,216,"result = ts - grouped.transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,223,"result = ts - grouped.transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,229,"result = ts - grouped.transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,238,"result = df.groupby(1).transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,247,"result = df.groupby(""A"")[""B""].transform(lambda x: x.rank(ascending=False))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,258,"result = df.groupby(""B"").A.transform(lambda x: True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,262,"result = df.groupby(""B"").A.transform(lambda x: True)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,275,"df.groupby(""A"")[""A""].transform(lambda x: x.max() - x.min() + base_time)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,281,"result = df.groupby(""A"")[""A""].transform(lambda x: x.max() - x.min())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,289,"result = df.groupby(""a"").b.transform("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,298,"result = df.groupby(""a"").b.transform("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,326,"result = df.groupby(""ID3"")[""DATETIME""].transform(lambda x: x.diff())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,329,"result = df[[""ID3"", ""DATETIME""]].groupby(""ID3"").transform(lambda x: x.diff())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,336,grouped.transform(lambda x: x * 2)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,337,grouped.transform(np.mean)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,347,expected = df.groupby(lambda x: x.month).transform(fillit)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,362,"test_op = lambda x: x.transform(""cumcount"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,365,"test_op = lambda x: x.transform(""fillna"", value=0)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,374,test_op = lambda x: x.transform(transformation_func)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,389,"result = df.groupby(""A"")[[""C"", ""D""]].transform(f)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,392,"expected = selection.groupby(df[""A""]).transform(f)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,413,"expected[""C""] = gbc.transform(np.mean)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,424,"expected[""D""] = grouped[""D""].transform(np.mean)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,427,"result = df.groupby(""A"").transform(np.mean)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,434,"result = df.groupby(""A"").transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,435,"expected = df.groupby(""A"").transform(np.mean)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,438,"result = df.groupby(""A"")[""C""].transform(""mean"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,439,"expected = df.groupby(""A"")[""C""].transform(np.mean)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,448,"result = df.groupby(""grouping"")[""d""].transform(""first"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,468,"df.groupby(""col1"").transform(sum)[""col2""],"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,469,"df.groupby(""col1"")[""col2""].transform(sum),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,470,"df.groupby(""col1"").transform(nsum)[""col2""],"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,471,"df.groupby(""col1"")[""col2""].transform(nsum),"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,485,expected = g.transform(np.mean)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,486,result = g.transform(lambda x: np.mean(x))
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,507,"result = df.groupby(""A"").transform(lambda x: (x - x.mean()) / x.std())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,526,"result = df.groupby(""A"").transform(lambda x: (x - x.mean()) / x.std())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,537,"result = df.groupby(""A"").transform(lambda x: (x - x.mean()) / x.std())"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,548,"result = df.groupby(""A"").transform(lambda x: x * 2 / 2)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,556,"result = df.groupby(df.b)[""a""].transform(max)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,607,expected = data.groupby(labels).transform(targop)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,609,"tm.assert_series_equal(expected, data.groupby(labels).transform(op, *args))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,660,"result = df.groupby(""key"")[""value""].transform(op, skipna=skipna)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,739,"tm.assert_frame_equal(expected, gb.transform(op, *args).sort_index(axis=1))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,756,gb[c].transform(op)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,762,"tm.assert_series_equal(expected, gb[c].transform(op, *args))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,790,"df.groupby(axis=1, level=1).transform(lambda z: z.div(z.sum(axis=1), axis=0))"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,821,"result = df.groupby(""b"")[cols].transform(agg_func)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,833,"result = df.groupby(""key"").transform(""ffill"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,836,"result = df.groupby(""key"")[""values""].transform(""ffill"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1006,"res = df.groupby(""key"")[""val""].transform(func)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1025,"result = df.groupby(""group"").transform(demean_rename)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1027,"result_single = df.groupby(""group"").value.transform(demean_rename)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1036,"result[""max_end_time""] = result.groupby(""id"").end_time.transform(func)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1055,"result = stocks.groupby(stocks[""week_id""])[""price""].transform(func)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1091,"g.transform(""some_arbitrary_name"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1096,"g.transform(""aggregate"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1101,"g.transform(""some_arbitrary_name"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1120,"pytest.mark.xfail(reason=""TODO: g.transform('ngroup') doesn't work"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1124,"pytest.mark.xfail(reason=""TODO: g.transform('size') doesn't work"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1138,"result = g.transform(func, *args)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1160,"result = df.groupby([""timezone""])[""time""].transform("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1197,result = gb.transform(func)
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1216,"result = df.groupby(level=""A"").transform(lambda x: x.iloc[-1])"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1257,"result = df_with_categorical.groupby([""A"", ""C""], observed=observed).transform(""sum"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1258,"expected = df_without_categorical.groupby([""A"", ""C""]).transform(""sum"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1264,"result = df_with_categorical.groupby([""A"", ""C""], observed=observed)[""B""].transform("
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1267,"expected = df_without_categorical.groupby([""A"", ""C""])[""B""].transform(""sum"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_transform.py,1276,"result = df.groupby(""A"").transform(""rank"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,25,"data.groupby(""key"").transform(incorrect_function, engine=""numba"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,28,"data.groupby(""key"")[""data""].transform(incorrect_function, engine=""numba"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,41,"data.groupby(""key"").transform(incorrect_function, engine=""numba"", a=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,44,"data.groupby(""key"")[""data""].transform(incorrect_function, engine=""numba"", a=1)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,70,"result = grouped.transform(func, engine=""numba"", engine_kwargs=engine_kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,71,"expected = grouped.transform(lambda x: x + 1, engine=""cython"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,103,"result = grouped.transform(func_1, engine=""numba"", engine_kwargs=engine_kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,104,"expected = grouped.transform(lambda x: x + 1, engine=""cython"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,110,"result = grouped.transform(func_2, engine=""numba"", engine_kwargs=engine_kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,111,"expected = grouped.transform(lambda x: x * 5, engine=""cython"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,116,"result = grouped.transform(func_1, engine=""numba"", engine_kwargs=engine_kwargs)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,117,"expected = grouped.transform(lambda x: x + 1, engine=""cython"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,130,"expected = grouped.transform(func_1, engine=""numba"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,132,"result = grouped.transform(func_1, engine=None)"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,146,"grouped.transform(agg_func, engine=""numba"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,149,"grouped[1].transform(agg_func, engine=""numba"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,160,"result = grouped_x.transform(sum_last, 1, engine=""numba"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,164,"result = grouped_x.transform(sum_last, 2, engine=""numba"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/groupby/transform/test_numba.py,176,"result = df.groupby(""group"").transform(f, engine=""numba"")"
/Users/cba/Desktop/github_datascience_code/download_code/enjuichang_PracticalDataScience-ENCA/recommendation_app/venv/lib/python3.8/site-packages/pandas/tests/generic/test_finalize.py,764,"lambda x: x.transform(lambda y: y),"
/Users/cba/Desktop/github_datascience_code/download_code/lime-robot_dsb2019/code/predict.py,443,"optR.fit(predictions, groundtruth)"
/Users/cba/Desktop/github_datascience_code/download_code/lime-robot_dsb2019/code/validate.py,161,"optR.fit(total_predictions, total_groundtruth)"
/Users/cba/Desktop/github_datascience_code/download_code/lime-robot_dsb2019/code/validate.py,426,"optR.fit(predictions, groundtruth)"
/Users/cba/Desktop/github_datascience_code/download_code/lime-robot_dsb2019/code/bowl_utils.py,155,"optR.fit(predictions, groundtruth)"
/Users/cba/Desktop/github_datascience_code/download_code/lime-robot_dsb2019/code/train.py,440,"optR.fit(predictions, groundtruth)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/adapters/test_statsmodels.py,13,arima.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/adapters/test_statsmodels.py,25,result = arima.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/adapters/test_statsmodels.py,40,arima.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/adapters/test_statsmodels.py,63,result = arima.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/custom/test_preprocessing.py,20,scaler.fit(data)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/custom/test_preprocessing.py,60,unscaler.fit(data_range)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/custom/test_feature_extraction.py,35,fe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/custom/test_feature_extraction.py,52,fe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/custom/test_feature_extraction.py,74,fe.fit(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/tests/custom/test_feature_extraction.py,102,ce.fit('some_X')
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/evaluation.py,82,"pipeline.fit(X_train, y_train, **context)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/evaluation.py,83,"predictions = pipeline.predict(X_test, **context)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/candidates/timeseries/cyclegan.py,227,z_ = self.encoder.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/candidates/timeseries/cyclegan.py,228,y_hat = self.generator.predict(z_)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/candidates/timeseries/cyclegan.py,229,critic = self.critic_x.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/adapters/lightfm.py,23,"super(LightFM, self).fit(X, epochs=self.epochs, num_threads=self.num_threads)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/adapters/keras.py,116,"self.model.fit(X, y, epochs=self.epochs, verbose=self.verbose, callbacks=callbacks,"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/adapters/keras.py,123,"y = self.model.predict(X, batch_size=self.batch_size, verbose=self.verbose)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/adapters/statsmodels.py,49,arima_fit = arima.fit()
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_selection.py,13,">>> clf = clf.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_selection.py,17,>>> X_new = model.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_selection.py,54,">>> efs.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_selection.py,55,>>> efs.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_selection.py,61,>>> efs.transform(X.values)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_selection.py,79,"self.selector.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_selection.py,90,new_X = self.selector.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_selection.py,97,"self.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_selection.py,98,return self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,28,>>> OneHotLabelEncoder().fit_transform(df.a)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,33,>>> OneHotLabelEncoder(max_labels=1).fit_transform(df.a)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,38,>>> OneHotLabelEncoder(name='a_name').fit_transform(df.a)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,66,self.fit(x)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,67,return self.transform(x)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,134,"self.fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,135,return self.transform(X)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,165,>>> ce.fit_transform(df)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,198,"super(CategoricalEncoder, self).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,202,encoder.fit(x)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,207,return encoder.transform(x)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,259,"super(StringVectorizer, self).fit(X)"
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,263,vectorizer.fit(x.fillna('').astype(str))
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/feature_extraction.py,268,bow = vectorizer.transform(x.fillna('').astype(str))
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/preprocessing.py,12,self._label_encoder.fit(y)
/Users/cba/Desktop/github_datascience_code/download_code/MLBazaar_MLPrimitives/mlprimitives/custom/preprocessing.py,17,y = self._label_encoder.transform(y)
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/tests/test_clustering.py,53,"dgraph = EntityMatching().predict(dblocks, dirty_data)"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/tests/test_clustering.py,54,"ccgraph = EntityMatching().predict(ccblocks, clean_clean_data)"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/docs/pyjedai/joins.py,242,"return self.vectorizer.predict(id1=id1, id2=id2)"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/docs/pyjedai/matching.py,487,"self.frequency_evaluator.fit(metric=self.metric,"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/docs/pyjedai/matching.py,497,"return self.frequency_evaluator.predict(id1=entity_id1, id2=entity_id2)"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/docs/pyjedai/utils.py,1226,self.corpus_as_matrix = self.vectorizer.fit_transform(self.corpus)
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/docs/pyjedai/prioritization.py,1208,"self.pairs = ptkj.fit(data=self.data,"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/docs/pyjedai/prioritization.py,1353,"self.vectorizer.fit(metric=self.similarity_function,"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/docs/pyjedai/workflow.py,351,"self.final_pairs : List[Tuple[float, int, int]] = progressive_matcher.predict(data=data, blocks=bblocks, dataset_identifier=self.dataset_name, **self.predictor_arguments)"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/docs/pyjedai/workflow.py,740,self.final_pairs = em_graph = entity_matching_method.predict(
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/docs/pyjedai/workflow.py,746,self.final_pairs = em_graph = entity_matching_method.predict(
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/src/pyjedai/joins.py,242,"return self.vectorizer.predict(id1=id1, id2=id2)"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/src/pyjedai/matching.py,487,"self.frequency_evaluator.fit(metric=self.metric,"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/src/pyjedai/matching.py,497,"return self.frequency_evaluator.predict(id1=entity_id1, id2=entity_id2)"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/src/pyjedai/utils.py,1226,self.corpus_as_matrix = self.vectorizer.fit_transform(self.corpus)
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/src/pyjedai/prioritization.py,1208,"self.pairs = ptkj.fit(data=self.data,"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/src/pyjedai/prioritization.py,1353,"self.vectorizer.fit(metric=self.similarity_function,"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/src/pyjedai/workflow.py,352,"self.final_pairs : List[Tuple[float, int, int]] = progressive_matcher.predict(data=data, blocks=bblocks, dataset_identifier=self.dataset_name, **self.predictor_arguments)"
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/src/pyjedai/workflow.py,744,self.final_pairs = em_graph = entity_matching_method.predict(
/Users/cba/Desktop/github_datascience_code/download_code/AI-team-UoA_pyJedAI/src/pyjedai/workflow.py,750,self.final_pairs = em_graph = entity_matching_method.predict(
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_sacking.py,238,"clf.fit(inputMap, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_sacking.py,241,pred_train = clf.predict(inputMap)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_sacking.py,247,pred = clf.predict(inputMap)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2.py,269,norm_x = RobustScaler().fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2.py,270,"X_train, X_test = norm_x.transform(X_train), norm_x.transform(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2.py,290,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2.py,291,pred_train = clf.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2.py,295,pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_isolationforest.py,265,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_isolationforest.py,266,pred_train = clf.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_isolationforest.py,270,pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc.py,322,"featureProcessor = LinearDiscriminantAnalysis(n_components=200).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc.py,323,"# # featureProcessor = SelectKBest(chi2, k=20)#.fit(features, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc.py,324,"# featureProcessor.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc.py,325,X_train = featureProcessor.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc.py,326,X_test = featureProcessor.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc.py,328,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc.py,329,pred_train = clf.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc.py,333,pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGender.py,276,"featureProcessor = LinearDiscriminantAnalysis(n_components=50).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGender.py,277,"# featureProcessor = SelectKBest(chi2, k=20)#.fit(features, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGender.py,278,"featureProcessor.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGender.py,279,X_train = featureProcessor.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGender.py,280,X_test = featureProcessor.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGender.py,282,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGender.py,283,pred_train = clf.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGender.py,287,pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v3_lstm.py,288,"clf.fit(batch_xs, batch_ys)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v3_lstm.py,289,"#clf.fit(batch_xs + random.uniform(0,0.01), batch_ys)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,276,norm_x = RobustScaler().fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,277,"X_train, X_test = norm_x.transform(X_train), norm_x.transform(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,300,"# featureProcessor = LinearDiscriminantAnalysis(n_components=150).fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,301,"featureProcessor = SelectKBest(chi2, k=1000)#.fit(features, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,303,"featureProcessor.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,306,X_train = featureProcessor.transform(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,307,X_test = featureProcessor.transform(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,310,featureNameIndex = featureProcessor.transform(np.array([featureNameIndex]))[0]
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,313,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,314,pred_train = clf.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v1.py,318,pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_lstm.py,285,#norm_x = StandardScaler().fit(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_lstm.py,286,"#X_train, X_test = norm_x.transform(X_train), norm_x.transform(X_test)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_lstm.py,298,"clf.fit(batch_xs, batch_ys)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_clfs.py,244,"clf.fit(X_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_clfs.py,245,pred_train = clf.predict(X_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/1.0/predictGenderInc_v2_clfs.py,249,pred = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classificationResultAnnalysis.py,47,res = clf.predict([dfClean])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classificationResultAnnalysis.py,99,"clf.fit(trainX, trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classificationResultAnnalysis.py,102,y_train = clf.predict(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classificationResultAnnalysis.py,105,y_pred = clf.predict(testX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/exploratoryDataAnnalisys.py,141,# features = featureProcessor.transform(features)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/exploratoryDataAnnalisys.py,148,"featureProcessor = SelectKBest(mutual_info_classif, k=3000)#.fit(features, labels)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/exploratoryDataAnnalisys.py,149,"featureProcessor.fit(features, df['gender'])"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/exploratoryDataAnnalisys.py,150,featureNameIndex = featureProcessor.transform(np.array([featureNameIndex]))[0]
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,63,"self.baseModels[modelName].fit(XMap[modelName], Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,72,"self.metaModel.fit(basePrediction, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,81,result = self.metaModel.predict(basePrediction)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,103,"featureProcessor.fit(trainX[clfName], trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,104,trainX[clfName] = featureProcessor.transform(trainX[clfName])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,105,testX[clfName] = featureProcessor.transform(testX[clfName])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,110,"self.fit(trainX, trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,112,y_train = self.predict(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,115,y_pred = self.predict(testX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,265,"# featureProcessor.fit(trainX, trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,266,# trainX = featureProcessor.transform(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,267,# testX = featureProcessor.transform(testX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,269,"clf.fit(trainX, trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,272,y_train = clf.predict(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,275,y_pred = clf.predict(testX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,345,oneHotEncoder4Y = OneHotEncoder().fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,362,batch_ys = oneHotEncoder4Y.transform(trainy).todense().astype(np.float32)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,370,"clf.fit(batch_xs, batch_ys)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,448,"# featureProcessor.fit(trainX, trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,449,# trainX = featureProcessor.transform(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,450,# testX = featureProcessor.transform(testX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,452,"clf.fit(trainX, trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,455,y_train = clf.predict(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierTraining.py,458,y_pred = clf.predict(testX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierWithUserInfo.py,124,"# featureProcessor.fit(trainX, trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierWithUserInfo.py,125,# trainX = featureProcessor.transform(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierWithUserInfo.py,126,# testX = featureProcessor.transform(testX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierWithUserInfo.py,128,"clf.fit(trainX, trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierWithUserInfo.py,131,y_train = clf.predict(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/classfierWithUserInfo.py,134,y_pred = clf.predict(testX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/sparkClassifier.py,211,x2selector_model = x2selector.fit(df_oriFeatures_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/sparkClassifier.py,212,df_good_oriFeatures_train = x2selector_model.transform(df_oriFeatures_train).\
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/sparkClassifier.py,214,df_good_oriFeatures_test = x2selector_model.transform(df_oriFeatures_test).\
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/sparkClassifier.py,219,"lrm = LogisticRegression(maxIter=20, regParam=0.1).fit(df_good_oriFeatures_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/sparkClassifier.py,220,nb = NaiveBayes().fit(df_good_oriFeatures_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/sparkClassifier.py,223,"blockSize=1, seed=123).fit(df_good_oriFeatures_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/sparkClassifier.py,231,predRes = clf.transform(df_good_oriFeatures_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/gender/2.0/sparkClassifier.py,238,predRes1 = clf.transform(df_good_oriFeatures_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/simple/clusterAnalysis.py,88,cluster.fit(self.featuresPro)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/hupu/job/simple/clusterAnalysis.py,89,self.pred = cluster.predict(self.featuresPro)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/jingdong/job/sparkClassfier4Sentiment.py,254,x2selector_model = x2selector.fit(df_oriFeatures_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/jingdong/job/sparkClassfier4Sentiment.py,255,df_good_oriFeatures_train = x2selector_model.transform(df_oriFeatures_train).\
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/jingdong/job/sparkClassfier4Sentiment.py,257,df_good_oriFeatures_test = x2selector_model.transform(df_oriFeatures_test).\
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/jingdong/job/sparkClassfier4Sentiment.py,260,df_good_oriFeatures_weibo = x2selector_model.transform(df_weiboTestData).\
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/jingdong/job/sparkClassfier4Sentiment.py,265,"lrm = LogisticRegression(maxIter=20, regParam=0.1).fit(df_good_oriFeatures_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/jingdong/job/sparkClassfier4Sentiment.py,266,nb = NaiveBayes().fit(df_good_oriFeatures_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/jingdong/job/sparkClassfier4Sentiment.py,269,"blockSize=1, seed=123).fit(df_good_oriFeatures_train)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/jingdong/job/sparkClassfier4Sentiment.py,277,predRes = clf.transform(df_good_oriFeatures_train)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/jingdong/job/sparkClassfier4Sentiment.py,284,predRes1 = clf.transform(df_good_oriFeatures_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo_clean.py,145,one_hot.fit(class_label_list)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo_clean.py,146,class_label_one_hot = one_hot.transform(class_label_list).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo_clean.py,260,model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo_clean.py,262,#     res = model.predict(['我跟你说过多少遍了'])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn.py,126,one_hot.fit(class_label_list)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn.py,127,class_label_one_hot = one_hot.transform(class_label_list).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn.py,240,model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo.py,180,one_hot.fit(class_label_list)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo.py,181,class_label_one_hot = one_hot.transform(class_label_list).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo.py,294,model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo.py,297,#     res = model.predict(['不要再吃了，胖了会被杀掉的！'])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo_clean_rnn.py,167,one_hot.fit(class_label_list)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo_clean_rnn.py,168,class_label_one_hot = one_hot.transform(class_label_list).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo_clean_rnn.py,282,model.fit()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/text_classification_text_cnn_weibo_clean_rnn.py,284,#     res = model.predict(['我跟你说过多少遍了'])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/text_classification/train_char_vec.py,107,embedding_trainer.fit()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel.py,87,preds = model.predict(inputData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel.py,114,"clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel.py,167,Y = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel.py,185,"#     clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/ways.py,35,preds = model.predict(inputData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/ways.py,52,"clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark.py,342,model = clf.fit(trainData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark.py,348,train_prediction = model.transform(trainData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark.py,349,test_prediction = model.transform(testData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark.py,429,model = clf.fit(data4training)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark.py,434,res = model.transform(df2Submit)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark_stage_II.py,343,model = clf.fit(trainData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark_stage_II.py,349,train_prediction = model.transform(trainData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark_stage_II.py,350,test_prediction = model.transform(testData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark_stage_II.py,430,model = clf.fit(data4training)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/trainModel_spark_stage_II.py,435,res = model.transform(df2Submit)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/plans/trainModel.py,80,preds = model.predict(inputData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/plans/trainModel.py,105,"clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/plans/trainModel.py,157,Y = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/plans/trainModel.py,173,"#     clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/plans/trainModel_20190315.py,80,preds = model.predict(inputData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/plans/trainModel_20190315.py,105,"clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/plans/trainModel_20190315.py,157,Y = clf.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/repeatUser/plans/trainModel_20190315.py,173,"#     clf.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,55,"self.clf_map[age_roup].fit(X_this_age_group, np.reshape(Y_this_age_group.values, [-1]))"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,63,"self.clf_map[age_roup].fit(X_this_age_group, np.reshape(Y_this_age_group.values, [-1]))"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,75,label = clf.predict([input_data])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,145,"clf.fit(trainInput, trainOutput)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,147,pred = clf.predict(trainInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,150,pred = clf.predict(testInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,169,"clf.fit(trainX, trainY.values)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,182,"# selector.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,183,# trainX = selector.transform(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,190,"#     clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_age.py,192,#     labels = clf.predict(contData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test1.py,279,"clf.fit(trainInput, trainOutput.values)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test1.py,281,pred = clf.predict(trainInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test1.py,286,pred = clf.predict(testInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test1.py,305,"# selector.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test1.py,306,# trainX = selector.transform(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test1.py,314,"#  clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test1.py,317,#  # contData = selector.transform(contData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test1.py,318,#  labels = clf.predict(contData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test.py,294,"clf.fit(trainInput, trainOutput.values)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test.py,296,pred = clf.predict(trainInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test.py,299,pred = clf.predict(testInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test.py,318,"clf.fit(trainX, trainY.values)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test.py,331,"# selector.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test.py,332,# trainX = selector.transform(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test.py,338,"#     clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/test.py,340,#     labels = clf.predict(contData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_test_different_feature_process.py,68,"clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_test_different_feature_process.py,71,labels = clf.predict(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_test_different_feature_process.py,117,"clf.fit(trainInput, trainOutput.values)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_test_different_feature_process.py,119,pred = clf.predict(trainInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_test_different_feature_process.py,123,pred = clf.predict(testInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_test_different_feature_process.py,143,"clf.fit(trainX, trainY.values)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_test_different_feature_process.py,154,"clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main_test_different_feature_process.py,156,labels = clf.predict(contData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/itsData.py,48,"print(clf.predict(""没有房产证""))"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main.py,73,"clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main.py,76,labels = clf.predict(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main.py,116,"clf.fit(trainInput, trainOutput.values)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main.py,118,pred = clf.predict(trainInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main.py,122,pred = clf.predict(testInput)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main.py,142,"clf.fit(trainX, trainY.values)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main.py,153,"clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/tasks/tianchi/happiness/main.py,155,labels = clf.predict(contData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/learning/deepLearning/a_simple_GAN_v1.2.py,184,"model.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/learning/deepLearning/a_simple_GAN_v1.0.py,177,"model.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/AdaBoost.py,24,"self.tree_list[i].fit(X_new, Y_new)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/AdaBoost.py,28,pred_class = self.tree_list[i].predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/AdaBoost.py,42,pred = self.tree_list[i].predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/AdaBoost.py,64,prediction = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/AdaBoost.py,80,"clf.fit(trainX, trainY)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/DecisionTree_C4_5.py,213,"clf.fit(inputList, outputList)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/DecisionTree_C4_5.py,229,"#     clf.fit(inputData, outputData)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CRF.py,247,print(print(model.predict(sentenceList[0][0])))
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CRF.py,400,model.fit(sentenceList)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CRF.py,404,res = model.predict(line[0])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CRF.py,409,# res = model.predict(s)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CRF.py,415,#     res = model.predict(s)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CNNSoftmax.py,199,imageList = layer.predict(imageList)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CNNSoftmax.py,241,"clf.fit(testInputList, testOutput)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CNNSoftmax.py,243,pred = clf.predict(testInputList)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CNNSoftmax.py,265,"# clf.fit(trainingInput, traingOutput)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CNNSoftmax.py,273,pred = clf.predict(testInputList)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/LogisticRegression.py,172,"model.fit(inputList, outputList)#训练"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/LogisticRegression.py,174,predList = model.predict(testInputList)#预测
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/GBDTRegression.py,17,"model.fit(x, residual)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/GBDTRegression.py,19,prediction = model.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/GBDTRegression.py,25,new_pred = np.array(model.predict(x))
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/GBDTRegression.py,47,"model.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/GBDTRegression.py,50,prediction = model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/min_edit_distance.py,222,#     vilent_v1.fit()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/min_edit_distance.py,225,vilent_v2.fit()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/min_edit_distance.py,228,DP_version.fit()
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/word2vec.py,237,"self.ann.fit(trainingDataInput, trainingDataOutput)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/word2vec.py,505,model.fit(corpusFileNew)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/test1.py,152,imageList = layer.predict(imageList)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/test1.py,196,"#     clf.fit(trainingInput, traingOutput)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/test1.py,202,pred = clf.predict(testInputList)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CNN.py,49,outputImageList = self.predict(imageList)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CRFMP.py,267,print(model.predict(sentenceList[0][0]))
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CRFMP.py,469,res = model.predict(line[0])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CRFMP.py,474,# res = model.predict(s)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CRFMP.py,480,#     res = model.predict(s)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/deepLearning.py,95,self.oneHotEncoder4Y = OneHotEncoder().fit(YSample)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/deepLearning.py,98,batch_ys = self.oneHotEncoder4Y.transform(Y).todense().astype(np.float32)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/deepLearning.py,110,oneHotEncoder4Y = OneHotEncoder().fit(Y)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/deepLearning.py,118,#     print(oneHotEncoder4Y.transform(Y).todense())
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/deepLearning.py,130,"clf.fit(batch_xs, batch_ys)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/LinearRegression.py,106,self.y_bar = self.predict(self.x)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/LinearRegression.py,120,self.y_bar = self.predict(self.x)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/LinearRegression.py,141,self.y_bar = self.predict(self.x)#因变量的预测值
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/LinearRegression.py,177,"model.fit(inputList, outputList)#训练"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/LinearRegression.py,179,res = model.predict(np.array(myX))#预测
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/DecisionTree_Low.py,180,"clf.fit(inputList, outputList)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/DecisionTree_Low.py,213,"clf.fit(inputData, outputData)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/DecisionTree_ID3.py,246,"clf.fit(inputList, outputList)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/DecisionTree_ID3.py,265,"#     clf.fit(inputData, outputData)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CARTRegression.py,158,"model.fit(X, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/CARTRegression.py,161,prediction = model.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/BPANN.py,224,"model.fit(inputList, outputList)#训练"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/BPANN.py,227,predList = model.predict(testInput)#预测
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/simple_RNN_tf.py,103,"loss_v, final_output = model.fit(X_batch, Y_batch)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/stacking.py,31,"self.baseModels[modelName].fit(XMap[modelName], Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/stacking.py,40,"self.metaModel.fit(basePrediction, Y)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/stacking.py,49,result = self.metaModel.predict(basePrediction)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/stacking.py,71,"# featureProcessor.fit(trainX[clfName], trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/stacking.py,72,# trainX[clfName] = featureProcessor.transform(trainX[clfName])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/stacking.py,73,# testX[clfName] = featureProcessor.transform(testX[clfName])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/stacking.py,78,"self.fit(trainX, trainy)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/stacking.py,80,y_train = self.predict(trainX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/stacking.py,83,y_pred = self.predict(testX)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/ArtificialFishSwarmAlgorithm.py,141,afsa.fit(epoch_num=1000)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/Softmax.py,266,"model.fit(inputList, outputList)#训练"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/Softmax.py,269,predList = model.predict(inputList)#预测
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/word2vec_Low.py,222,"self.ann.fit(trainingDataInput, trainingDataOutput)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/word2vec_Low.py,335,model.fit(corpusFileNew)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/naiveBayes.py,105,res = clf.predict(X_test)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/HMM.py,172,model.fit(sentenceList)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/HMM.py,173,res = model.predict(sentenceList[100][0])
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/HMM.py,177,res = model.predict(s)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/HMM.py,183,res = model.predict(s)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/LinearRegression.py,108,self.y_bar = self.predict(self.x)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/LinearRegression.py,125,self.y_bar = self.predict(self.x)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/LinearRegression.py,146,self.y_bar = self.predict(self.x)#因变量的预测值
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/LinearRegression.py,182,"model.fit(inputList, outputList)#训练"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/LinearRegression.py,184,res = model.predict(np.array(myX))#预测
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/StepwiseRegression.py,53,"self.best_model.fit(trainInput, trainOutput)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/StepwiseRegression.py,58,return self.best_model.predict(inputData)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/StepwiseRegression.py,65,"model.fit(trainInput, trainOutput)"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/StepwiseRegression.py,86,"model.fit(inputList, outputList)#训练"
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/algoritm/regression/StepwiseRegression.py,87,res = model.predict(inputList)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/nlp/LSA.py,116,topic_model.fit(document_list)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/nlp/pLSA.py,35,topic_model.fit(document_list)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/nlp/single_pass/single_pass_v1.py,92,single_passor.fit(docs)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/nlp/single_pass/single_pass_v2.py,59,single_passor.fit(docs)
/Users/cba/Desktop/github_datascience_code/download_code/lipengyuer_DataScience/src/nlp/single_pass/single_pass_v3.py,77,single_passor.fit(docs)
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/util.py,91,x_train[col] = label_encode.fit_transform(x_train[col])
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/util.py,94,x_test[col] = label_encode.transform(x_test[col])
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/modelling/unsupervised_models.py,113,visualizer.fit(self.train_data)
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/modelling/util.py,134,"visualizer_scores.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/modelling/util.py,138,"visualizer_lcurve.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/modelling/model.py,406,"model.fit(self.train_data, self.y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/modelling/model.py,475,model.fit(self.train_data)
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/visualizations/visualizations.py,805,"reduced_df = pd.DataFrame(reducer.fit_transform(self.x_train.drop(col, axis=1)))"
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/model_analysis/unsupervised_model_analysis.py,31,self.y_pred = self.model.predict(self.x_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/model_analysis/unsupervised_model_analysis.py,33,self.y_pred = self.model.fit_predict(self.x_train)
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/model_analysis/model_analysis.py,48,"data[""predicted""] = self.model.predict(data)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/model_analysis/model_analysis.py,86,self.y_pred = self.model.predict(
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/model_analysis/classification_model_analysis.py,817,"viz.fit(self.x_train[features].values, self.y_train.values)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/util.py,37,x_train = pd.DataFrame(reducer.fit_transform(x_train))
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/util.py,41,x_test = pd.DataFrame(reducer.transform(x_test))
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,93,enc_data = enc.fit_transform(self.x_train[list_of_cols]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,100,enc_test = enc.transform(self.x_test[list_of_cols]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,243,enc_data = enc.fit_transform(self.x_train[col]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,248,enc_test = enc.transform(self.x_test[col]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,371,enc_data = enc.fit_transform(self.x_train[col]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,376,enc_test = enc.transform(self.x_test[col]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,438,enc_data = enc.fit_transform(self.x_train[col]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,443,enc_test = enc.transform(self.x_test[col]).toarray()
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,710,scaled_data = poly.fit_transform(self.x_train[list_of_cols])
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,715,scaled_test = poly.transform(self.x_test)
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,799,"self.x_train[col] = enc.fit_transform(self.x_train[col].values.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,802,"self.x_test[col] = enc.transform(self.x_test[col].values.reshape(-1, 1))"
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/feature_engineering/feature.py,977,"chi2_best = SelectKBest(chi2, k=k).fit(self.x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/preprocessing/numeric.py,53,scaled_data = scaler.fit_transform(x_train[list_of_cols])
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/preprocessing/numeric.py,58,scaled_x_test = scaler.transform(x_test[list_of_cols])
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/cleaning/clean.py,577,train_knn_transformed = knn.fit_transform(self.train_data.values)
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/cleaning/clean.py,583,test_knn_transformed = knn.fit_transform(self.test_data.values)
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/cleaning/numeric.py,48,fit_data = imp.fit_transform(x_train[list_of_cols])
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/cleaning/numeric.py,53,fit_x_test = imp.transform(x_test[list_of_cols])
/Users/cba/Desktop/github_datascience_code/download_code/Ashton-Sidhu_aethos/aethos/stats/stats.py,418,"mod = ols(formula, data=self.x_train).fit()"
/Users/cba/Desktop/github_datascience_code/download_code/ArtLabss_open-data-anonymizer/anonympy/pandas/core_pandas.py,913,"ser = pd.DataFrame(pca.fit_transform(self._df[[columns]]),"
/Users/cba/Desktop/github_datascience_code/download_code/ArtLabss_open-data-anonymizer/anonympy/pandas/core_pandas.py,930,"return pd.DataFrame(pca.fit_transform(self._df[columns]),"
/Users/cba/Desktop/github_datascience_code/download_code/ArtLabss_open-data-anonymizer/anonympy/pandas/core_pandas.py,943,self._df[columns] = pca.fit_transform(self._df[columns])
/Users/cba/Desktop/github_datascience_code/download_code/LouisFoucard_DSB17_3d_lung_nodule_classifier/code/utils.py,373,'first by calling `.fit(numpy_data)`.')
/Users/cba/Desktop/github_datascience_code/download_code/LouisFoucard_DSB17_3d_lung_nodule_classifier/code/utils.py,381,'first by calling `.fit(numpy_data)`.')
/Users/cba/Desktop/github_datascience_code/download_code/LouisFoucard_DSB17_3d_lung_nodule_classifier/code/utils.py,391,'first by calling `.fit(numpy_data)`.')
/Users/cba/Desktop/github_datascience_code/download_code/LouisFoucard_DSB17_3d_lung_nodule_classifier/code/utils.py,478,raise ValueError('Input to `.fit()` should have rank 4. '
/Users/cba/Desktop/github_datascience_code/download_code/LouisFoucard_DSB17_3d_lung_nodule_classifier/code/preprocessing.py,368,'first by calling `.fit(numpy_data)`.')
/Users/cba/Desktop/github_datascience_code/download_code/LouisFoucard_DSB17_3d_lung_nodule_classifier/code/preprocessing.py,376,'first by calling `.fit(numpy_data)`.')
/Users/cba/Desktop/github_datascience_code/download_code/LouisFoucard_DSB17_3d_lung_nodule_classifier/code/preprocessing.py,386,'first by calling `.fit(numpy_data)`.')
/Users/cba/Desktop/github_datascience_code/download_code/LouisFoucard_DSB17_3d_lung_nodule_classifier/code/preprocessing.py,479,raise ValueError('Input to `.fit()` should have rank 4. '
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/RegressionTreeTests.py,109,"regressionTree = builder.fit(x,y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/RegressionTreeTests.py,128,"regressionTree = builder.fit(x,y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/LogisticRegressionTests.py,54,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/LogisticRegressionTests.py,86,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/LogisticRegressionTests.py,110,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/LogisticRegressionTests.py,111,return fit.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/LogisticRegressionTests.py,130,").fit(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/LogisticRegressionTests.py,131,"return fit.score(X, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,64,"fit = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,119,"model = GradientBoostedClassifierBuilder(1, 1, 1.0).fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,120,"return model.score(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,132,"model = GradientBoostedClassifierBuilder(1, 1, 1.0).fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,133,return model.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,145,"model = GradientBoostedClassifierBuilder(1, 1, 1.0).fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,159,"fit = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,216,"model = GradientBoostedRegressorBuilder(1, 1, 1.0).fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,217,"return model.score(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,226,"model = GradientBoostedRegressorBuilder(1, 1, 1.0).fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/ufora/FORA/python/PurePython/GradientBoostingTests.py,227,return model.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/bigbox_perf/regressionTrees/testBigboxRegressionTrees.py,56,"regressionTreeBuilder.fit(dfPredictors, dfResponse);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/bigbox_perf/regressionTrees/testBigboxRegressionTrees.py,88,"return "";(%s; fitRegressionTree.predict(dfPredictors));"" % dirtyFlag"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/bigbox_perf/gradientBoostingRegression/testBigboxGbmSimultaneous.py,95,"""Vector.range(%s).apply(fun(x) { builder.fit(dfPredictors[,-x-1], dfResponse[,-x-1]) })"""
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,38,"let fit = builder.fit(X, y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,39,"assertions.assertEqual(fit.score(X, y), 1.0)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,60,"regressionTree.predict(df(""X"", ""Y"")[_])"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,67,regressionTree.predict(df[_])
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,72,let predictedValues = regressionTree.predict(df);
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,93,"let regressionTree = regressionTreeBuilder.fit(X, y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,95,"assertions.assertClose(regressionTree.predict(df[0]), -0.953882430908236);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,111,let predictedValues = regressionTree.predict(df);
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,137,"let tree1 = treeBuilder1.fit(X, y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,139,"let tree2 = treeBuilder2.fit(X, y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,141,"let mse1 = ((tree1.predict(X) - y.getColumn(""y"")) ** 2).sum() / size(X);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,143,"let mse2 = ((tree2.predict(X) - y.getColumn(""y"")) ** 2).sum() / size(X);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,167,"let tree = treeBuilder.fit(X, neg_gradient)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,170,"assertions.assertClose(tree.score(X, y), 0.53214422106820458)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,186,"let fit = builder.fit(X,y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,187,"fit.score(X, y)"""""","
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,202,"let fit = builder.fit(X,y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,203,"fit.score(X, y)"""""","
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,220,"let fit = builder.fit(X,y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,221,"fit.score(X, y)"""""","
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,236,"let fit = builder.fit(X,y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,237,"fit.score(X, y)"""""","
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,256,"let fit = builder.fit(X, y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,257,"fit.score(X, y)"""""","
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,269,"let fit = builder.fit(X, y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,274,"fit.score(X, y)"""""","
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,286,"let fit = builder.fit(X, y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,291,"fit.score(X, y)"""""","
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,304,"let fit = builder.fit(X, y);"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/test_scripts/fora/gradientBoosting.py,306,"fit.score(X, y)"""""","
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/logistic/BinaryLogisticRegressionModel.py,68,predictions = self.predict(X)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/logistic/BinaryLogisticRegressionFitter.py,93,"model = fitter.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/GradientBoostedClassifierBuilder.py,62,"scores = scores + [fitter.model.score(x, y)]"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/GradientBoostedClassifierBuilder.py,176,"model = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionModel.py,70,"model = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionModel.py,73,"model.score(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionModel.py,76,"return self.additiveRegressionTree.score(X, yTrue)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionModel.py,89,"model = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionModel.py,92,"model.score(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionModel.py,95,"return self.additiveRegressionTree.predict(df, nEstimators)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionModel.py,98,return previousPredictions + self.additiveRegressionTree.getTree(-1).predict(df)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionModel.py,102,predictions = self.predict(self.X)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionTree.py,59,"regressionTree = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionTree.py,62,regressionTree.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionTree.py,111,"regressionTree = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionTree.py,114,"regressionTree.score(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionTree.py,123,yPredicted = self.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionTree.py,170,"regressionTree = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionTree.py,273,"regressionTree = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/RegressionTree.py,387,").fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/BinaryClassificationModel.py,93,return 1.0 / (1.0 + math.exp(2.0 * self.additiveRegressionTree.predict(row)))
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/BinaryClassificationModel.py,111,"model = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/BinaryClassificationModel.py,121,regressionValues = self.additiveRegressionTree.predict(self.X)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/BinaryClassificationModel.py,124,self.additiveRegressionTree.getTree(-1).predict(self.X)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/BinaryClassificationModel.py,175,"model = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/BinaryClassificationModel.py,178,model.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/BinaryClassificationModel.py,197,"model = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/BinaryClassificationModel.py,200,"model.score(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/BinaryClassificationModel.py,231,"model = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/GradientBoostedRegressorBuilder.py,61,"scores = scores + [fitter.model.score(x, y)]"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/GradientBoostedRegressorBuilder.py,137,"scores = scores + [fitter.model.score(x, y)]"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/GradientBoostedRegressorBuilder.py,168,"model = builder.fit(x, y)"
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/AdditiveRegressionTree.py,48,return sum(tree.predict(row) for tree in self.trees[:nEstimators])
/Users/cba/Desktop/github_datascience_code/download_code/ufora_ufora/packages/python/pyfora/algorithms/regressionTrees/AdditiveRegressionTree.py,57,yPredicted = self.predict(x)
/Users/cba/Desktop/github_datascience_code/download_code/vivek2319_Data-Science-From-Linkedin/gridsearch-best-parameters-random-forest-class.py,18,"CV_rfc.fit(X_train, y_train.values.ravel())"
/Users/cba/Desktop/github_datascience_code/download_code/tylerjrichards_Streamlit-for-Data-Science/penguin_ml/penguins_streamlit.py,53,"rfc.fit(x_train, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/tylerjrichards_Streamlit-for-Data-Science/penguin_ml/penguins_streamlit.py,54,y_pred = rfc.predict(x_test)
/Users/cba/Desktop/github_datascience_code/download_code/tylerjrichards_Streamlit-for-Data-Science/penguin_ml/penguins_streamlit.py,85,new_prediction = rfc.predict(
/Users/cba/Desktop/github_datascience_code/download_code/tylerjrichards_Streamlit-for-Data-Science/penguin_ml/penguins_ml.py,28,"rfc.fit(x_train.values, y_train)"
/Users/cba/Desktop/github_datascience_code/download_code/tylerjrichards_Streamlit-for-Data-Science/penguin_ml/penguins_ml.py,29,y_pred = rfc.predict(x_test.values)
